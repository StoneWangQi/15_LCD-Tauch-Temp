Component: ARM Compiler 6.14 Tool: armlink [5db06800]

==============================================================================

Section Cross References

    startup_stm32f10x_hd.o(RESET) refers to startup_stm32f10x_hd.o(STACK) for __initial_sp
    startup_stm32f10x_hd.o(RESET) refers to startup_stm32f10x_hd.o(.text) for Reset_Handler
    startup_stm32f10x_hd.o(RESET) refers to stm32f10x_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32f10x_hd.o(RESET) refers to stm32f10x_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32f10x_hd.o(RESET) refers to stm32f10x_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_stm32f10x_hd.o(RESET) refers to stm32f10x_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_stm32f10x_hd.o(RESET) refers to stm32f10x_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_stm32f10x_hd.o(RESET) refers to stm32f10x_it.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f10x_hd.o(RESET) refers to stm32f10x_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_stm32f10x_hd.o(RESET) refers to stm32f10x_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f10x_hd.o(RESET) refers to systick_book.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_hd.o(RESET) refers to exit_book.o(.text.EXTI0_IRQHandler) for EXTI0_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to usart_book.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to exit_book.o(.text.EXTI15_10_IRQHandler) for EXTI15_10_IRQHandler
    startup_stm32f10x_hd.o(.text) refers to system_stm32f10x.o(.text.SystemInit) for SystemInit
    startup_stm32f10x_hd.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_stm32f10x.o(.ARM.exidx.text.SystemInit) refers to system_stm32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_PriorityGroupConfig) refers to misc.o(.text.NVIC_PriorityGroupConfig) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_Init) refers to misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_SetVectorTable) refers to misc.o(.text.NVIC_SetVectorTable) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.text.ADC_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_adc.o(.ARM.exidx.text.ADC_DeInit) refers to stm32f10x_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_Init) refers to stm32f10x_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_StructInit) refers to stm32f10x_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_Cmd) refers to stm32f10x_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_DMACmd) refers to stm32f10x_adc.o(.text.ADC_DMACmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ITConfig) refers to stm32f10x_adc.o(.text.ADC_ITConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ResetCalibration) refers to stm32f10x_adc.o(.text.ADC_ResetCalibration) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetResetCalibrationStatus) refers to stm32f10x_adc.o(.text.ADC_GetResetCalibrationStatus) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_StartCalibration) refers to stm32f10x_adc.o(.text.ADC_StartCalibration) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetCalibrationStatus) refers to stm32f10x_adc.o(.text.ADC_GetCalibrationStatus) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_SoftwareStartConvCmd) refers to stm32f10x_adc.o(.text.ADC_SoftwareStartConvCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetSoftwareStartConvStatus) refers to stm32f10x_adc.o(.text.ADC_GetSoftwareStartConvStatus) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_DiscModeChannelCountConfig) refers to stm32f10x_adc.o(.text.ADC_DiscModeChannelCountConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_DiscModeCmd) refers to stm32f10x_adc.o(.text.ADC_DiscModeCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_RegularChannelConfig) refers to stm32f10x_adc.o(.text.ADC_RegularChannelConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ExternalTrigConvCmd) refers to stm32f10x_adc.o(.text.ADC_ExternalTrigConvCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetConversionValue) refers to stm32f10x_adc.o(.text.ADC_GetConversionValue) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetDualModeConversionValue) refers to stm32f10x_adc.o(.text.ADC_GetDualModeConversionValue) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_AutoInjectedConvCmd) refers to stm32f10x_adc.o(.text.ADC_AutoInjectedConvCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_InjectedDiscModeCmd) refers to stm32f10x_adc.o(.text.ADC_InjectedDiscModeCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ExternalTrigInjectedConvConfig) refers to stm32f10x_adc.o(.text.ADC_ExternalTrigInjectedConvConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ExternalTrigInjectedConvCmd) refers to stm32f10x_adc.o(.text.ADC_ExternalTrigInjectedConvCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_SoftwareStartInjectedConvCmd) refers to stm32f10x_adc.o(.text.ADC_SoftwareStartInjectedConvCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetSoftwareStartInjectedConvCmdStatus) refers to stm32f10x_adc.o(.text.ADC_GetSoftwareStartInjectedConvCmdStatus) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_InjectedChannelConfig) refers to stm32f10x_adc.o(.text.ADC_InjectedChannelConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_InjectedSequencerLengthConfig) refers to stm32f10x_adc.o(.text.ADC_InjectedSequencerLengthConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_SetInjectedOffset) refers to stm32f10x_adc.o(.text.ADC_SetInjectedOffset) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetInjectedConversionValue) refers to stm32f10x_adc.o(.text.ADC_GetInjectedConversionValue) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd) refers to stm32f10x_adc.o(.text.ADC_AnalogWatchdogCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig) refers to stm32f10x_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig) refers to stm32f10x_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_TempSensorVrefintCmd) refers to stm32f10x_adc.o(.text.ADC_TempSensorVrefintCmd) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to stm32f10x_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ClearFlag) refers to stm32f10x_adc.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_GetITStatus) refers to stm32f10x_adc.o(.text.ADC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit) refers to stm32f10x_adc.o(.text.ADC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_bkp.o(.text.BKP_DeInit) refers to stm32f10x_rcc.o(.text.RCC_BackupResetCmd) for RCC_BackupResetCmd
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_DeInit) refers to stm32f10x_bkp.o(.text.BKP_DeInit) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_TamperPinLevelConfig) refers to stm32f10x_bkp.o(.text.BKP_TamperPinLevelConfig) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_TamperPinCmd) refers to stm32f10x_bkp.o(.text.BKP_TamperPinCmd) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_ITConfig) refers to stm32f10x_bkp.o(.text.BKP_ITConfig) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_RTCOutputConfig) refers to stm32f10x_bkp.o(.text.BKP_RTCOutputConfig) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_SetRTCCalibrationValue) refers to stm32f10x_bkp.o(.text.BKP_SetRTCCalibrationValue) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_WriteBackupRegister) refers to stm32f10x_bkp.o(.text.BKP_WriteBackupRegister) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_ReadBackupRegister) refers to stm32f10x_bkp.o(.text.BKP_ReadBackupRegister) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_GetFlagStatus) refers to stm32f10x_bkp.o(.text.BKP_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_ClearFlag) refers to stm32f10x_bkp.o(.text.BKP_ClearFlag) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_GetITStatus) refers to stm32f10x_bkp.o(.text.BKP_GetITStatus) for [Anonymous Symbol]
    stm32f10x_bkp.o(.ARM.exidx.text.BKP_ClearITPendingBit) refers to stm32f10x_bkp.o(.text.BKP_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_can.o(.text.CAN_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_can.o(.ARM.exidx.text.CAN_DeInit) refers to stm32f10x_can.o(.text.CAN_DeInit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_Init) refers to stm32f10x_can.o(.text.CAN_Init) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_FilterInit) refers to stm32f10x_can.o(.text.CAN_FilterInit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_StructInit) refers to stm32f10x_can.o(.text.CAN_StructInit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_SlaveStartBank) refers to stm32f10x_can.o(.text.CAN_SlaveStartBank) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_DBGFreeze) refers to stm32f10x_can.o(.text.CAN_DBGFreeze) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_TTComModeCmd) refers to stm32f10x_can.o(.text.CAN_TTComModeCmd) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_Transmit) refers to stm32f10x_can.o(.text.CAN_Transmit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_TransmitStatus) refers to stm32f10x_can.o(.text.CAN_TransmitStatus) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_CancelTransmit) refers to stm32f10x_can.o(.text.CAN_CancelTransmit) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_Receive) refers to stm32f10x_can.o(.text.CAN_Receive) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_FIFORelease) refers to stm32f10x_can.o(.text.CAN_FIFORelease) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_MessagePending) refers to stm32f10x_can.o(.text.CAN_MessagePending) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_OperatingModeRequest) refers to stm32f10x_can.o(.text.CAN_OperatingModeRequest) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_Sleep) refers to stm32f10x_can.o(.text.CAN_Sleep) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_WakeUp) refers to stm32f10x_can.o(.text.CAN_WakeUp) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetLastErrorCode) refers to stm32f10x_can.o(.text.CAN_GetLastErrorCode) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetReceiveErrorCounter) refers to stm32f10x_can.o(.text.CAN_GetReceiveErrorCounter) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetLSBTransmitErrorCounter) refers to stm32f10x_can.o(.text.CAN_GetLSBTransmitErrorCounter) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_ITConfig) refers to stm32f10x_can.o(.text.CAN_ITConfig) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetFlagStatus) refers to stm32f10x_can.o(.text.CAN_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_ClearFlag) refers to stm32f10x_can.o(.text.CAN_ClearFlag) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_GetITStatus) refers to stm32f10x_can.o(.text.CAN_GetITStatus) for [Anonymous Symbol]
    stm32f10x_can.o(.ARM.exidx.text.CAN_ClearITPendingBit) refers to stm32f10x_can.o(.text.CAN_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_cec.o(.text.CEC_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_cec.o(.ARM.exidx.text.CEC_DeInit) refers to stm32f10x_cec.o(.text.CEC_DeInit) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_Init) refers to stm32f10x_cec.o(.text.CEC_Init) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_Cmd) refers to stm32f10x_cec.o(.text.CEC_Cmd) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_ITConfig) refers to stm32f10x_cec.o(.text.CEC_ITConfig) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_OwnAddressConfig) refers to stm32f10x_cec.o(.text.CEC_OwnAddressConfig) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_SetPrescaler) refers to stm32f10x_cec.o(.text.CEC_SetPrescaler) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_SendDataByte) refers to stm32f10x_cec.o(.text.CEC_SendDataByte) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_ReceiveDataByte) refers to stm32f10x_cec.o(.text.CEC_ReceiveDataByte) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_StartOfMessage) refers to stm32f10x_cec.o(.text.CEC_StartOfMessage) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_EndOfMessageCmd) refers to stm32f10x_cec.o(.text.CEC_EndOfMessageCmd) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_GetFlagStatus) refers to stm32f10x_cec.o(.text.CEC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_ClearFlag) refers to stm32f10x_cec.o(.text.CEC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_GetITStatus) refers to stm32f10x_cec.o(.text.CEC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_cec.o(.ARM.exidx.text.CEC_ClearITPendingBit) refers to stm32f10x_cec.o(.text.CEC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_crc.o(.ARM.exidx.text.CRC_ResetDR) refers to stm32f10x_crc.o(.text.CRC_ResetDR) for [Anonymous Symbol]
    stm32f10x_crc.o(.ARM.exidx.text.CRC_CalcCRC) refers to stm32f10x_crc.o(.text.CRC_CalcCRC) for [Anonymous Symbol]
    stm32f10x_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC) refers to stm32f10x_crc.o(.text.CRC_CalcBlockCRC) for [Anonymous Symbol]
    stm32f10x_crc.o(.ARM.exidx.text.CRC_GetCRC) refers to stm32f10x_crc.o(.text.CRC_GetCRC) for [Anonymous Symbol]
    stm32f10x_crc.o(.ARM.exidx.text.CRC_SetIDRegister) refers to stm32f10x_crc.o(.text.CRC_SetIDRegister) for [Anonymous Symbol]
    stm32f10x_crc.o(.ARM.exidx.text.CRC_GetIDRegister) refers to stm32f10x_crc.o(.text.CRC_GetIDRegister) for [Anonymous Symbol]
    stm32f10x_dac.o(.text.DAC_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_dac.o(.ARM.exidx.text.DAC_DeInit) refers to stm32f10x_dac.o(.text.DAC_DeInit) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_Init) refers to stm32f10x_dac.o(.text.DAC_Init) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_StructInit) refers to stm32f10x_dac.o(.text.DAC_StructInit) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_Cmd) refers to stm32f10x_dac.o(.text.DAC_Cmd) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_DMACmd) refers to stm32f10x_dac.o(.text.DAC_DMACmd) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_SoftwareTriggerCmd) refers to stm32f10x_dac.o(.text.DAC_SoftwareTriggerCmd) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_DualSoftwareTriggerCmd) refers to stm32f10x_dac.o(.text.DAC_DualSoftwareTriggerCmd) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_WaveGenerationCmd) refers to stm32f10x_dac.o(.text.DAC_WaveGenerationCmd) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_SetChannel1Data) refers to stm32f10x_dac.o(.text.DAC_SetChannel1Data) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_SetChannel2Data) refers to stm32f10x_dac.o(.text.DAC_SetChannel2Data) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_SetDualChannelData) refers to stm32f10x_dac.o(.text.DAC_SetDualChannelData) for [Anonymous Symbol]
    stm32f10x_dac.o(.ARM.exidx.text.DAC_GetDataOutputValue) refers to stm32f10x_dac.o(.text.DAC_GetDataOutputValue) for [Anonymous Symbol]
    stm32f10x_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetREVID) refers to stm32f10x_dbgmcu.o(.text.DBGMCU_GetREVID) for [Anonymous Symbol]
    stm32f10x_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetDEVID) refers to stm32f10x_dbgmcu.o(.text.DBGMCU_GetDEVID) for [Anonymous Symbol]
    stm32f10x_dbgmcu.o(.ARM.exidx.text.DBGMCU_Config) refers to stm32f10x_dbgmcu.o(.text.DBGMCU_Config) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_DeInit) refers to stm32f10x_dma.o(.text.DMA_DeInit) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_Init) refers to stm32f10x_dma.o(.text.DMA_Init) for [Anonymous Symbol]
    stm32f10x_dma.o(.text.DMA_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    stm32f10x_dma.o(.ARM.exidx.text.DMA_StructInit) refers to stm32f10x_dma.o(.text.DMA_StructInit) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_Cmd) refers to stm32f10x_dma.o(.text.DMA_Cmd) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_ITConfig) refers to stm32f10x_dma.o(.text.DMA_ITConfig) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter) refers to stm32f10x_dma.o(.text.DMA_SetCurrDataCounter) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter) refers to stm32f10x_dma.o(.text.DMA_GetCurrDataCounter) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_GetFlagStatus) refers to stm32f10x_dma.o(.text.DMA_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_ClearFlag) refers to stm32f10x_dma.o(.text.DMA_ClearFlag) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_GetITStatus) refers to stm32f10x_dma.o(.text.DMA_GetITStatus) for [Anonymous Symbol]
    stm32f10x_dma.o(.ARM.exidx.text.DMA_ClearITPendingBit) refers to stm32f10x_dma.o(.text.DMA_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_DeInit) refers to stm32f10x_exti.o(.text.EXTI_DeInit) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_Init) refers to stm32f10x_exti.o(.text.EXTI_Init) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_StructInit) refers to stm32f10x_exti.o(.text.EXTI_StructInit) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt) refers to stm32f10x_exti.o(.text.EXTI_GenerateSWInterrupt) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus) refers to stm32f10x_exti.o(.text.EXTI_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_ClearFlag) refers to stm32f10x_exti.o(.text.EXTI_ClearFlag) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_GetITStatus) refers to stm32f10x_exti.o(.text.EXTI_GetITStatus) for [Anonymous Symbol]
    stm32f10x_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit) refers to stm32f10x_exti.o(.text.EXTI_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_SetLatency) refers to stm32f10x_flash.o(.text.FLASH_SetLatency) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_HalfCycleAccessCmd) refers to stm32f10x_flash.o(.text.FLASH_HalfCycleAccessCmd) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd) refers to stm32f10x_flash.o(.text.FLASH_PrefetchBufferCmd) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_Unlock) refers to stm32f10x_flash.o(.text.FLASH_Unlock) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_UnlockBank1) refers to stm32f10x_flash.o(.text.FLASH_UnlockBank1) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_Lock) refers to stm32f10x_flash.o(.text.FLASH_Lock) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_LockBank1) refers to stm32f10x_flash.o(.text.FLASH_LockBank1) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_ErasePage) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to stm32f10x_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32f10x_flash.o(.text.FLASH_GetBank1Status) for FLASH_GetBank1Status
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_EraseAllPages) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_EraseAllPages) refers to stm32f10x_flash.o(.text.FLASH_EraseAllPages) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_EraseAllBank1Pages) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastBank1Operation) for FLASH_WaitForLastBank1Operation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_EraseAllBank1Pages) refers to stm32f10x_flash.o(.text.FLASH_EraseAllBank1Pages) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_WaitForLastBank1Operation) refers to stm32f10x_flash.o(.text.FLASH_GetBank1Status) for FLASH_GetBank1Status
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_WaitForLastBank1Operation) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastBank1Operation) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_EraseOptionBytes) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_EraseOptionBytes) refers to stm32f10x_flash.o(.text.FLASH_EraseOptionBytes) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetReadOutProtectionStatus) refers to stm32f10x_flash.o(.text.FLASH_GetReadOutProtectionStatus) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_ProgramWord) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ProgramWord) refers to stm32f10x_flash.o(.text.FLASH_ProgramWord) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_ProgramHalfWord) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord) refers to stm32f10x_flash.o(.text.FLASH_ProgramHalfWord) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_ProgramOptionByteData) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ProgramOptionByteData) refers to stm32f10x_flash.o(.text.FLASH_ProgramOptionByteData) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_EnableWriteProtection) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_EnableWriteProtection) refers to stm32f10x_flash.o(.text.FLASH_EnableWriteProtection) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_ReadOutProtection) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ReadOutProtection) refers to stm32f10x_flash.o(.text.FLASH_ReadOutProtection) for [Anonymous Symbol]
    stm32f10x_flash.o(.text.FLASH_UserOptionByteConfig) refers to stm32f10x_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_UserOptionByteConfig) refers to stm32f10x_flash.o(.text.FLASH_UserOptionByteConfig) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetUserOptionByte) refers to stm32f10x_flash.o(.text.FLASH_GetUserOptionByte) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetWriteProtectionOptionByte) refers to stm32f10x_flash.o(.text.FLASH_GetWriteProtectionOptionByte) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetPrefetchBufferStatus) refers to stm32f10x_flash.o(.text.FLASH_GetPrefetchBufferStatus) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ITConfig) refers to stm32f10x_flash.o(.text.FLASH_ITConfig) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus) refers to stm32f10x_flash.o(.text.FLASH_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_ClearFlag) refers to stm32f10x_flash.o(.text.FLASH_ClearFlag) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetStatus) refers to stm32f10x_flash.o(.text.FLASH_GetStatus) for [Anonymous Symbol]
    stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetBank1Status) refers to stm32f10x_flash.o(.text.FLASH_GetBank1Status) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMDeInit) refers to stm32f10x_fsmc.o(.text.FSMC_NORSRAMDeInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDDeInit) refers to stm32f10x_fsmc.o(.text.FSMC_NANDDeInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDDeInit) refers to stm32f10x_fsmc.o(.text.FSMC_PCCARDDeInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMInit) refers to stm32f10x_fsmc.o(.text.FSMC_NORSRAMInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDInit) refers to stm32f10x_fsmc.o(.text.FSMC_NANDInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDInit) refers to stm32f10x_fsmc.o(.text.FSMC_PCCARDInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.text.FSMC_NORSRAMStructInit) refers to memseta.o(.text) for __aeabi_memclr4
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMStructInit) refers to stm32f10x_fsmc.o(.text.FSMC_NORSRAMStructInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.text.FSMC_NANDStructInit) refers to memseta.o(.text) for __aeabi_memclr4
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDStructInit) refers to stm32f10x_fsmc.o(.text.FSMC_NANDStructInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDStructInit) refers to stm32f10x_fsmc.o(.text.FSMC_PCCARDStructInit) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMCmd) refers to stm32f10x_fsmc.o(.text.FSMC_NORSRAMCmd) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDCmd) refers to stm32f10x_fsmc.o(.text.FSMC_NANDCmd) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDCmd) refers to stm32f10x_fsmc.o(.text.FSMC_PCCARDCmd) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDECCCmd) refers to stm32f10x_fsmc.o(.text.FSMC_NANDECCCmd) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_GetECC) refers to stm32f10x_fsmc.o(.text.FSMC_GetECC) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_ITConfig) refers to stm32f10x_fsmc.o(.text.FSMC_ITConfig) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_GetFlagStatus) refers to stm32f10x_fsmc.o(.text.FSMC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_ClearFlag) refers to stm32f10x_fsmc.o(.text.FSMC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_GetITStatus) refers to stm32f10x_fsmc.o(.text.FSMC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_ClearITPendingBit) refers to stm32f10x_fsmc.o(.text.FSMC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.text.GPIO_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(.text.GPIO_DeInit) refers to stm32f10x_gpio.o(.rodata..Lswitch.table.GPIO_DeInit.1) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to stm32f10x_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.text.GPIO_AFIODeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_AFIODeInit) refers to stm32f10x_gpio.o(.text.GPIO_AFIODeInit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Init) refers to stm32f10x_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to stm32f10x_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to stm32f10x_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to stm32f10x_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to stm32f10x_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to stm32f10x_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to stm32f10x_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Write) refers to stm32f10x_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to stm32f10x_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputConfig) refers to stm32f10x_gpio.o(.text.GPIO_EventOutputConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputCmd) refers to stm32f10x_gpio.o(.text.GPIO_EventOutputCmd) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinRemapConfig) refers to stm32f10x_gpio.o(.text.GPIO_PinRemapConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EXTILineConfig) refers to stm32f10x_gpio.o(.text.GPIO_EXTILineConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ETH_MediaInterfaceConfig) refers to stm32f10x_gpio.o(.text.GPIO_ETH_MediaInterfaceConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.text.I2C_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_DeInit) refers to stm32f10x_i2c.o(.text.I2C_DeInit) for [Anonymous Symbol]
    stm32f10x_i2c.o(.text.I2C_Init) refers to stm32f10x_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_Init) refers to stm32f10x_i2c.o(.text.I2C_Init) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_StructInit) refers to stm32f10x_i2c.o(.text.I2C_StructInit) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_Cmd) refers to stm32f10x_i2c.o(.text.I2C_Cmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_DMACmd) refers to stm32f10x_i2c.o(.text.I2C_DMACmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_DMALastTransferCmd) refers to stm32f10x_i2c.o(.text.I2C_DMALastTransferCmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GenerateSTART) refers to stm32f10x_i2c.o(.text.I2C_GenerateSTART) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP) refers to stm32f10x_i2c.o(.text.I2C_GenerateSTOP) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_AcknowledgeConfig) refers to stm32f10x_i2c.o(.text.I2C_AcknowledgeConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config) refers to stm32f10x_i2c.o(.text.I2C_OwnAddress2Config) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd) refers to stm32f10x_i2c.o(.text.I2C_DualAddressCmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd) refers to stm32f10x_i2c.o(.text.I2C_GeneralCallCmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_ITConfig) refers to stm32f10x_i2c.o(.text.I2C_ITConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_SendData) refers to stm32f10x_i2c.o(.text.I2C_SendData) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_ReceiveData) refers to stm32f10x_i2c.o(.text.I2C_ReceiveData) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_Send7bitAddress) refers to stm32f10x_i2c.o(.text.I2C_Send7bitAddress) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_ReadRegister) refers to stm32f10x_i2c.o(.text.I2C_ReadRegister) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_SoftwareResetCmd) refers to stm32f10x_i2c.o(.text.I2C_SoftwareResetCmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_NACKPositionConfig) refers to stm32f10x_i2c.o(.text.I2C_NACKPositionConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_SMBusAlertConfig) refers to stm32f10x_i2c.o(.text.I2C_SMBusAlertConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_TransmitPEC) refers to stm32f10x_i2c.o(.text.I2C_TransmitPEC) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_PECPositionConfig) refers to stm32f10x_i2c.o(.text.I2C_PECPositionConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_CalculatePEC) refers to stm32f10x_i2c.o(.text.I2C_CalculatePEC) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetPEC) refers to stm32f10x_i2c.o(.text.I2C_GetPEC) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_ARPCmd) refers to stm32f10x_i2c.o(.text.I2C_ARPCmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_StretchClockCmd) refers to stm32f10x_i2c.o(.text.I2C_StretchClockCmd) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_FastModeDutyCycleConfig) refers to stm32f10x_i2c.o(.text.I2C_FastModeDutyCycleConfig) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_CheckEvent) refers to stm32f10x_i2c.o(.text.I2C_CheckEvent) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetLastEvent) refers to stm32f10x_i2c.o(.text.I2C_GetLastEvent) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to stm32f10x_i2c.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_ClearFlag) refers to stm32f10x_i2c.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetITStatus) refers to stm32f10x_i2c.o(.text.I2C_GetITStatus) for [Anonymous Symbol]
    stm32f10x_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit) refers to stm32f10x_i2c.o(.text.I2C_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd) refers to stm32f10x_iwdg.o(.text.IWDG_WriteAccessCmd) for [Anonymous Symbol]
    stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler) refers to stm32f10x_iwdg.o(.text.IWDG_SetPrescaler) for [Anonymous Symbol]
    stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_SetReload) refers to stm32f10x_iwdg.o(.text.IWDG_SetReload) for [Anonymous Symbol]
    stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter) refers to stm32f10x_iwdg.o(.text.IWDG_ReloadCounter) for [Anonymous Symbol]
    stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_Enable) refers to stm32f10x_iwdg.o(.text.IWDG_Enable) for [Anonymous Symbol]
    stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus) refers to stm32f10x_iwdg.o(.text.IWDG_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_pwr.o(.text.PWR_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_DeInit) refers to stm32f10x_pwr.o(.text.PWR_DeInit) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd) refers to stm32f10x_pwr.o(.text.PWR_BackupAccessCmd) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_PVDCmd) refers to stm32f10x_pwr.o(.text.PWR_PVDCmd) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_PVDLevelConfig) refers to stm32f10x_pwr.o(.text.PWR_PVDLevelConfig) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd) refers to stm32f10x_pwr.o(.text.PWR_WakeUpPinCmd) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode) refers to stm32f10x_pwr.o(.text.PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_EnterSTANDBYMode) refers to stm32f10x_pwr.o(.text.PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus) refers to stm32f10x_pwr.o(.text.PWR_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_pwr.o(.ARM.exidx.text.PWR_ClearFlag) refers to stm32f10x_pwr.o(.text.PWR_ClearFlag) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to stm32f10x_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSEConfig) refers to stm32f10x_rcc.o(.text.RCC_HSEConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp) refers to stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to stm32f10x_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue) refers to stm32f10x_rcc.o(.text.RCC_AdjustHSICalibrationValue) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to stm32f10x_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLConfig) refers to stm32f10x_rcc.o(.text.RCC_PLLConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLCmd) refers to stm32f10x_rcc.o(.text.RCC_PLLCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to stm32f10x_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK1Config) refers to stm32f10x_rcc.o(.text.RCC_PCLK1Config) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK2Config) refers to stm32f10x_rcc.o(.text.RCC_PCLK2Config) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to stm32f10x_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_USBCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_ADCCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSEConfig) refers to stm32f10x_rcc.o(.text.RCC_LSEConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to stm32f10x_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_RTCCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd) refers to stm32f10x_rcc.o(.text.RCC_RTCCLKCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.text.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.rodata.APBAHBPrescTable) for [Anonymous Symbol]
    stm32f10x_rcc.o(.text.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.rodata.ADCPrescTable) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd) refers to stm32f10x_rcc.o(.text.RCC_BackupResetCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to stm32f10x_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_MCOConfig) refers to stm32f10x_rcc.o(.text.RCC_MCOConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to stm32f10x_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to stm32f10x_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to stm32f10x_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_ITConfig) refers to stm32f10x_rtc.o(.text.RTC_ITConfig) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_EnterConfigMode) refers to stm32f10x_rtc.o(.text.RTC_EnterConfigMode) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_ExitConfigMode) refers to stm32f10x_rtc.o(.text.RTC_ExitConfigMode) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetCounter) refers to stm32f10x_rtc.o(.text.RTC_GetCounter) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetCounter) refers to stm32f10x_rtc.o(.text.RTC_SetCounter) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetPrescaler) refers to stm32f10x_rtc.o(.text.RTC_SetPrescaler) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetAlarm) refers to stm32f10x_rtc.o(.text.RTC_SetAlarm) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetDivider) refers to stm32f10x_rtc.o(.text.RTC_GetDivider) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_WaitForLastTask) refers to stm32f10x_rtc.o(.text.RTC_WaitForLastTask) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_WaitForSynchro) refers to stm32f10x_rtc.o(.text.RTC_WaitForSynchro) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus) refers to stm32f10x_rtc.o(.text.RTC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_ClearFlag) refers to stm32f10x_rtc.o(.text.RTC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetITStatus) refers to stm32f10x_rtc.o(.text.RTC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_rtc.o(.ARM.exidx.text.RTC_ClearITPendingBit) refers to stm32f10x_rtc.o(.text.RTC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DeInit) refers to stm32f10x_sdio.o(.text.SDIO_DeInit) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_Init) refers to stm32f10x_sdio.o(.text.SDIO_Init) for [Anonymous Symbol]
    stm32f10x_sdio.o(.text.SDIO_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_StructInit) refers to stm32f10x_sdio.o(.text.SDIO_StructInit) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ClockCmd) refers to stm32f10x_sdio.o(.text.SDIO_ClockCmd) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SetPowerState) refers to stm32f10x_sdio.o(.text.SDIO_SetPowerState) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetPowerState) refers to stm32f10x_sdio.o(.text.SDIO_GetPowerState) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ITConfig) refers to stm32f10x_sdio.o(.text.SDIO_ITConfig) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DMACmd) refers to stm32f10x_sdio.o(.text.SDIO_DMACmd) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SendCommand) refers to stm32f10x_sdio.o(.text.SDIO_SendCommand) for [Anonymous Symbol]
    stm32f10x_sdio.o(.text.SDIO_CmdStructInit) refers to memseta.o(.text) for __aeabi_memclr4
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_CmdStructInit) refers to stm32f10x_sdio.o(.text.SDIO_CmdStructInit) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetCommandResponse) refers to stm32f10x_sdio.o(.text.SDIO_GetCommandResponse) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetResponse) refers to stm32f10x_sdio.o(.text.SDIO_GetResponse) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DataConfig) refers to stm32f10x_sdio.o(.text.SDIO_DataConfig) for [Anonymous Symbol]
    stm32f10x_sdio.o(.text.SDIO_DataStructInit) refers to memseta.o(.text) for __aeabi_memclr4
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DataStructInit) refers to stm32f10x_sdio.o(.text.SDIO_DataStructInit) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetDataCounter) refers to stm32f10x_sdio.o(.text.SDIO_GetDataCounter) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ReadData) refers to stm32f10x_sdio.o(.text.SDIO_ReadData) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_WriteData) refers to stm32f10x_sdio.o(.text.SDIO_WriteData) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetFIFOCount) refers to stm32f10x_sdio.o(.text.SDIO_GetFIFOCount) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_StartSDIOReadWait) refers to stm32f10x_sdio.o(.text.SDIO_StartSDIOReadWait) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_StopSDIOReadWait) refers to stm32f10x_sdio.o(.text.SDIO_StopSDIOReadWait) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SetSDIOReadWaitMode) refers to stm32f10x_sdio.o(.text.SDIO_SetSDIOReadWaitMode) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SetSDIOOperation) refers to stm32f10x_sdio.o(.text.SDIO_SetSDIOOperation) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SendSDIOSuspendCmd) refers to stm32f10x_sdio.o(.text.SDIO_SendSDIOSuspendCmd) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_CommandCompletionCmd) refers to stm32f10x_sdio.o(.text.SDIO_CommandCompletionCmd) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_CEATAITCmd) refers to stm32f10x_sdio.o(.text.SDIO_CEATAITCmd) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SendCEATACmd) refers to stm32f10x_sdio.o(.text.SDIO_SendCEATACmd) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetFlagStatus) refers to stm32f10x_sdio.o(.text.SDIO_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ClearFlag) refers to stm32f10x_sdio.o(.text.SDIO_ClearFlag) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetITStatus) refers to stm32f10x_sdio.o(.text.SDIO_GetITStatus) for [Anonymous Symbol]
    stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ClearITPendingBit) refers to stm32f10x_sdio.o(.text.SDIO_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_spi.o(.text.SPI_I2S_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_spi.o(.text.SPI_I2S_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_DeInit) refers to stm32f10x_spi.o(.text.SPI_I2S_DeInit) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_Init) refers to stm32f10x_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    stm32f10x_spi.o(.text.I2S_Init) refers to stm32f10x_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    stm32f10x_spi.o(.ARM.exidx.text.I2S_Init) refers to stm32f10x_spi.o(.text.I2S_Init) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_StructInit) refers to stm32f10x_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.I2S_StructInit) refers to stm32f10x_spi.o(.text.I2S_StructInit) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_Cmd) refers to stm32f10x_spi.o(.text.SPI_Cmd) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.I2S_Cmd) refers to stm32f10x_spi.o(.text.I2S_Cmd) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig) refers to stm32f10x_spi.o(.text.SPI_I2S_ITConfig) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_DMACmd) refers to stm32f10x_spi.o(.text.SPI_I2S_DMACmd) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_SendData) refers to stm32f10x_spi.o(.text.SPI_I2S_SendData) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData) refers to stm32f10x_spi.o(.text.SPI_I2S_ReceiveData) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig) refers to stm32f10x_spi.o(.text.SPI_NSSInternalSoftwareConfig) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_SSOutputCmd) refers to stm32f10x_spi.o(.text.SPI_SSOutputCmd) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_DataSizeConfig) refers to stm32f10x_spi.o(.text.SPI_DataSizeConfig) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_TransmitCRC) refers to stm32f10x_spi.o(.text.SPI_TransmitCRC) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_CalculateCRC) refers to stm32f10x_spi.o(.text.SPI_CalculateCRC) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_GetCRC) refers to stm32f10x_spi.o(.text.SPI_GetCRC) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial) refers to stm32f10x_spi.o(.text.SPI_GetCRCPolynomial) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig) refers to stm32f10x_spi.o(.text.SPI_BiDirectionalLineConfig) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus) refers to stm32f10x_spi.o(.text.SPI_I2S_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag) refers to stm32f10x_spi.o(.text.SPI_I2S_ClearFlag) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus) refers to stm32f10x_spi.o(.text.SPI_I2S_GetITStatus) for [Anonymous Symbol]
    stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ClearITPendingBit) refers to stm32f10x_spi.o(.text.SPI_I2S_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_tim.o(.text.TIM_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_tim.o(.ARM.exidx.text.TIM_DeInit) refers to stm32f10x_tim.o(.text.TIM_DeInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_TimeBaseInit) refers to stm32f10x_tim.o(.text.TIM_TimeBaseInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1Init) refers to stm32f10x_tim.o(.text.TIM_OC1Init) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2Init) refers to stm32f10x_tim.o(.text.TIM_OC2Init) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3Init) refers to stm32f10x_tim.o(.text.TIM_OC3Init) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4Init) refers to stm32f10x_tim.o(.text.TIM_OC4Init) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TI1_Config) for TI1_Config
    stm32f10x_tim.o(.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TI2_Config) for TI2_Config
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ICInit) refers to stm32f10x_tim.o(.text.TIM_ICInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TI1_Config) refers to stm32f10x_tim.o(.text.TI1_Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler) refers to stm32f10x_tim.o(.text.TIM_SetIC1Prescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TI2_Config) refers to stm32f10x_tim.o(.text.TI2_Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler) refers to stm32f10x_tim.o(.text.TIM_SetIC2Prescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler) refers to stm32f10x_tim.o(.text.TIM_SetIC3Prescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler) refers to stm32f10x_tim.o(.text.TIM_SetIC4Prescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TI2_Config) for TI2_Config
    stm32f10x_tim.o(.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TI1_Config) for TI1_Config
    stm32f10x_tim.o(.ARM.exidx.text.TIM_PWMIConfig) refers to stm32f10x_tim.o(.text.TIM_PWMIConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_BDTRConfig) refers to stm32f10x_tim.o(.text.TIM_BDTRConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit) refers to stm32f10x_tim.o(.text.TIM_TimeBaseStructInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OCStructInit) refers to stm32f10x_tim.o(.text.TIM_OCStructInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ICStructInit) refers to stm32f10x_tim.o(.text.TIM_ICStructInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_BDTRStructInit) refers to stm32f10x_tim.o(.text.TIM_BDTRStructInit) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_Cmd) refers to stm32f10x_tim.o(.text.TIM_Cmd) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs) refers to stm32f10x_tim.o(.text.TIM_CtrlPWMOutputs) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ITConfig) refers to stm32f10x_tim.o(.text.TIM_ITConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GenerateEvent) refers to stm32f10x_tim.o(.text.TIM_GenerateEvent) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_DMAConfig) refers to stm32f10x_tim.o(.text.TIM_DMAConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_DMACmd) refers to stm32f10x_tim.o(.text.TIM_DMACmd) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_InternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_InternalClockConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_ITRxExternalClockConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger) refers to stm32f10x_tim.o(.text.TIM_SelectInputTrigger) for [Anonymous Symbol]
    stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(.text.TI2_Config) for TI2_Config
    stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(.text.TI1_Config) for TI1_Config
    stm32f10x_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config) refers to stm32f10x_tim.o(.text.TIM_ETRClockMode1Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRConfig) refers to stm32f10x_tim.o(.text.TIM_ETRConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config) refers to stm32f10x_tim.o(.text.TIM_ETRClockMode2Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_PrescalerConfig) refers to stm32f10x_tim.o(.text.TIM_PrescalerConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CounterModeConfig) refers to stm32f10x_tim.o(.text.TIM_CounterModeConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig) refers to stm32f10x_tim.o(.text.TIM_EncoderInterfaceConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config) refers to stm32f10x_tim.o(.text.TIM_ForcedOC1Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config) refers to stm32f10x_tim.o(.text.TIM_ForcedOC2Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config) refers to stm32f10x_tim.o(.text.TIM_ForcedOC3Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config) refers to stm32f10x_tim.o(.text.TIM_ForcedOC4Config) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig) refers to stm32f10x_tim.o(.text.TIM_ARRPreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectCOM) refers to stm32f10x_tim.o(.text.TIM_SelectCOM) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectCCDMA) refers to stm32f10x_tim.o(.text.TIM_SelectCCDMA) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CCPreloadControl) refers to stm32f10x_tim.o(.text.TIM_CCPreloadControl) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig) refers to stm32f10x_tim.o(.text.TIM_OC1PreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig) refers to stm32f10x_tim.o(.text.TIM_OC2PreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig) refers to stm32f10x_tim.o(.text.TIM_OC3PreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig) refers to stm32f10x_tim.o(.text.TIM_OC4PreloadConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1FastConfig) refers to stm32f10x_tim.o(.text.TIM_OC1FastConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2FastConfig) refers to stm32f10x_tim.o(.text.TIM_OC2FastConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3FastConfig) refers to stm32f10x_tim.o(.text.TIM_OC3FastConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4FastConfig) refers to stm32f10x_tim.o(.text.TIM_OC4FastConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref) refers to stm32f10x_tim.o(.text.TIM_ClearOC1Ref) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref) refers to stm32f10x_tim.o(.text.TIM_ClearOC2Ref) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref) refers to stm32f10x_tim.o(.text.TIM_ClearOC3Ref) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref) refers to stm32f10x_tim.o(.text.TIM_ClearOC4Ref) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC1PolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC1NPolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC2PolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC2NPolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC3PolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC3NPolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig) refers to stm32f10x_tim.o(.text.TIM_OC4PolarityConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CCxCmd) refers to stm32f10x_tim.o(.text.TIM_CCxCmd) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_CCxNCmd) refers to stm32f10x_tim.o(.text.TIM_CCxNCmd) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOCxM) refers to stm32f10x_tim.o(.text.TIM_SelectOCxM) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig) refers to stm32f10x_tim.o(.text.TIM_UpdateDisableConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig) refers to stm32f10x_tim.o(.text.TIM_UpdateRequestConfig) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectHallSensor) refers to stm32f10x_tim.o(.text.TIM_SelectHallSensor) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode) refers to stm32f10x_tim.o(.text.TIM_SelectOnePulseMode) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger) refers to stm32f10x_tim.o(.text.TIM_SelectOutputTrigger) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode) refers to stm32f10x_tim.o(.text.TIM_SelectSlaveMode) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode) refers to stm32f10x_tim.o(.text.TIM_SelectMasterSlaveMode) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCounter) refers to stm32f10x_tim.o(.text.TIM_SetCounter) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetAutoreload) refers to stm32f10x_tim.o(.text.TIM_SetAutoreload) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare1) refers to stm32f10x_tim.o(.text.TIM_SetCompare1) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare2) refers to stm32f10x_tim.o(.text.TIM_SetCompare2) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare3) refers to stm32f10x_tim.o(.text.TIM_SetCompare3) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare4) refers to stm32f10x_tim.o(.text.TIM_SetCompare4) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_SetClockDivision) refers to stm32f10x_tim.o(.text.TIM_SetClockDivision) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture1) refers to stm32f10x_tim.o(.text.TIM_GetCapture1) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture2) refers to stm32f10x_tim.o(.text.TIM_GetCapture2) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture3) refers to stm32f10x_tim.o(.text.TIM_GetCapture3) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture4) refers to stm32f10x_tim.o(.text.TIM_GetCapture4) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCounter) refers to stm32f10x_tim.o(.text.TIM_GetCounter) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetPrescaler) refers to stm32f10x_tim.o(.text.TIM_GetPrescaler) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetFlagStatus) refers to stm32f10x_tim.o(.text.TIM_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearFlag) refers to stm32f10x_tim.o(.text.TIM_ClearFlag) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_GetITStatus) refers to stm32f10x_tim.o(.text.TIM_GetITStatus) for [Anonymous Symbol]
    stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit) refers to stm32f10x_tim.o(.text.TIM_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_usart.o(.text.USART_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_usart.o(.text.USART_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_usart.o(.ARM.exidx.text.USART_DeInit) refers to stm32f10x_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    stm32f10x_usart.o(.text.USART_Init) refers to stm32f10x_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    stm32f10x_usart.o(.ARM.exidx.text.USART_Init) refers to stm32f10x_usart.o(.text.USART_Init) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_StructInit) refers to stm32f10x_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ClockInit) refers to stm32f10x_usart.o(.text.USART_ClockInit) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ClockStructInit) refers to stm32f10x_usart.o(.text.USART_ClockStructInit) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_Cmd) refers to stm32f10x_usart.o(.text.USART_Cmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ITConfig) refers to stm32f10x_usart.o(.text.USART_ITConfig) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_DMACmd) refers to stm32f10x_usart.o(.text.USART_DMACmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SetAddress) refers to stm32f10x_usart.o(.text.USART_SetAddress) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_WakeUpConfig) refers to stm32f10x_usart.o(.text.USART_WakeUpConfig) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ReceiverWakeUpCmd) refers to stm32f10x_usart.o(.text.USART_ReceiverWakeUpCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig) refers to stm32f10x_usart.o(.text.USART_LINBreakDetectLengthConfig) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_LINCmd) refers to stm32f10x_usart.o(.text.USART_LINCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SendData) refers to stm32f10x_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to stm32f10x_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SendBreak) refers to stm32f10x_usart.o(.text.USART_SendBreak) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SetGuardTime) refers to stm32f10x_usart.o(.text.USART_SetGuardTime) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SetPrescaler) refers to stm32f10x_usart.o(.text.USART_SetPrescaler) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SmartCardCmd) refers to stm32f10x_usart.o(.text.USART_SmartCardCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd) refers to stm32f10x_usart.o(.text.USART_SmartCardNACKCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd) refers to stm32f10x_usart.o(.text.USART_HalfDuplexCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd) refers to stm32f10x_usart.o(.text.USART_OverSampling8Cmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd) refers to stm32f10x_usart.o(.text.USART_OneBitMethodCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_IrDAConfig) refers to stm32f10x_usart.o(.text.USART_IrDAConfig) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_IrDACmd) refers to stm32f10x_usart.o(.text.USART_IrDACmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to stm32f10x_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_GetITStatus) refers to stm32f10x_usart.o(.text.USART_GetITStatus) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ClearITPendingBit) refers to stm32f10x_usart.o(.text.USART_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.text.WWDG_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_DeInit) refers to stm32f10x_wwdg.o(.text.WWDG_DeInit) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler) refers to stm32f10x_wwdg.o(.text.WWDG_SetPrescaler) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue) refers to stm32f10x_wwdg.o(.text.WWDG_SetWindowValue) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_EnableIT) refers to stm32f10x_wwdg.o(.text.WWDG_EnableIT) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_SetCounter) refers to stm32f10x_wwdg.o(.text.WWDG_SetCounter) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_Enable) refers to stm32f10x_wwdg.o(.text.WWDG_Enable) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus) refers to stm32f10x_wwdg.o(.text.WWDG_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag) refers to stm32f10x_wwdg.o(.text.WWDG_ClearFlag) for [Anonymous Symbol]
    exit_book.o(.text.fn_EXTI_GPIO_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    exit_book.o(.text.fn_EXTI_GPIO_Config) refers to stm32f10x_gpio.o(.text.GPIO_EXTILineConfig) for GPIO_EXTILineConfig
    exit_book.o(.text.fn_EXTI_GPIO_Config) refers to stm32f10x_exti.o(.text.EXTI_Init) for EXTI_Init
    exit_book.o(.text.fn_EXTI_GPIO_Config) refers to exit_book.o(.text.fn_NVIC_Config) for fn_NVIC_Config
    exit_book.o(.ARM.exidx.text.fn_EXTI_GPIO_Config) refers to exit_book.o(.text.fn_EXTI_GPIO_Config) for [Anonymous Symbol]
    exit_book.o(.text.fn_NVIC_Config) refers to misc.o(.text.NVIC_PriorityGroupConfig) for NVIC_PriorityGroupConfig
    exit_book.o(.text.fn_NVIC_Config) refers to misc.o(.text.NVIC_Init) for NVIC_Init
    exit_book.o(.ARM.exidx.text.fn_NVIC_Config) refers to exit_book.o(.text.fn_NVIC_Config) for [Anonymous Symbol]
    exit_book.o(.text.EXTI0_IRQHandler) refers to stm32f10x_exti.o(.text.EXTI_GetITStatus) for EXTI_GetITStatus
    exit_book.o(.text.EXTI0_IRQHandler) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    exit_book.o(.text.EXTI0_IRQHandler) refers to led_book.o(.text.fn_LED_Corporate) for fn_LED_Corporate
    exit_book.o(.text.EXTI0_IRQHandler) refers to stm32f10x_exti.o(.text.EXTI_ClearITPendingBit) for EXTI_ClearITPendingBit
    exit_book.o(.ARM.exidx.text.EXTI0_IRQHandler) refers to exit_book.o(.text.EXTI0_IRQHandler) for [Anonymous Symbol]
    exit_book.o(.text.EXTI15_10_IRQHandler) refers to stm32f10x_exti.o(.text.EXTI_GetITStatus) for EXTI_GetITStatus
    exit_book.o(.text.EXTI15_10_IRQHandler) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    exit_book.o(.text.EXTI15_10_IRQHandler) refers to led_book.o(.text.fn_LED_Corporate) for fn_LED_Corporate
    exit_book.o(.text.EXTI15_10_IRQHandler) refers to stm32f10x_exti.o(.text.EXTI_ClearITPendingBit) for EXTI_ClearITPendingBit
    exit_book.o(.ARM.exidx.text.EXTI15_10_IRQHandler) refers to exit_book.o(.text.EXTI15_10_IRQHandler) for [Anonymous Symbol]
    key_book.o(.text.fn_Key_GPIO_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    key_book.o(.text.fn_Key_GPIO_Config) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    key_book.o(.ARM.exidx.text.fn_Key_GPIO_Config) refers to key_book.o(.text.fn_Key_GPIO_Config) for [Anonymous Symbol]
    key_book.o(.text.fn_Key_Init) refers to key_book.o(.text.fn_Key_GPIO_Config) for fn_Key_GPIO_Config
    key_book.o(.text.fn_Key_Init) refers to key_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    key_book.o(.ARM.exidx.text.fn_Key_Init) refers to key_book.o(.text.fn_Key_Init) for [Anonymous Symbol]
    key_book.o(.text.fn_key_judge) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    key_book.o(.text.fn_key_judge) refers to key_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    key_book.o(.ARM.exidx.text.fn_key_judge) refers to key_book.o(.text.fn_key_judge) for [Anonymous Symbol]
    key_book.o(.text.fn_key_Effect) refers to led_book.o(.text.fn_LED_Corporate) for fn_LED_Corporate
    key_book.o(.text.fn_key_Effect) refers to key_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    key_book.o(.ARM.exidx.text.fn_key_Effect) refers to key_book.o(.text.fn_key_Effect) for [Anonymous Symbol]
    key_book.o(.text.fn_key_Check) refers to key_book.o(.text.fn_key_judge) for fn_key_judge
    key_book.o(.text.fn_key_Check) refers to key_book.o(.text.fn_key_Effect) for fn_key_Effect
    key_book.o(.ARM.exidx.text.fn_key_Check) refers to key_book.o(.text.fn_key_Check) for [Anonymous Symbol]
    led_book.o(.text.fn_LED_GPIO_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    led_book.o(.text.fn_LED_GPIO_Config) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    led_book.o(.text.fn_LED_GPIO_Config) refers to stm32f10x_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    led_book.o(.ARM.exidx.text.fn_LED_GPIO_Config) refers to led_book.o(.text.fn_LED_GPIO_Config) for [Anonymous Symbol]
    led_book.o(.text.fn_Led_Init) refers to led_book.o(.text.fn_LED_ALL_OFF) for fn_LED_ALL_OFF
    led_book.o(.text.fn_Led_Init) refers to led_book.o(.text.fn_LED_GPIO_Config) for fn_LED_GPIO_Config
    led_book.o(.ARM.exidx.text.fn_Led_Init) refers to led_book.o(.text.fn_Led_Init) for [Anonymous Symbol]
    led_book.o(.text.fn_LED_ALL_OFF) refers to stm32f10x_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    led_book.o(.ARM.exidx.text.fn_LED_ALL_OFF) refers to led_book.o(.text.fn_LED_ALL_OFF) for [Anonymous Symbol]
    led_book.o(.text.fn_LED_Corporate) refers to stm32f10x_gpio.o(.text.GPIO_ReadOutputDataBit) for GPIO_ReadOutputDataBit
    led_book.o(.text.fn_LED_Corporate) refers to stm32f10x_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    led_book.o(.text.fn_LED_Corporate) refers to stm32f10x_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    led_book.o(.ARM.exidx.text.fn_LED_Corporate) refers to led_book.o(.text.fn_LED_Corporate) for [Anonymous Symbol]
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_DeInit) for RCC_DeInit
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_HSEConfig) for RCC_HSEConfig
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp) for RCC_WaitForHSEStartUp
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_flash.o(.text.FLASH_PrefetchBufferCmd) for FLASH_PrefetchBufferCmd
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_flash.o(.text.FLASH_SetLatency) for FLASH_SetLatency
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_HCLKConfig) for RCC_HCLKConfig
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_PCLK1Config) for RCC_PCLK1Config
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_PCLK2Config) for RCC_PCLK2Config
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_PLLConfig) for RCC_PLLConfig
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_PLLCmd) for RCC_PLLCmd
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_SYSCLKConfig) for RCC_SYSCLKConfig
    rcc_book.o(.text.fn_HRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_GetSYSCLKSource) for RCC_GetSYSCLKSource
    rcc_book.o(.ARM.exidx.text.fn_HRCC_SetSystic) refers to rcc_book.o(.text.fn_HRCC_SetSystic) for [Anonymous Symbol]
    rcc_book.o(.text.fn_IRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_DeInit) for RCC_DeInit
    rcc_book.o(.text.fn_IRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_HSICmd) for RCC_HSICmd
    rcc_book.o(.text.fn_IRCC_SetSystic) refers to stm32f10x_flash.o(.text.FLASH_PrefetchBufferCmd) for FLASH_PrefetchBufferCmd
    rcc_book.o(.text.fn_IRCC_SetSystic) refers to stm32f10x_flash.o(.text.FLASH_SetLatency) for FLASH_SetLatency
    rcc_book.o(.text.fn_IRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_HCLKConfig) for RCC_HCLKConfig
    rcc_book.o(.text.fn_IRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_PCLK1Config) for RCC_PCLK1Config
    rcc_book.o(.text.fn_IRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_PCLK2Config) for RCC_PCLK2Config
    rcc_book.o(.text.fn_IRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_PLLConfig) for RCC_PLLConfig
    rcc_book.o(.text.fn_IRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_PLLCmd) for RCC_PLLCmd
    rcc_book.o(.text.fn_IRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    rcc_book.o(.text.fn_IRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_SYSCLKConfig) for RCC_SYSCLKConfig
    rcc_book.o(.text.fn_IRCC_SetSystic) refers to stm32f10x_rcc.o(.text.RCC_GetSYSCLKSource) for RCC_GetSYSCLKSource
    rcc_book.o(.ARM.exidx.text.fn_IRCC_SetSystic) refers to rcc_book.o(.text.fn_IRCC_SetSystic) for [Anonymous Symbol]
    rcc_book.o(.text.fn_MCO_GPIO_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    rcc_book.o(.text.fn_MCO_GPIO_Config) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    rcc_book.o(.text.fn_MCO_GPIO_Config) refers to stm32f10x_rcc.o(.text.RCC_MCOConfig) for RCC_MCOConfig
    rcc_book.o(.ARM.exidx.text.fn_MCO_GPIO_Config) refers to rcc_book.o(.text.fn_MCO_GPIO_Config) for [Anonymous Symbol]
    rcc_book.o(.text.fn_RCC_Init) refers to rcc_book.o(.text.fn_HRCC_SetSystic) for fn_HRCC_SetSystic
    rcc_book.o(.ARM.exidx.text.fn_RCC_Init) refers to rcc_book.o(.text.fn_RCC_Init) for [Anonymous Symbol]
    systick_book.o(.text.fn_Systick_Delay) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    systick_book.o(.ARM.exidx.text.fn_Systick_Delay) refers to systick_book.o(.text.fn_Systick_Delay) for [Anonymous Symbol]
    systick_book.o(.text.fn_Systick_Delay_Handler_set) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    systick_book.o(.text.fn_Systick_Delay_Handler_set) refers to systick_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    systick_book.o(.ARM.exidx.text.fn_Systick_Delay_Handler_set) refers to systick_book.o(.text.fn_Systick_Delay_Handler_set) for [Anonymous Symbol]
    systick_book.o(.text.fn_SysTick_delay_decrement) refers to led_book.o(.text.fn_LED_Corporate) for fn_LED_Corporate
    systick_book.o(.text.fn_SysTick_delay_decrement) refers to systick_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    systick_book.o(.text.fn_SysTick_delay_decrement) refers to key_book.o(.bss..L_MergedGlobals) for key_flag
    systick_book.o(.ARM.exidx.text.fn_SysTick_delay_decrement) refers to systick_book.o(.text.fn_SysTick_delay_decrement) for [Anonymous Symbol]
    systick_book.o(.text.SysTick_Handler) refers to systick_book.o(.text.fn_SysTick_delay_decrement) for fn_SysTick_delay_decrement
    systick_book.o(.ARM.exidx.text.SysTick_Handler) refers to systick_book.o(.text.SysTick_Handler) for [Anonymous Symbol]
    usart_book.o(.text.fn_USART_IO_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    usart_book.o(.text.fn_USART_IO_Config) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    usart_book.o(.ARM.exidx.text.fn_USART_IO_Config) refers to usart_book.o(.text.fn_USART_IO_Config) for [Anonymous Symbol]
    usart_book.o(.text.fn_USART_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    usart_book.o(.text.fn_USART_Config) refers to stm32f10x_usart.o(.text.USART_Init) for USART_Init
    usart_book.o(.text.fn_USART_Config) refers to misc.o(.text.NVIC_PriorityGroupConfig) for NVIC_PriorityGroupConfig
    usart_book.o(.text.fn_USART_Config) refers to misc.o(.text.NVIC_Init) for NVIC_Init
    usart_book.o(.text.fn_USART_Config) refers to stm32f10x_usart.o(.text.USART_ITConfig) for USART_ITConfig
    usart_book.o(.text.fn_USART_Config) refers to stm32f10x_usart.o(.text.USART_Cmd) for USART_Cmd
    usart_book.o(.ARM.exidx.text.fn_USART_Config) refers to usart_book.o(.text.fn_USART_Config) for [Anonymous Symbol]
    usart_book.o(.text.fn_Usart_Send_Byte) refers to stm32f10x_usart.o(.text.USART_SendData) for USART_SendData
    usart_book.o(.text.fn_Usart_Send_Byte) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    usart_book.o(.ARM.exidx.text.fn_Usart_Send_Byte) refers to usart_book.o(.text.fn_Usart_Send_Byte) for [Anonymous Symbol]
    usart_book.o(.text.fn_Usart_SendString) refers to usart_book.o(.text.fn_Usart_Send_Byte) for fn_Usart_Send_Byte
    usart_book.o(.text.fn_Usart_SendString) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    usart_book.o(.ARM.exidx.text.fn_Usart_SendString) refers to usart_book.o(.text.fn_Usart_SendString) for [Anonymous Symbol]
    usart_book.o(.text.Usart_SendHalf_32_Word) refers to usart_book.o(.text.fn_Usart_Send_Byte) for fn_Usart_Send_Byte
    usart_book.o(.text.Usart_SendHalf_32_Word) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    usart_book.o(.ARM.exidx.text.Usart_SendHalf_32_Word) refers to usart_book.o(.text.Usart_SendHalf_32_Word) for [Anonymous Symbol]
    usart_book.o(.text.fn_USART_Init) refers to usart_book.o(.text.fn_USART_IO_Config) for fn_USART_IO_Config
    usart_book.o(.text.fn_USART_Init) refers to usart_book.o(.text.fn_USART_Config) for fn_USART_Config
    usart_book.o(.ARM.exidx.text.fn_USART_Init) refers to usart_book.o(.text.fn_USART_Init) for [Anonymous Symbol]
    usart_book.o(.text.fputc) refers to stm32f10x_usart.o(.text.USART_SendData) for USART_SendData
    usart_book.o(.text.fputc) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    usart_book.o(.ARM.exidx.text.fputc) refers to usart_book.o(.text.fputc) for [Anonymous Symbol]
    usart_book.o(.text.fgetc) refers to stm32f10x_usart.o(.text.USART_GetITStatus) for USART_GetITStatus
    usart_book.o(.text.fgetc) refers to stm32f10x_usart.o(.text.USART_ReceiveData) for USART_ReceiveData
    usart_book.o(.ARM.exidx.text.fgetc) refers to usart_book.o(.text.fgetc) for [Anonymous Symbol]
    usart_book.o(.text.USART1_IRQHandler) refers to stm32f10x_usart.o(.text.USART_GetITStatus) for USART_GetITStatus
    usart_book.o(.text.USART1_IRQHandler) refers to stm32f10x_usart.o(.text.USART_ReceiveData) for USART_ReceiveData
    usart_book.o(.text.USART1_IRQHandler) refers to stm32f10x_usart.o(.text.USART_SendData) for USART_SendData
    usart_book.o(.ARM.exidx.text.USART1_IRQHandler) refers to usart_book.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    dma_book.o(.text._DMA_Config) refers to stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    dma_book.o(.text._DMA_Config) refers to stm32f10x_dma.o(.text.DMA_Init) for DMA_Init
    dma_book.o(.text._DMA_Config) refers to stm32f10x_dma.o(.text.DMA_Cmd) for DMA_Cmd
    dma_book.o(.ARM.exidx.text._DMA_Config) refers to dma_book.o(.text._DMA_Config) for [Anonymous Symbol]
    dma_book.o(.text._USART_DMA_Config) refers to stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    dma_book.o(.text._USART_DMA_Config) refers to stm32f10x_dma.o(.text.DMA_Init) for DMA_Init
    dma_book.o(.text._USART_DMA_Config) refers to stm32f10x_dma.o(.text.DMA_Cmd) for DMA_Cmd
    dma_book.o(.ARM.exidx.text._USART_DMA_Config) refers to dma_book.o(.text._USART_DMA_Config) for [Anonymous Symbol]
    dma_book.o(.ARM.exidx.text._Buffercmp) refers to dma_book.o(.text._Buffercmp) for [Anonymous Symbol]
    dma_book.o(.text._Buffer_Show) refers to usart_book.o(.text.Usart_SendHalf_32_Word) for Usart_SendHalf_32_Word
    dma_book.o(.ARM.exidx.text._Buffer_Show) refers to dma_book.o(.text._Buffer_Show) for [Anonymous Symbol]
    dma_book.o(.text._DMA_ROM_TO_RAM) refers to puts.o(i.puts) for puts
    dma_book.o(.text._DMA_ROM_TO_RAM) refers to dma_book.o(.text._DMA_Config) for _DMA_Config
    dma_book.o(.text._DMA_ROM_TO_RAM) refers to stm32f10x_dma.o(.text.DMA_GetFlagStatus) for DMA_GetFlagStatus
    dma_book.o(.text._DMA_ROM_TO_RAM) refers to dma_book.o(.text._Buffercmp) for _Buffercmp
    dma_book.o(.text._DMA_ROM_TO_RAM) refers to dma_book.o(.text._Buffer_Show) for _Buffer_Show
    dma_book.o(.text._DMA_ROM_TO_RAM) refers to dma_book.o(.rodata.aSRC_Cont_Buffer) for aSRC_Cont_Buffer
    dma_book.o(.text._DMA_ROM_TO_RAM) refers to dma_book.o(.bss.aDST_Buffer) for aDST_Buffer
    dma_book.o(.ARM.exidx.text._DMA_ROM_TO_RAM) refers to dma_book.o(.text._DMA_ROM_TO_RAM) for [Anonymous Symbol]
    dma_book.o(.text._DMA_RAM_TO_USART) refers to puts.o(i.puts) for puts
    dma_book.o(.text._DMA_RAM_TO_USART) refers to dma_book.o(.text._USART_DMA_Config) for _USART_DMA_Config
    dma_book.o(.text._DMA_RAM_TO_USART) refers to stm32f10x_usart.o(.text.USART_DMACmd) for USART_DMACmd
    dma_book.o(.text._DMA_RAM_TO_USART) refers to systick_book.o(.text.fn_Systick_Delay) for fn_Systick_Delay
    dma_book.o(.text._DMA_RAM_TO_USART) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    dma_book.o(.text._DMA_RAM_TO_USART) refers to dma_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    dma_book.o(.ARM.exidx.text._DMA_RAM_TO_USART) refers to dma_book.o(.text._DMA_RAM_TO_USART) for [Anonymous Symbol]
    i2c_book.o(.text._I2C_EE_Init) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    i2c_book.o(.text._I2C_EE_Init) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    i2c_book.o(.text._I2C_EE_Init) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    i2c_book.o(.text._I2C_EE_Init) refers to stm32f10x_i2c.o(.text.I2C_Init) for I2C_Init
    i2c_book.o(.text._I2C_EE_Init) refers to stm32f10x_i2c.o(.text.I2C_Cmd) for I2C_Cmd
    i2c_book.o(.ARM.exidx.text._I2C_EE_Init) refers to i2c_book.o(.text._I2C_EE_Init) for [Anonymous Symbol]
    i2c_book.o(.text.I2C_Write_fun) refers to puts.o(i.puts) for puts
    i2c_book.o(.text.I2C_Write_fun) refers to i2c_book.o(.text.I2C_EE_WaitEepromStandbyState) for I2C_EE_WaitEepromStandbyState
    i2c_book.o(.text.I2C_Write_fun) refers to stm32f10x_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_book.o(.text.I2C_Write_fun) refers to stm32f10x_i2c.o(.text.I2C_GenerateSTART) for I2C_GenerateSTART
    i2c_book.o(.text.I2C_Write_fun) refers to stm32f10x_i2c.o(.text.I2C_CheckEvent) for I2C_CheckEvent
    i2c_book.o(.text.I2C_Write_fun) refers to stm32f10x_i2c.o(.text.I2C_Send7bitAddress) for I2C_Send7bitAddress
    i2c_book.o(.text.I2C_Write_fun) refers to stm32f10x_i2c.o(.text.I2C_SendData) for I2C_SendData
    i2c_book.o(.text.I2C_Write_fun) refers to i2c_book.o(.text.I2C_TIMEOUT_UserCallback) for I2C_TIMEOUT_UserCallback
    i2c_book.o(.text.I2C_Write_fun) refers to printfa.o(i.__0printf) for __2printf
    i2c_book.o(.text.I2C_Write_fun) refers to stm32f10x_i2c.o(.text.I2C_GenerateSTOP) for I2C_GenerateSTOP
    i2c_book.o(.text.I2C_Write_fun) refers to i2c_book.o(.bss.I2CTimeout) for [Anonymous Symbol]
    i2c_book.o(.text.I2C_Write_fun) refers to i2c_book.o(.rodata.str1.1) for .L.str.1
    i2c_book.o(.ARM.exidx.text.I2C_Write_fun) refers to i2c_book.o(.text.I2C_Write_fun) for [Anonymous Symbol]
    i2c_book.o(.text.I2C_EE_WaitEepromStandbyState) refers to stm32f10x_i2c.o(.text.I2C_GenerateSTART) for I2C_GenerateSTART
    i2c_book.o(.text.I2C_EE_WaitEepromStandbyState) refers to stm32f10x_i2c.o(.text.I2C_ReadRegister) for I2C_ReadRegister
    i2c_book.o(.text.I2C_EE_WaitEepromStandbyState) refers to stm32f10x_i2c.o(.text.I2C_Send7bitAddress) for I2C_Send7bitAddress
    i2c_book.o(.text.I2C_EE_WaitEepromStandbyState) refers to stm32f10x_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_book.o(.text.I2C_EE_WaitEepromStandbyState) refers to stm32f10x_i2c.o(.text.I2C_GenerateSTOP) for I2C_GenerateSTOP
    i2c_book.o(.ARM.exidx.text.I2C_EE_WaitEepromStandbyState) refers to i2c_book.o(.text.I2C_EE_WaitEepromStandbyState) for [Anonymous Symbol]
    i2c_book.o(.text.I2C_Read_fun) refers to puts.o(i.puts) for puts
    i2c_book.o(.text.I2C_Read_fun) refers to stm32f10x_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_book.o(.text.I2C_Read_fun) refers to stm32f10x_i2c.o(.text.I2C_GenerateSTART) for I2C_GenerateSTART
    i2c_book.o(.text.I2C_Read_fun) refers to stm32f10x_i2c.o(.text.I2C_CheckEvent) for I2C_CheckEvent
    i2c_book.o(.text.I2C_Read_fun) refers to stm32f10x_i2c.o(.text.I2C_Send7bitAddress) for I2C_Send7bitAddress
    i2c_book.o(.text.I2C_Read_fun) refers to stm32f10x_i2c.o(.text.I2C_Cmd) for I2C_Cmd
    i2c_book.o(.text.I2C_Read_fun) refers to stm32f10x_i2c.o(.text.I2C_SendData) for I2C_SendData
    i2c_book.o(.text.I2C_Read_fun) refers to stm32f10x_i2c.o(.text.I2C_AcknowledgeConfig) for I2C_AcknowledgeConfig
    i2c_book.o(.text.I2C_Read_fun) refers to stm32f10x_i2c.o(.text.I2C_ReceiveData) for I2C_ReceiveData
    i2c_book.o(.text.I2C_Read_fun) refers to i2c_book.o(.text.I2C_TIMEOUT_UserCallback) for I2C_TIMEOUT_UserCallback
    i2c_book.o(.text.I2C_Read_fun) refers to printfa.o(i.__0printf) for __2printf
    i2c_book.o(.text.I2C_Read_fun) refers to stm32f10x_i2c.o(.text.I2C_GenerateSTOP) for I2C_GenerateSTOP
    i2c_book.o(.text.I2C_Read_fun) refers to i2c_book.o(.bss.I2CTimeout) for [Anonymous Symbol]
    i2c_book.o(.text.I2C_Read_fun) refers to i2c_book.o(.rodata.str1.1) for .L.str.1
    i2c_book.o(.ARM.exidx.text.I2C_Read_fun) refers to i2c_book.o(.text.I2C_Read_fun) for [Anonymous Symbol]
    i2c_book.o(.text.I2C_TIMEOUT_UserCallback) refers to usart_book.o(.text.fn_Usart_SendString) for fn_Usart_SendString
    i2c_book.o(.text.I2C_TIMEOUT_UserCallback) refers to printfa.o(i.__0printf) for __2printf
    i2c_book.o(.ARM.exidx.text.I2C_TIMEOUT_UserCallback) refers to i2c_book.o(.text.I2C_TIMEOUT_UserCallback) for [Anonymous Symbol]
    i2c_soft_book.o(.text.EE_Soft_Trase) refers to memseta.o(.text) for __aeabi_memclr4
    i2c_soft_book.o(.text.EE_Soft_Trase) refers to i2c_soft_book.o(.text.EE_Soft_WriteBytes) for EE_Soft_WriteBytes
    i2c_soft_book.o(.text.EE_Soft_Trase) refers to puts.o(i.puts) for puts
    i2c_soft_book.o(.ARM.exidx.text.EE_Soft_Trase) refers to i2c_soft_book.o(.text.EE_Soft_Trase) for [Anonymous Symbol]
    i2c_soft_book.o(.text.EE_Soft_WriteBytes) refers to i2c_soft_book.o(.text.I2C_Stop) for I2C_Stop
    i2c_soft_book.o(.text.EE_Soft_WriteBytes) refers to i2c_soft_book.o(.text.I2C_Start) for I2C_Start
    i2c_soft_book.o(.text.EE_Soft_WriteBytes) refers to i2c_soft_book.o(.text.I2C_SendByte) for I2C_SendByte
    i2c_soft_book.o(.text.EE_Soft_WriteBytes) refers to i2c_soft_book.o(.text.I2C_WaitAck) for I2C_WaitAck
    i2c_soft_book.o(.text.EE_Soft_WriteBytes) refers to puts.o(i.puts) for puts
    i2c_soft_book.o(.ARM.exidx.text.EE_Soft_WriteBytes) refers to i2c_soft_book.o(.text.EE_Soft_WriteBytes) for [Anonymous Symbol]
    i2c_soft_book.o(.text.I2C_Soft_Init) refers to i2c_soft_book.o(.text.EE_Soft_Check_State) for EE_Soft_Check_State
    i2c_soft_book.o(.text.I2C_Soft_Init) refers to puts.o(i.puts) for puts
    i2c_soft_book.o(.text.I2C_Soft_Init) refers to i2c_soft_book.o(.rodata.str1.1) for .Lstr.24
    i2c_soft_book.o(.ARM.exidx.text.I2C_Soft_Init) refers to i2c_soft_book.o(.text.I2C_Soft_Init) for [Anonymous Symbol]
    i2c_soft_book.o(.text.EE_Soft_Check_State) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    i2c_soft_book.o(.text.EE_Soft_Check_State) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    i2c_soft_book.o(.text.EE_Soft_Check_State) refers to i2c_soft_book.o(.text.I2C_Start) for I2C_Start
    i2c_soft_book.o(.text.EE_Soft_Check_State) refers to i2c_soft_book.o(.text.I2C_SendByte) for I2C_SendByte
    i2c_soft_book.o(.text.EE_Soft_Check_State) refers to i2c_soft_book.o(.text.I2C_WaitAck) for I2C_WaitAck
    i2c_soft_book.o(.text.EE_Soft_Check_State) refers to i2c_soft_book.o(.text.I2C_Stop) for I2C_Stop
    i2c_soft_book.o(.ARM.exidx.text.EE_Soft_Check_State) refers to i2c_soft_book.o(.text.EE_Soft_Check_State) for [Anonymous Symbol]
    i2c_soft_book.o(.text.I2C_Soft_Write_fun) refers to i2c_soft_book.o(.text.EE_Soft_Check_State) for EE_Soft_Check_State
    i2c_soft_book.o(.text.I2C_Soft_Write_fun) refers to i2c_soft_book.o(.text.EE_Soft_WriteBytes) for EE_Soft_WriteBytes
    i2c_soft_book.o(.text.I2C_Soft_Write_fun) refers to puts.o(i.puts) for puts
    i2c_soft_book.o(.text.I2C_Soft_Write_fun) refers to systick_book.o(.text.fn_Systick_Delay) for fn_Systick_Delay
    i2c_soft_book.o(.text.I2C_Soft_Write_fun) refers to printfa.o(i.__0printf) for __2printf
    i2c_soft_book.o(.text.I2C_Soft_Write_fun) refers to i2c_soft_book.o(.rodata.str1.1) for .Lstr.24
    i2c_soft_book.o(.ARM.exidx.text.I2C_Soft_Write_fun) refers to i2c_soft_book.o(.text.I2C_Soft_Write_fun) for [Anonymous Symbol]
    i2c_soft_book.o(.text.I2C_Soft_Read_fun) refers to i2c_soft_book.o(.text.I2C_Start) for I2C_Start
    i2c_soft_book.o(.text.I2C_Soft_Read_fun) refers to i2c_soft_book.o(.text.I2C_SendByte) for I2C_SendByte
    i2c_soft_book.o(.text.I2C_Soft_Read_fun) refers to i2c_soft_book.o(.text.I2C_WaitAck) for I2C_WaitAck
    i2c_soft_book.o(.text.I2C_Soft_Read_fun) refers to puts.o(i.puts) for puts
    i2c_soft_book.o(.text.I2C_Soft_Read_fun) refers to i2c_soft_book.o(.text.I2C_Stop) for I2C_Stop
    i2c_soft_book.o(.text.I2C_Soft_Read_fun) refers to systick_book.o(.text.fn_Systick_Delay) for fn_Systick_Delay
    i2c_soft_book.o(.text.I2C_Soft_Read_fun) refers to printfa.o(i.__0printf) for __2printf
    i2c_soft_book.o(.text.I2C_Soft_Read_fun) refers to i2c_soft_book.o(.rodata.str1.1) for .L.str.5
    i2c_soft_book.o(.ARM.exidx.text.I2C_Soft_Read_fun) refers to i2c_soft_book.o(.text.I2C_Soft_Read_fun) for [Anonymous Symbol]
    i2c_soft_book.o(.text.I2C_Stop) refers to systick_book.o(.text.fn_Systick_Delay) for fn_Systick_Delay
    i2c_soft_book.o(.ARM.exidx.text.I2C_Stop) refers to i2c_soft_book.o(.text.I2C_Stop) for [Anonymous Symbol]
    i2c_soft_book.o(.text.I2C_Start) refers to systick_book.o(.text.fn_Systick_Delay) for fn_Systick_Delay
    i2c_soft_book.o(.ARM.exidx.text.I2C_Start) refers to i2c_soft_book.o(.text.I2C_Start) for [Anonymous Symbol]
    i2c_soft_book.o(.text.I2C_SendByte) refers to systick_book.o(.text.fn_Systick_Delay) for fn_Systick_Delay
    i2c_soft_book.o(.ARM.exidx.text.I2C_SendByte) refers to i2c_soft_book.o(.text.I2C_SendByte) for [Anonymous Symbol]
    i2c_soft_book.o(.text.I2C_WaitAck) refers to systick_book.o(.text.fn_Systick_Delay) for fn_Systick_Delay
    i2c_soft_book.o(.ARM.exidx.text.I2C_WaitAck) refers to i2c_soft_book.o(.text.I2C_WaitAck) for [Anonymous Symbol]
    spi_book.o(.text.SPI_FLASH_Init) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    spi_book.o(.text.SPI_FLASH_Init) refers to stm32f10x_spi.o(.text.SPI_Init) for SPI_Init
    spi_book.o(.text.SPI_FLASH_Init) refers to stm32f10x_spi.o(.text.SPI_Cmd) for SPI_Cmd
    spi_book.o(.text.SPI_FLASH_Init) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    spi_book.o(.ARM.exidx.text.SPI_FLASH_Init) refers to spi_book.o(.text.SPI_FLASH_Init) for [Anonymous Symbol]
    spi_book.o(.text.SPI_Read_ID) refers to spi_book.o(.text.SPI_FLASH_Send_Byte) for SPI_FLASH_Send_Byte
    spi_book.o(.ARM.exidx.text.SPI_Read_ID) refers to spi_book.o(.text.SPI_Read_ID) for [Anonymous Symbol]
    spi_book.o(.text.SPI_FLASH_Send_Byte) refers to stm32f10x_spi.o(.text.SPI_I2S_GetFlagStatus) for SPI_I2S_GetFlagStatus
    spi_book.o(.text.SPI_FLASH_Send_Byte) refers to spi_book.o(.text.SPI_TIMEOUT_UserCallback) for SPI_TIMEOUT_UserCallback
    spi_book.o(.text.SPI_FLASH_Send_Byte) refers to stm32f10x_spi.o(.text.SPI_I2S_SendData) for SPI_I2S_SendData
    spi_book.o(.text.SPI_FLASH_Send_Byte) refers to stm32f10x_spi.o(.text.SPI_I2S_ReceiveData) for SPI_I2S_ReceiveData
    spi_book.o(.text.SPI_FLASH_Send_Byte) refers to spi_book.o(.data.SPITimeout) for [Anonymous Symbol]
    spi_book.o(.ARM.exidx.text.SPI_FLASH_Send_Byte) refers to spi_book.o(.text.SPI_FLASH_Send_Byte) for [Anonymous Symbol]
    spi_book.o(.text.SPI_Erase_Sector) refers to spi_book.o(.text.SPI_Write_Enable) for SPI_Write_Enable
    spi_book.o(.text.SPI_Erase_Sector) refers to spi_book.o(.text.SPI_WaitForWriteEnd) for SPI_WaitForWriteEnd
    spi_book.o(.text.SPI_Erase_Sector) refers to spi_book.o(.text.SPI_FLASH_Send_Byte) for SPI_FLASH_Send_Byte
    spi_book.o(.ARM.exidx.text.SPI_Erase_Sector) refers to spi_book.o(.text.SPI_Erase_Sector) for [Anonymous Symbol]
    spi_book.o(.text.SPI_Write_Enable) refers to spi_book.o(.text.SPI_FLASH_Send_Byte) for SPI_FLASH_Send_Byte
    spi_book.o(.ARM.exidx.text.SPI_Write_Enable) refers to spi_book.o(.text.SPI_Write_Enable) for [Anonymous Symbol]
    spi_book.o(.text.SPI_WaitForWriteEnd) refers to spi_book.o(.text.SPI_FLASH_Send_Byte) for SPI_FLASH_Send_Byte
    spi_book.o(.ARM.exidx.text.SPI_WaitForWriteEnd) refers to spi_book.o(.text.SPI_WaitForWriteEnd) for [Anonymous Symbol]
    spi_book.o(.text.SPI_FLASH_BulkErase) refers to spi_book.o(.text.SPI_Write_Enable) for SPI_Write_Enable
    spi_book.o(.text.SPI_FLASH_BulkErase) refers to spi_book.o(.text.SPI_FLASH_Send_Byte) for SPI_FLASH_Send_Byte
    spi_book.o(.text.SPI_FLASH_BulkErase) refers to spi_book.o(.text.SPI_WaitForWriteEnd) for SPI_WaitForWriteEnd
    spi_book.o(.ARM.exidx.text.SPI_FLASH_BulkErase) refers to spi_book.o(.text.SPI_FLASH_BulkErase) for [Anonymous Symbol]
    spi_book.o(.text.SPI_Read_Data) refers to spi_book.o(.text.SPI_FLASH_Send_Byte) for SPI_FLASH_Send_Byte
    spi_book.o(.ARM.exidx.text.SPI_Read_Data) refers to spi_book.o(.text.SPI_Read_Data) for [Anonymous Symbol]
    spi_book.o(.text.SPI_Write_Data) refers to spi_book.o(.text.SPI_Write_Enable) for SPI_Write_Enable
    spi_book.o(.text.SPI_Write_Data) refers to puts.o(i.puts) for puts
    spi_book.o(.text.SPI_Write_Data) refers to spi_book.o(.text.SPI_FLASH_Send_Byte) for SPI_FLASH_Send_Byte
    spi_book.o(.text.SPI_Write_Data) refers to spi_book.o(.text.SPI_WaitForWriteEnd) for SPI_WaitForWriteEnd
    spi_book.o(.ARM.exidx.text.SPI_Write_Data) refers to spi_book.o(.text.SPI_Write_Data) for [Anonymous Symbol]
    spi_book.o(.text.SPI_BufferWrite_Data) refers to spi_book.o(.text.SPI_Write_Data) for SPI_Write_Data
    spi_book.o(.text.SPI_BufferWrite_Data) refers to puts.o(i.puts) for puts
    spi_book.o(.ARM.exidx.text.SPI_BufferWrite_Data) refers to spi_book.o(.text.SPI_BufferWrite_Data) for [Anonymous Symbol]
    spi_book.o(.text.SPI_Flash_PowerDown) refers to spi_book.o(.text.SPI_FLASH_Send_Byte) for SPI_FLASH_Send_Byte
    spi_book.o(.ARM.exidx.text.SPI_Flash_PowerDown) refers to spi_book.o(.text.SPI_Flash_PowerDown) for [Anonymous Symbol]
    spi_book.o(.text.SPI_Flash_WAKEUP) refers to spi_book.o(.text.SPI_FLASH_Send_Byte) for SPI_FLASH_Send_Byte
    spi_book.o(.ARM.exidx.text.SPI_Flash_WAKEUP) refers to spi_book.o(.text.SPI_Flash_WAKEUP) for [Anonymous Symbol]
    spi_book.o(.text.SPI_Show_Data) refers to printfa.o(i.__0printf) for __2printf
    spi_book.o(.ARM.exidx.text.SPI_Show_Data) refers to spi_book.o(.text.SPI_Show_Data) for [Anonymous Symbol]
    spi_book.o(.text.SPI_TIMEOUT_UserCallback) refers to printfa.o(i.__0printf) for __2printf
    spi_book.o(.ARM.exidx.text.SPI_TIMEOUT_UserCallback) refers to spi_book.o(.text.SPI_TIMEOUT_UserCallback) for [Anonymous Symbol]
    fatfs_book.o(.text.FatFs_equipment_flash) refers to puts.o(i.puts) for puts
    fatfs_book.o(.text.FatFs_equipment_flash) refers to ff.o(.text.f_mount) for f_mount
    fatfs_book.o(.text.FatFs_equipment_flash) refers to ff.o(.text.f_mkfs) for f_mkfs
    fatfs_book.o(.text.FatFs_equipment_flash) refers to printfa.o(i.__0printf) for __2printf
    fatfs_book.o(.text.FatFs_equipment_flash) refers to ff.o(.text.f_getfree) for f_getfree
    fatfs_book.o(.text.FatFs_equipment_flash) refers to fatfs_book.o(.bss.fs) for fs
    fatfs_book.o(.text.FatFs_equipment_flash) refers to fatfs_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    fatfs_book.o(.text.FatFs_equipment_flash) refers to fatfs_book.o(.rodata.str1.1) for .Lstr.30
    fatfs_book.o(.ARM.exidx.text.FatFs_equipment_flash) refers to fatfs_book.o(.text.FatFs_equipment_flash) for [Anonymous Symbol]
    fatfs_book.o(.text.FatFs_Close_flash) refers to ff.o(.text.f_mkfs) for f_mkfs
    fatfs_book.o(.text.FatFs_Close_flash) refers to ff.o(.text.f_mount) for f_mount
    fatfs_book.o(.text.FatFs_Close_flash) refers to fatfs_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    fatfs_book.o(.ARM.exidx.text.FatFs_Close_flash) refers to fatfs_book.o(.text.FatFs_Close_flash) for [Anonymous Symbol]
    fatfs_book.o(.text.FatFs_document_Text) refers to memseta.o(.text) for __aeabi_memclr4
    fatfs_book.o(.text.FatFs_document_Text) refers to printfa.o(i.__0printf) for __2printf
    fatfs_book.o(.text.FatFs_document_Text) refers to ff.o(.text.f_open) for f_open
    fatfs_book.o(.text.FatFs_document_Text) refers to puts.o(i.puts) for puts
    fatfs_book.o(.text.FatFs_document_Text) refers to ff.o(.text.f_lseek) for f_lseek
    fatfs_book.o(.text.FatFs_document_Text) refers to ff.o(.text.f_printf) for f_printf
    fatfs_book.o(.text.FatFs_document_Text) refers to ff.o(.text.f_read) for f_read
    fatfs_book.o(.text.FatFs_document_Text) refers to ff.o(.text.f_close) for f_close
    fatfs_book.o(.text.FatFs_document_Text) refers to fatfs_book.o(.bss.fnew) for fnew
    fatfs_book.o(.text.FatFs_document_Text) refers to fatfs_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    fatfs_book.o(.text.FatFs_document_Text) refers to fatfs_book.o(.rodata.str1.1) for .Lstr.36
    fatfs_book.o(.ARM.exidx.text.FatFs_document_Text) refers to fatfs_book.o(.text.FatFs_document_Text) for [Anonymous Symbol]
    fatfs_book.o(.text.FatFs_document_set_content) refers to puts.o(i.puts) for puts
    fatfs_book.o(.text.FatFs_document_set_content) refers to ff.o(.text.f_opendir) for f_opendir
    fatfs_book.o(.text.FatFs_document_set_content) refers to printfa.o(i.__0printf) for __2printf
    fatfs_book.o(.text.FatFs_document_set_content) refers to ff.o(.text.f_mkdir) for f_mkdir
    fatfs_book.o(.text.FatFs_document_set_content) refers to ff.o(.text.f_closedir) for f_closedir
    fatfs_book.o(.text.FatFs_document_set_content) refers to ff.o(.text.f_unlink) for f_unlink
    fatfs_book.o(.text.FatFs_document_set_content) refers to ff.o(.text.f_rename) for f_rename
    fatfs_book.o(.text.FatFs_document_set_content) refers to fatfs_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    fatfs_book.o(.text.FatFs_document_set_content) refers to fatfs_book.o(.rodata.str1.1) for .Lstr.38
    fatfs_book.o(.ARM.exidx.text.FatFs_document_set_content) refers to fatfs_book.o(.text.FatFs_document_set_content) for [Anonymous Symbol]
    fatfs_book.o(.text.file_check) refers to puts.o(i.puts) for puts
    fatfs_book.o(.text.file_check) refers to ff.o(.text.f_stat) for f_stat
    fatfs_book.o(.text.file_check) refers to printfa.o(i.__0printf) for __2printf
    fatfs_book.o(.text.file_check) refers to fatfs_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    fatfs_book.o(.text.file_check) refers to fatfs_book.o(.rodata.str1.1) for .L.str.20
    fatfs_book.o(.ARM.exidx.text.file_check) refers to fatfs_book.o(.text.file_check) for [Anonymous Symbol]
    fatfs_book.o(.text.Scan_file_Check) refers to puts.o(i.puts) for puts
    fatfs_book.o(.text.Scan_file_Check) refers to strcpy.o(.text) for strcpy
    fatfs_book.o(.text.Scan_file_Check) refers to fatfs_book.o(.text.scan_file) for scan_file
    fatfs_book.o(.ARM.exidx.text.Scan_file_Check) refers to fatfs_book.o(.text.Scan_file_Check) for [Anonymous Symbol]
    fatfs_book.o(.text.scan_file) refers to ff.o(.text.f_opendir) for f_opendir
    fatfs_book.o(.text.scan_file) refers to printfa.o(i.__0printf) for __2printf
    fatfs_book.o(.text.scan_file) refers to strlen.o(.text) for strlen
    fatfs_book.o(.text.scan_file) refers to ff.o(.text.f_readdir) for f_readdir
    fatfs_book.o(.text.scan_file) refers to printfa.o(i.__0sprintf) for __2sprintf
    fatfs_book.o(.text.scan_file) refers to fatfs_book.o(.bss.scan_file.lfn) for [Anonymous Symbol]
    fatfs_book.o(.ARM.exidx.text.scan_file) refers to fatfs_book.o(.text.scan_file) for [Anonymous Symbol]
    sram_book.o(.text.SRAM_Test) refers to printfa.o(i.__0printf) for __2printf
    sram_book.o(.text.SRAM_Test) refers to puts.o(i.puts) for puts
    sram_book.o(.ARM.exidx.text.SRAM_Test) refers to sram_book.o(.text.SRAM_Test) for [Anonymous Symbol]
    sram_book.o(.text.SRAM_Init) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    sram_book.o(.text.SRAM_Init) refers to stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    sram_book.o(.text.SRAM_Init) refers to memseta.o(.text) for __aeabi_memclr4
    sram_book.o(.text.SRAM_Init) refers to stm32f10x_fsmc.o(.text.FSMC_NORSRAMInit) for FSMC_NORSRAMInit
    sram_book.o(.text.SRAM_Init) refers to stm32f10x_fsmc.o(.text.FSMC_NORSRAMCmd) for FSMC_NORSRAMCmd
    sram_book.o(.text.SRAM_Init) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    sram_book.o(.ARM.exidx.text.SRAM_Init) refers to sram_book.o(.text.SRAM_Init) for [Anonymous Symbol]
    sram_book.o(.text.SRAM_Write) refers to sram_book.o(.rodata.str1.1) for .L.str.4
    sram_book.o(.text.SRAM_Write) refers to printfa.o(i.__0printf) for __2printf
    sram_book.o(.ARM.exidx.text.SRAM_Write) refers to sram_book.o(.text.SRAM_Write) for [Anonymous Symbol]
    lcd_book.o(.ARM.exidx.text.ILI9341_Write_Cmd) refers to lcd_book.o(.text.ILI9341_Write_Cmd) for [Anonymous Symbol]
    lcd_book.o(.ARM.exidx.text.ILI9341_Write_Data) refers to lcd_book.o(.text.ILI9341_Write_Data) for [Anonymous Symbol]
    lcd_book.o(.ARM.exidx.text.ILI9341_Read_Data) refers to lcd_book.o(.text.ILI9341_Read_Data) for [Anonymous Symbol]
    lcd_book.o(.ARM.exidx.text.ILI9341_Delay) refers to lcd_book.o(.text.ILI9341_Delay) for [Anonymous Symbol]
    lcd_book.o(.text.ILI9341_BackLed_Control) refers to stm32f10x_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    lcd_book.o(.text.ILI9341_BackLed_Control) refers to stm32f10x_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    lcd_book.o(.ARM.exidx.text.ILI9341_BackLed_Control) refers to lcd_book.o(.text.ILI9341_BackLed_Control) for [Anonymous Symbol]
    lcd_book.o(.text.ILI9341_Rst) refers to stm32f10x_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    lcd_book.o(.text.ILI9341_Rst) refers to lcd_book.o(.text.ILI9341_Delay) for ILI9341_Delay
    lcd_book.o(.text.ILI9341_Rst) refers to stm32f10x_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    lcd_book.o(.ARM.exidx.text.ILI9341_Rst) refers to lcd_book.o(.text.ILI9341_Rst) for [Anonymous Symbol]
    lcd_book.o(.text.ILI9341_GramScan) refers to lcd_book.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    lcd_book.o(.ARM.exidx.text.ILI9341_GramScan) refers to lcd_book.o(.text.ILI9341_GramScan) for [Anonymous Symbol]
    lcd_book.o(.text.ILI9341_Init) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    lcd_book.o(.text.ILI9341_Init) refers to stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    lcd_book.o(.text.ILI9341_Init) refers to stm32f10x_fsmc.o(.text.FSMC_NORSRAMInit) for FSMC_NORSRAMInit
    lcd_book.o(.text.ILI9341_Init) refers to stm32f10x_fsmc.o(.text.FSMC_NORSRAMCmd) for FSMC_NORSRAMCmd
    lcd_book.o(.text.ILI9341_Init) refers to lcd_book.o(.text.ILI9341_Rst) for ILI9341_Rst
    lcd_book.o(.text.ILI9341_Init) refers to lcd_book.o(.text.ILI9341_BackLed_Control) for ILI9341_BackLed_Control
    lcd_book.o(.text.ILI9341_Init) refers to lcd_book.o(.text.ILI9341_Delay) for ILI9341_Delay
    lcd_book.o(.text.ILI9341_Init) refers to lcd_book.o(.text.ILI9341_GramScan) for ILI9341_GramScan
    lcd_book.o(.text.ILI9341_Init) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    lcd_book.o(.ARM.exidx.text.ILI9341_Init) refers to lcd_book.o(.text.ILI9341_Init) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_OpenWindow) refers to lcd_book.o(.text.ILI9341_Write_Cmd) for ILI9341_Write_Cmd
    lcd_draw_book.o(.text.ILI9341_OpenWindow) refers to lcd_book.o(.text.ILI9341_Write_Data) for ILI9341_Write_Data
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_OpenWindow) refers to lcd_draw_book.o(.text.ILI9341_OpenWindow) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_GetPointPixel) refers to lcd_draw_book.o(.text.ILI9341_SetCursor) for ILI9341_SetCursor
    lcd_draw_book.o(.text.ILI9341_GetPointPixel) refers to lcd_book.o(.text.ILI9341_Write_Cmd) for ILI9341_Write_Cmd
    lcd_draw_book.o(.text.ILI9341_GetPointPixel) refers to lcd_book.o(.text.ILI9341_Read_Data) for ILI9341_Read_Data
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_GetPointPixel) refers to lcd_draw_book.o(.text.ILI9341_GetPointPixel) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_SetCursor) refers to lcd_draw_book.o(.text.ILI9341_OpenWindow) for ILI9341_OpenWindow
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_SetCursor) refers to lcd_draw_book.o(.text.ILI9341_SetCursor) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_Clear) refers to lcd_draw_book.o(.text.ILI9341_OpenWindow) for ILI9341_OpenWindow
    lcd_draw_book.o(.text.ILI9341_Clear) refers to lcd_draw_book.o(.text.ILI9341_FillColor) for ILI9341_FillColor
    lcd_draw_book.o(.text.ILI9341_Clear) refers to lcd_draw_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_Clear) refers to lcd_draw_book.o(.text.ILI9341_Clear) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_FillColor) refers to lcd_book.o(.text.ILI9341_Write_Cmd) for ILI9341_Write_Cmd
    lcd_draw_book.o(.text.ILI9341_FillColor) refers to lcd_book.o(.text.ILI9341_Write_Data) for ILI9341_Write_Data
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_FillColor) refers to lcd_draw_book.o(.text.ILI9341_FillColor) for [Anonymous Symbol]
    lcd_draw_book.o(.text.LCD_ClearLine) refers to lcd_draw_book.o(.text.ILI9341_Clear) for ILI9341_Clear
    lcd_draw_book.o(.text.LCD_ClearLine) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_X_LENGTH
    lcd_draw_book.o(.text.LCD_ClearLine) refers to lcd_draw_book.o(.data.LCD_Currentfonts) for LCD_Currentfonts
    lcd_draw_book.o(.ARM.exidx.text.LCD_ClearLine) refers to lcd_draw_book.o(.text.LCD_ClearLine) for [Anonymous Symbol]
    lcd_draw_book.o(.text.LCD_GetFont) refers to lcd_draw_book.o(.data.LCD_Currentfonts) for LCD_Currentfonts
    lcd_draw_book.o(.ARM.exidx.text.LCD_GetFont) refers to lcd_draw_book.o(.text.LCD_GetFont) for [Anonymous Symbol]
    lcd_draw_book.o(.text.LCD_SetColors) refers to lcd_draw_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lcd_draw_book.o(.ARM.exidx.text.LCD_SetColors) refers to lcd_draw_book.o(.text.LCD_SetColors) for [Anonymous Symbol]
    lcd_draw_book.o(.text.LCD_SetForeColor) refers to lcd_draw_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lcd_draw_book.o(.ARM.exidx.text.LCD_SetForeColor) refers to lcd_draw_book.o(.text.LCD_SetForeColor) for [Anonymous Symbol]
    lcd_draw_book.o(.text.LCD_SetBackColor) refers to lcd_draw_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lcd_draw_book.o(.ARM.exidx.text.LCD_SetBackColor) refers to lcd_draw_book.o(.text.LCD_SetBackColor) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_SetPointPixel) refers to lcd_draw_book.o(.text.ILI9341_SetCursor) for ILI9341_SetCursor
    lcd_draw_book.o(.text.ILI9341_SetPointPixel) refers to lcd_draw_book.o(.text.ILI9341_FillColor) for ILI9341_FillColor
    lcd_draw_book.o(.text.ILI9341_SetPointPixel) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_Y_LENGTH
    lcd_draw_book.o(.text.ILI9341_SetPointPixel) refers to lcd_draw_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_SetPointPixel) refers to lcd_draw_book.o(.text.ILI9341_SetPointPixel) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DrawLine) refers to lcd_draw_book.o(.text.ILI9341_SetPointPixel) for ILI9341_SetPointPixel
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DrawLine) refers to lcd_draw_book.o(.text.ILI9341_DrawLine) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DrawRectangle) refers to lcd_draw_book.o(.text.ILI9341_OpenWindow) for ILI9341_OpenWindow
    lcd_draw_book.o(.text.ILI9341_DrawRectangle) refers to lcd_draw_book.o(.text.ILI9341_FillColor) for ILI9341_FillColor
    lcd_draw_book.o(.text.ILI9341_DrawRectangle) refers to lcd_draw_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DrawRectangle) refers to lcd_draw_book.o(.text.ILI9341_DrawLine) for ILI9341_DrawLine
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DrawRectangle) refers to lcd_draw_book.o(.text.ILI9341_DrawRectangle) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DrawCircle) refers to lcd_draw_book.o(.text.ILI9341_SetPointPixel) for ILI9341_SetPointPixel
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DrawCircle) refers to lcd_draw_book.o(.text.ILI9341_DrawCircle) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DrawCross) refers to lcd_draw_book.o(.text.ILI9341_DrawLine) for ILI9341_DrawLine
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DrawCross) refers to lcd_draw_book.o(.text.ILI9341_DrawCross) for [Anonymous Symbol]
    lcd_draw_book.o(.text.LCD_SetTextColor) refers to lcd_draw_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lcd_draw_book.o(.ARM.exidx.text.LCD_SetTextColor) refers to lcd_draw_book.o(.text.LCD_SetTextColor) for [Anonymous Symbol]
    lcd_draw_book.o(.text.LCD_SetFont) refers to lcd_draw_book.o(.data.LCD_Currentfonts) for LCD_Currentfonts
    lcd_draw_book.o(.ARM.exidx.text.LCD_SetFont) refers to lcd_draw_book.o(.text.LCD_SetFont) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DispChar_EN) refers to lcd_draw_book.o(.text.ILI9341_GetPointPixel) for ILI9341_GetPointPixel
    lcd_draw_book.o(.text.ILI9341_DispChar_EN) refers to lcd_draw_book.o(.text.ILI9341_OpenWindow) for ILI9341_OpenWindow
    lcd_draw_book.o(.text.ILI9341_DispChar_EN) refers to lcd_book.o(.text.ILI9341_Write_Cmd) for ILI9341_Write_Cmd
    lcd_draw_book.o(.text.ILI9341_DispChar_EN) refers to lcd_book.o(.text.ILI9341_Write_Data) for ILI9341_Write_Data
    lcd_draw_book.o(.text.ILI9341_DispChar_EN) refers to lcd_draw_book.o(.data.LCD_Currentfonts) for LCD_Currentfonts
    lcd_draw_book.o(.text.ILI9341_DispChar_EN) refers to lcd_draw_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispChar_EN) refers to lcd_draw_book.o(.text.ILI9341_DispChar_EN) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DispStringLine_EN) refers to lcd_draw_book.o(.text.ILI9341_DispChar_EN) for ILI9341_DispChar_EN
    lcd_draw_book.o(.text.ILI9341_DispStringLine_EN) refers to lcd_draw_book.o(.data.LCD_Currentfonts) for LCD_Currentfonts
    lcd_draw_book.o(.text.ILI9341_DispStringLine_EN) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_X_LENGTH
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispStringLine_EN) refers to lcd_draw_book.o(.text.ILI9341_DispStringLine_EN) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DispString_EN) refers to lcd_draw_book.o(.text.ILI9341_DispChar_EN) for ILI9341_DispChar_EN
    lcd_draw_book.o(.text.ILI9341_DispString_EN) refers to lcd_draw_book.o(.data.LCD_Currentfonts) for LCD_Currentfonts
    lcd_draw_book.o(.text.ILI9341_DispString_EN) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_X_LENGTH
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispString_EN) refers to lcd_draw_book.o(.text.ILI9341_DispString_EN) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DispString_EN_YDir) refers to lcd_draw_book.o(.text.ILI9341_DispChar_EN) for ILI9341_DispChar_EN
    lcd_draw_book.o(.text.ILI9341_DispString_EN_YDir) refers to lcd_draw_book.o(.data.LCD_Currentfonts) for LCD_Currentfonts
    lcd_draw_book.o(.text.ILI9341_DispString_EN_YDir) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_Y_LENGTH
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispString_EN_YDir) refers to lcd_draw_book.o(.text.ILI9341_DispString_EN_YDir) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DispChar_CH) refers to lcd_draw_book.o(.text.ILI9341_GetPointPixel) for ILI9341_GetPointPixel
    lcd_draw_book.o(.text.ILI9341_DispChar_CH) refers to lcd_draw_book.o(.text.ILI9341_OpenWindow) for ILI9341_OpenWindow
    lcd_draw_book.o(.text.ILI9341_DispChar_CH) refers to lcd_book.o(.text.ILI9341_Write_Cmd) for ILI9341_Write_Cmd
    lcd_draw_book.o(.text.ILI9341_DispChar_CH) refers to fonts.o(.text.GetGBKCode_from_EXFlash) for GetGBKCode_from_EXFlash
    lcd_draw_book.o(.text.ILI9341_DispChar_CH) refers to lcd_book.o(.text.ILI9341_Write_Data) for ILI9341_Write_Data
    lcd_draw_book.o(.text.ILI9341_DispChar_CH) refers to lcd_draw_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispChar_CH) refers to lcd_draw_book.o(.text.ILI9341_DispChar_CH) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DispString_CH) refers to lcd_draw_book.o(.text.ILI9341_DispChar_CH) for ILI9341_DispChar_CH
    lcd_draw_book.o(.text.ILI9341_DispString_CH) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_X_LENGTH
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispString_CH) refers to lcd_draw_book.o(.text.ILI9341_DispString_CH) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DispStringLine_EN_CH) refers to lcd_draw_book.o(.text.ILI9341_DispChar_EN) for ILI9341_DispChar_EN
    lcd_draw_book.o(.text.ILI9341_DispStringLine_EN_CH) refers to lcd_draw_book.o(.text.ILI9341_DispChar_CH) for ILI9341_DispChar_CH
    lcd_draw_book.o(.text.ILI9341_DispStringLine_EN_CH) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_X_LENGTH
    lcd_draw_book.o(.text.ILI9341_DispStringLine_EN_CH) refers to lcd_draw_book.o(.data.LCD_Currentfonts) for LCD_Currentfonts
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispStringLine_EN_CH) refers to lcd_draw_book.o(.text.ILI9341_DispStringLine_EN_CH) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DispString_EN_CH) refers to lcd_draw_book.o(.text.ILI9341_DispChar_EN) for ILI9341_DispChar_EN
    lcd_draw_book.o(.text.ILI9341_DispString_EN_CH) refers to lcd_draw_book.o(.text.ILI9341_DispChar_CH) for ILI9341_DispChar_CH
    lcd_draw_book.o(.text.ILI9341_DispString_EN_CH) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_X_LENGTH
    lcd_draw_book.o(.text.ILI9341_DispString_EN_CH) refers to lcd_draw_book.o(.data.LCD_Currentfonts) for LCD_Currentfonts
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispString_EN_CH) refers to lcd_draw_book.o(.text.ILI9341_DispString_EN_CH) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DispString_EN_CH_YDir) refers to lcd_draw_book.o(.text.ILI9341_DispChar_EN) for ILI9341_DispChar_EN
    lcd_draw_book.o(.text.ILI9341_DispString_EN_CH_YDir) refers to lcd_draw_book.o(.text.ILI9341_DispChar_CH) for ILI9341_DispChar_CH
    lcd_draw_book.o(.text.ILI9341_DispString_EN_CH_YDir) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_Y_LENGTH
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispString_EN_CH_YDir) refers to lcd_draw_book.o(.text.ILI9341_DispString_EN_CH_YDir) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_zoomChar) refers to lcd_draw_book.o(.bss.zoomTempBuff) for zoomTempBuff
    lcd_draw_book.o(.text.ILI9341_zoomChar) refers to lcd_draw_book.o(.bss.zoomBuff) for zoomBuff
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_zoomChar) refers to lcd_draw_book.o(.text.ILI9341_zoomChar) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DrawChar_Ex) refers to lcd_draw_book.o(.text.ILI9341_GetPointPixel) for ILI9341_GetPointPixel
    lcd_draw_book.o(.text.ILI9341_DrawChar_Ex) refers to lcd_draw_book.o(.text.ILI9341_OpenWindow) for ILI9341_OpenWindow
    lcd_draw_book.o(.text.ILI9341_DrawChar_Ex) refers to lcd_book.o(.text.ILI9341_Write_Cmd) for ILI9341_Write_Cmd
    lcd_draw_book.o(.text.ILI9341_DrawChar_Ex) refers to lcd_book.o(.text.ILI9341_Write_Data) for ILI9341_Write_Data
    lcd_draw_book.o(.text.ILI9341_DrawChar_Ex) refers to lcd_draw_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DrawChar_Ex) refers to lcd_draw_book.o(.text.ILI9341_DrawChar_Ex) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DisplayStringEx) refers to fonts.o(.text.GetGBKCode_from_EXFlash) for GetGBKCode_from_EXFlash
    lcd_draw_book.o(.text.ILI9341_DisplayStringEx) refers to lcd_draw_book.o(.text.ILI9341_zoomChar) for ILI9341_zoomChar
    lcd_draw_book.o(.text.ILI9341_DisplayStringEx) refers to lcd_draw_book.o(.text.ILI9341_DrawChar_Ex) for ILI9341_DrawChar_Ex
    lcd_draw_book.o(.text.ILI9341_DisplayStringEx) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_X_LENGTH
    lcd_draw_book.o(.text.ILI9341_DisplayStringEx) refers to fonts.o(.data.Font16x24) for Font16x24
    lcd_draw_book.o(.text.ILI9341_DisplayStringEx) refers to lcd_draw_book.o(.bss.zoomBuff) for zoomBuff
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DisplayStringEx) refers to lcd_draw_book.o(.text.ILI9341_DisplayStringEx) for [Anonymous Symbol]
    lcd_draw_book.o(.text.ILI9341_DisplayStringEx_YDir) refers to fonts.o(.text.GetGBKCode_from_EXFlash) for GetGBKCode_from_EXFlash
    lcd_draw_book.o(.text.ILI9341_DisplayStringEx_YDir) refers to lcd_draw_book.o(.text.ILI9341_zoomChar) for ILI9341_zoomChar
    lcd_draw_book.o(.text.ILI9341_DisplayStringEx_YDir) refers to lcd_draw_book.o(.text.ILI9341_DrawChar_Ex) for ILI9341_DrawChar_Ex
    lcd_draw_book.o(.text.ILI9341_DisplayStringEx_YDir) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_X_LENGTH
    lcd_draw_book.o(.text.ILI9341_DisplayStringEx_YDir) refers to fonts.o(.data.Font16x24) for Font16x24
    lcd_draw_book.o(.text.ILI9341_DisplayStringEx_YDir) refers to lcd_draw_book.o(.bss.zoomBuff) for zoomBuff
    lcd_draw_book.o(.ARM.exidx.text.ILI9341_DisplayStringEx_YDir) refers to lcd_draw_book.o(.text.ILI9341_DisplayStringEx_YDir) for [Anonymous Symbol]
    lcd_draw_book.o(.data.LCD_Currentfonts) refers to fonts.o(.data.Font8x16) for Font8x16
    lcd_pagehtml_book.o(.text.Display_Char_test) refers to putchar.o(i.putchar) for putchar
    lcd_pagehtml_book.o(.text.Display_Char_test) refers to lcd_pagehtml_book.o(.data.test_modu2) for test_modu2
    lcd_pagehtml_book.o(.ARM.exidx.text.Display_Char_test) refers to lcd_pagehtml_book.o(.text.Display_Char_test) for [Anonymous Symbol]
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_draw_book.o(.text.LCD_SetFont) for LCD_SetFont
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_draw_book.o(.text.LCD_SetColors) for LCD_SetColors
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate_SetStand4Pint) for XPT2046_Touch_Calibrate_SetStand4Pint
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_draw_book.o(.text.ILI9341_Clear) for ILI9341_Clear
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to printfa.o(i.__0sprintf) for __2sprintf
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_draw_book.o(.text.ILI9341_DispStringLine_EN_CH) for ILI9341_DispStringLine_EN_CH
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_book.o(.text.ILI9341_Delay) for ILI9341_Delay
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_draw_book.o(.text.LCD_SetForeColor) for LCD_SetForeColor
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_draw_book.o(.text.ILI9341_DrawCircle) for ILI9341_DrawCircle
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_draw_book.o(.text.ILI9341_DrawCross) for ILI9341_DrawCross
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to xpt2046_lcd_function_book.o(.text.XPT2046_ReadAdc_Smooth_XY) for XPT2046_ReadAdc_Smooth_XY
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate) for XPT2046_Touch_Calibrate
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_draw_book.o(.text.LCD_SetTextColor) for LCD_SetTextColor
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_draw_book.o(.text.LCD_GetFont) for LCD_GetFont
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_draw_book.o(.text.ILI9341_DispStringLine_EN) for ILI9341_DispStringLine_EN
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to fonts.o(.data.Font8x16) for Font8x16
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_Y_LENGTH
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to lcd_pagehtml_book.o(.rodata.str1.1) for .L.str.4
    lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) refers to xpt2046_lcd_function_book.o(.bss..L_MergedGlobals) for strCrossCoordinate
    lcd_pagehtml_book.o(.ARM.exidx.text.XPT2046_Touch_Calibrate_Page) refers to lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) for [Anonymous Symbol]
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to lcd_draw_book.o(.text.ILI9341_Clear) for ILI9341_Clear
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to lcd_draw_book.o(.text.LCD_SetColors) for LCD_SetColors
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_Y_LENGTH
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to lcd_draw_book.o(.text.LCD_SetForeColor) for LCD_SetForeColor
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to lcd_draw_book.o(.text.ILI9341_DrawRectangle) for ILI9341_DrawRectangle
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to lcd_draw_book.o(.text.ILI9341_DrawLine) for ILI9341_DrawLine
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to fonts.o(.data.Font8x16) for Font8x16
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to lcd_draw_book.o(.text.LCD_SetFont) for LCD_SetFont
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to lcd_draw_book.o(.text.LCD_GetFont) for LCD_GetFont
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to lcd_draw_book.o(.text.ILI9341_DispStringLine_EN) for ILI9341_DispStringLine_EN
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to lcd_draw_book.o(.text.ILI9341_DrawCircle) for ILI9341_DrawCircle
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to fonts.o(.data.Font16x24) for Font16x24
    lcd_pagehtml_book.o(.text.fn_Lcd_Page1) refers to lcd_pagehtml_book.o(.rodata.str1.1) for .L.str.12
    lcd_pagehtml_book.o(.ARM.exidx.text.fn_Lcd_Page1) refers to lcd_pagehtml_book.o(.text.fn_Lcd_Page1) for [Anonymous Symbol]
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.ILI9341_Clear) for ILI9341_Clear
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.ILI9341_DispString_EN_CH) for ILI9341_DispString_EN_CH
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.ILI9341_DispString_CH) for ILI9341_DispString_CH
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.ILI9341_DispStringLine_EN) for ILI9341_DispStringLine_EN
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.LCD_SetColors) for LCD_SetColors
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_Y_LENGTH
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.LCD_SetForeColor) for LCD_SetForeColor
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.ILI9341_DrawRectangle) for ILI9341_DrawRectangle
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.ILI9341_DrawLine) for ILI9341_DrawLine
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to fonts.o(.data.Font8x16) for Font8x16
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.LCD_SetFont) for LCD_SetFont
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.LCD_GetFont) for LCD_GetFont
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.ILI9341_DispStringLine_EN_CH) for ILI9341_DispStringLine_EN_CH
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.ILI9341_DrawCircle) for ILI9341_DrawCircle
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to fonts.o(.data.Font24x32) for Font24x32
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_pagehtml_book.o(.rodata.str1.1) for .L.str.12
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to lcd_draw_book.o(.text.ILI9341_DisplayStringEx) for ILI9341_DisplayStringEx
    lcd_pagehtml_book.o(.text.fn_Lcd_Page2) refers to fonts.o(.data.Font16x24) for Font16x24
    lcd_pagehtml_book.o(.ARM.exidx.text.fn_Lcd_Page2) refers to lcd_pagehtml_book.o(.text.fn_Lcd_Page2) for [Anonymous Symbol]
    xpt2046_lcd_book.o(.text.XPT2046_GPIO_Init) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    xpt2046_lcd_book.o(.text.XPT2046_GPIO_Init) refers to stm32f10x_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    xpt2046_lcd_book.o(.text.XPT2046_GPIO_Init) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    xpt2046_lcd_book.o(.ARM.exidx.text.XPT2046_GPIO_Init) refers to xpt2046_lcd_book.o(.text.XPT2046_GPIO_Init) for [Anonymous Symbol]
    xpt2046_lcd_book.o(.text.XPT2046_ReadAdc_XY) refers to xpt2046_lcd_book.o(.text.XPT2046_ReadAdc) for XPT2046_ReadAdc
    xpt2046_lcd_book.o(.text.XPT2046_ReadAdc_XY) refers to xpt2046_lcd_book.o(.text.XPT2046_DelayUS) for XPT2046_DelayUS
    xpt2046_lcd_book.o(.text.XPT2046_ReadAdc_XY) refers to printfa.o(i.__0printf) for __2printf
    xpt2046_lcd_book.o(.ARM.exidx.text.XPT2046_ReadAdc_XY) refers to xpt2046_lcd_book.o(.text.XPT2046_ReadAdc_XY) for [Anonymous Symbol]
    xpt2046_lcd_book.o(.text.XPT2046_ReadAdc) refers to stm32f10x_gpio.o(.text.GPIO_SetBits) for GPIO_SetBits
    xpt2046_lcd_book.o(.text.XPT2046_ReadAdc) refers to stm32f10x_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    xpt2046_lcd_book.o(.text.XPT2046_ReadAdc) refers to xpt2046_lcd_book.o(.text.XPT2046_DelayUS) for XPT2046_DelayUS
    xpt2046_lcd_book.o(.text.XPT2046_ReadAdc) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    xpt2046_lcd_book.o(.ARM.exidx.text.XPT2046_ReadAdc) refers to xpt2046_lcd_book.o(.text.XPT2046_ReadAdc) for [Anonymous Symbol]
    xpt2046_lcd_book.o(.ARM.exidx.text.XPT2046_DelayUS) refers to xpt2046_lcd_book.o(.text.XPT2046_DelayUS) for [Anonymous Symbol]
    xpt2046_lcd_function_book.o(.text.XPT2046_TouchDetect) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    xpt2046_lcd_function_book.o(.text.XPT2046_TouchDetect) refers to xpt2046_lcd_function_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    xpt2046_lcd_function_book.o(.ARM.exidx.text.XPT2046_TouchDetect) refers to xpt2046_lcd_function_book.o(.text.XPT2046_TouchDetect) for [Anonymous Symbol]
    xpt2046_lcd_function_book.o(.text.XPT2046_ReadAdc_Smooth_XY) refers to memseta.o(.text) for __aeabi_memclr4
    xpt2046_lcd_function_book.o(.text.XPT2046_ReadAdc_Smooth_XY) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    xpt2046_lcd_function_book.o(.text.XPT2046_ReadAdc_Smooth_XY) refers to xpt2046_lcd_book.o(.text.XPT2046_ReadAdc_XY) for XPT2046_ReadAdc_XY
    xpt2046_lcd_function_book.o(.text.XPT2046_ReadAdc_Smooth_XY) refers to xpt2046_lcd_function_book.o(.bss.ucXPT2046_TouchFlag) for ucXPT2046_TouchFlag
    xpt2046_lcd_function_book.o(.ARM.exidx.text.XPT2046_ReadAdc_Smooth_XY) refers to xpt2046_lcd_function_book.o(.text.XPT2046_ReadAdc_Smooth_XY) for [Anonymous Symbol]
    xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate_SetStand4Pint) refers to lcd_book.o(.data..L_MergedGlobals) for LCD_X_LENGTH
    xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate_SetStand4Pint) refers to xpt2046_lcd_function_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    xpt2046_lcd_function_book.o(.ARM.exidx.text.XPT2046_Touch_Calibrate_SetStand4Pint) refers to xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate_SetStand4Pint) for [Anonymous Symbol]
    xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate) refers to fflti.o(.text) for __aeabi_i2f
    xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate) refers to fmul.o(.text) for __aeabi_fmul
    xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate) refers to fadd.o(.text) for __aeabi_fadd
    xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate) refers to fdiv.o(.text) for __aeabi_fdiv
    xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate) refers to ffixi.o(.text) for __aeabi_f2iz
    xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate) refers to printfa.o(i.__0printf) for __2printf
    xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate) refers to f2d.o(.text) for __aeabi_f2d
    xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate) refers to puts.o(i.puts) for puts
    xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate) refers to xpt2046_lcd_function_book.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate) refers to xpt2046_lcd_function_book.o(.data.strXPT2046_TouchPara) for strXPT2046_TouchPara
    xpt2046_lcd_function_book.o(.ARM.exidx.text.XPT2046_Touch_Calibrate) refers to xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate) for [Anonymous Symbol]
    diskio.o(.text.disk_status) refers to spi_book.o(.text.SPI_Read_ID) for SPI_Read_ID
    diskio.o(.ARM.exidx.text.disk_status) refers to diskio.o(.text.disk_status) for [Anonymous Symbol]
    diskio.o(.text.disk_initialize) refers to spi_book.o(.text.SPI_FLASH_Init) for SPI_FLASH_Init
    diskio.o(.text.disk_initialize) refers to spi_book.o(.text.SPI_Flash_WAKEUP) for SPI_Flash_WAKEUP
    diskio.o(.text.disk_initialize) refers to diskio.o(.text.disk_status) for disk_status
    diskio.o(.ARM.exidx.text.disk_initialize) refers to diskio.o(.text.disk_initialize) for [Anonymous Symbol]
    diskio.o(.text.disk_read) refers to spi_book.o(.text.SPI_Read_Data) for SPI_Read_Data
    diskio.o(.ARM.exidx.text.disk_read) refers to diskio.o(.text.disk_read) for [Anonymous Symbol]
    diskio.o(.text.disk_write) refers to spi_book.o(.text.SPI_Erase_Sector) for SPI_Erase_Sector
    diskio.o(.text.disk_write) refers to spi_book.o(.text.SPI_BufferWrite_Data) for SPI_BufferWrite_Data
    diskio.o(.ARM.exidx.text.disk_write) refers to diskio.o(.text.disk_write) for [Anonymous Symbol]
    diskio.o(.ARM.exidx.text.disk_ioctl) refers to diskio.o(.text.disk_ioctl) for [Anonymous Symbol]
    diskio.o(.ARM.exidx.text.get_fattime) refers to diskio.o(.text.get_fattime) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.clust2sect) refers to ff.o(.text.clust2sect) for [Anonymous Symbol]
    ff.o(.text.get_fat) refers to ff.o(.text.move_window) for move_window
    ff.o(.ARM.exidx.text.get_fat) refers to ff.o(.text.get_fat) for [Anonymous Symbol]
    ff.o(.text.move_window) refers to ff.o(.text.sync_window) for sync_window
    ff.o(.text.move_window) refers to diskio.o(.text.disk_read) for disk_read
    ff.o(.ARM.exidx.text.move_window) refers to ff.o(.text.move_window) for [Anonymous Symbol]
    ff.o(.text.put_fat) refers to ff.o(.text.move_window) for move_window
    ff.o(.ARM.exidx.text.put_fat) refers to ff.o(.text.put_fat) for [Anonymous Symbol]
    ff.o(.text.f_mount) refers to ff.o(.text.get_ldnumber) for get_ldnumber
    ff.o(.text.f_mount) refers to ff.o(.text.find_volume) for find_volume
    ff.o(.text.f_mount) refers to ff.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.f_mount) refers to ff.o(.text.f_mount) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.get_ldnumber) refers to ff.o(.text.get_ldnumber) for [Anonymous Symbol]
    ff.o(.text.find_volume) refers to ff.o(.text.get_ldnumber) for get_ldnumber
    ff.o(.text.find_volume) refers to diskio.o(.text.disk_status) for disk_status
    ff.o(.text.find_volume) refers to diskio.o(.text.disk_initialize) for disk_initialize
    ff.o(.text.find_volume) refers to diskio.o(.text.disk_ioctl) for disk_ioctl
    ff.o(.text.find_volume) refers to ff.o(.text.check_fs) for check_fs
    ff.o(.text.find_volume) refers to ff.o(.text.move_window) for move_window
    ff.o(.text.find_volume) refers to ff.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.find_volume) refers to ff.o(.text.find_volume) for [Anonymous Symbol]
    ff.o(.text.f_open) refers to ff.o(.text.find_volume) for find_volume
    ff.o(.text.f_open) refers to ff.o(.text.follow_path) for follow_path
    ff.o(.text.f_open) refers to ff.o(.text.dir_register) for dir_register
    ff.o(.text.f_open) refers to diskio.o(.text.get_fattime) for get_fattime
    ff.o(.text.f_open) refers to ff.o(.text.ld_clust) for ld_clust
    ff.o(.text.f_open) refers to ff.o(.text.remove_chain) for remove_chain
    ff.o(.text.f_open) refers to ff.o(.text.move_window) for move_window
    ff.o(.ARM.exidx.text.f_open) refers to ff.o(.text.f_open) for [Anonymous Symbol]
    ff.o(.text.follow_path) refers to ff.o(.text.dir_sdi) for dir_sdi
    ff.o(.text.follow_path) refers to cc936.o(.text.ff_convert) for ff_convert
    ff.o(.text.follow_path) refers to ff.o(.text.chk_chr) for chk_chr
    ff.o(.text.follow_path) refers to ff.o(.text.mem_set) for mem_set
    ff.o(.text.follow_path) refers to cc936.o(.text.ff_wtoupper) for ff_wtoupper
    ff.o(.text.follow_path) refers to ff.o(.text.dir_find) for dir_find
    ff.o(.text.follow_path) refers to ff.o(.text.ld_clust) for ld_clust
    ff.o(.ARM.exidx.text.follow_path) refers to ff.o(.text.follow_path) for [Anonymous Symbol]
    ff.o(.text.dir_register) refers to ff.o(.text.mem_cpy) for mem_cpy
    ff.o(.text.dir_register) refers to ff.o(.text.dir_find) for dir_find
    ff.o(.text.dir_register) refers to ff.o(.text.dir_sdi) for dir_sdi
    ff.o(.text.dir_register) refers to ff.o(.text.move_window) for move_window
    ff.o(.text.dir_register) refers to ff.o(.text.dir_next) for dir_next
    ff.o(.text.dir_register) refers to ff.o(.text.sum_sfn) for sum_sfn
    ff.o(.text.dir_register) refers to ff.o(.text.mem_set) for mem_set
    ff.o(.text.dir_register) refers to ff.o(.rodata.LfnOfs) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.dir_register) refers to ff.o(.text.dir_register) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.ld_clust) refers to ff.o(.text.ld_clust) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.st_clust) refers to ff.o(.text.st_clust) for [Anonymous Symbol]
    ff.o(.text.remove_chain) refers to ff.o(.text.get_fat) for get_fat
    ff.o(.text.remove_chain) refers to ff.o(.text.put_fat) for put_fat
    ff.o(.ARM.exidx.text.remove_chain) refers to ff.o(.text.remove_chain) for [Anonymous Symbol]
    ff.o(.text.f_read) refers to ff.o(.text.validate) for validate
    ff.o(.text.f_read) refers to ff.o(.text.get_fat) for get_fat
    ff.o(.text.f_read) refers to ff.o(.text.clust2sect) for clust2sect
    ff.o(.text.f_read) refers to diskio.o(.text.disk_write) for disk_write
    ff.o(.text.f_read) refers to diskio.o(.text.disk_read) for disk_read
    ff.o(.text.f_read) refers to ff.o(.text.mem_cpy) for mem_cpy
    ff.o(.ARM.exidx.text.f_read) refers to ff.o(.text.f_read) for [Anonymous Symbol]
    ff.o(.text.validate) refers to diskio.o(.text.disk_status) for disk_status
    ff.o(.ARM.exidx.text.validate) refers to ff.o(.text.validate) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.mem_cpy) refers to ff.o(.text.mem_cpy) for [Anonymous Symbol]
    ff.o(.text.f_write) refers to ff.o(.text.validate) for validate
    ff.o(.text.f_write) refers to ff.o(.text.create_chain) for create_chain
    ff.o(.text.f_write) refers to diskio.o(.text.disk_write) for disk_write
    ff.o(.text.f_write) refers to ff.o(.text.clust2sect) for clust2sect
    ff.o(.text.f_write) refers to diskio.o(.text.disk_read) for disk_read
    ff.o(.text.f_write) refers to ff.o(.text.mem_cpy) for mem_cpy
    ff.o(.ARM.exidx.text.f_write) refers to ff.o(.text.f_write) for [Anonymous Symbol]
    ff.o(.text.create_chain) refers to ff.o(.text.get_fat) for get_fat
    ff.o(.text.create_chain) refers to ff.o(.text.put_fat) for put_fat
    ff.o(.ARM.exidx.text.create_chain) refers to ff.o(.text.create_chain) for [Anonymous Symbol]
    ff.o(.text.f_sync) refers to ff.o(.text.validate) for validate
    ff.o(.text.f_sync) refers to diskio.o(.text.disk_write) for disk_write
    ff.o(.text.f_sync) refers to ff.o(.text.move_window) for move_window
    ff.o(.text.f_sync) refers to ff.o(.text.st_clust) for st_clust
    ff.o(.text.f_sync) refers to diskio.o(.text.get_fattime) for get_fattime
    ff.o(.text.f_sync) refers to ff.o(.text.sync_fs) for sync_fs
    ff.o(.ARM.exidx.text.f_sync) refers to ff.o(.text.f_sync) for [Anonymous Symbol]
    ff.o(.text.sync_fs) refers to ff.o(.text.sync_window) for sync_window
    ff.o(.text.sync_fs) refers to ff.o(.text.mem_set) for mem_set
    ff.o(.text.sync_fs) refers to diskio.o(.text.disk_write) for disk_write
    ff.o(.text.sync_fs) refers to diskio.o(.text.disk_ioctl) for disk_ioctl
    ff.o(.ARM.exidx.text.sync_fs) refers to ff.o(.text.sync_fs) for [Anonymous Symbol]
    ff.o(.text.f_close) refers to ff.o(.text.f_sync) for f_sync
    ff.o(.text.f_close) refers to ff.o(.text.validate) for validate
    ff.o(.ARM.exidx.text.f_close) refers to ff.o(.text.f_close) for [Anonymous Symbol]
    ff.o(.text.f_lseek) refers to ff.o(.text.validate) for validate
    ff.o(.text.f_lseek) refers to ff.o(.text.get_fat) for get_fat
    ff.o(.text.f_lseek) refers to ff.o(.text.create_chain) for create_chain
    ff.o(.text.f_lseek) refers to diskio.o(.text.disk_write) for disk_write
    ff.o(.text.f_lseek) refers to diskio.o(.text.disk_read) for disk_read
    ff.o(.text.f_lseek) refers to ff.o(.text.clust2sect) for clust2sect
    ff.o(.ARM.exidx.text.f_lseek) refers to ff.o(.text.f_lseek) for [Anonymous Symbol]
    ff.o(.text.f_opendir) refers to ff.o(.text.find_volume) for find_volume
    ff.o(.text.f_opendir) refers to ff.o(.text.follow_path) for follow_path
    ff.o(.text.f_opendir) refers to ff.o(.text.ld_clust) for ld_clust
    ff.o(.text.f_opendir) refers to ff.o(.text.dir_sdi) for dir_sdi
    ff.o(.ARM.exidx.text.f_opendir) refers to ff.o(.text.f_opendir) for [Anonymous Symbol]
    ff.o(.text.dir_sdi) refers to ff.o(.text.get_fat) for get_fat
    ff.o(.text.dir_sdi) refers to ff.o(.text.clust2sect) for clust2sect
    ff.o(.ARM.exidx.text.dir_sdi) refers to ff.o(.text.dir_sdi) for [Anonymous Symbol]
    ff.o(.text.f_closedir) refers to ff.o(.text.validate) for validate
    ff.o(.ARM.exidx.text.f_closedir) refers to ff.o(.text.f_closedir) for [Anonymous Symbol]
    ff.o(.text.f_readdir) refers to ff.o(.text.validate) for validate
    ff.o(.text.f_readdir) refers to ff.o(.text.dir_read) for dir_read
    ff.o(.text.f_readdir) refers to ff.o(.text.get_fileinfo) for get_fileinfo
    ff.o(.text.f_readdir) refers to ff.o(.text.dir_next) for dir_next
    ff.o(.text.f_readdir) refers to ff.o(.text.dir_sdi) for dir_sdi
    ff.o(.ARM.exidx.text.f_readdir) refers to ff.o(.text.f_readdir) for [Anonymous Symbol]
    ff.o(.text.dir_read) refers to ff.o(.text.move_window) for move_window
    ff.o(.text.dir_read) refers to ff.o(.text.dir_next) for dir_next
    ff.o(.text.dir_read) refers to ff.o(.text.sum_sfn) for sum_sfn
    ff.o(.text.dir_read) refers to ff.o(.rodata.LfnOfs) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.dir_read) refers to ff.o(.text.dir_read) for [Anonymous Symbol]
    ff.o(.text.get_fileinfo) refers to cc936.o(.text.ff_convert) for ff_convert
    ff.o(.ARM.exidx.text.get_fileinfo) refers to ff.o(.text.get_fileinfo) for [Anonymous Symbol]
    ff.o(.text.dir_next) refers to ff.o(.text.get_fat) for get_fat
    ff.o(.text.dir_next) refers to ff.o(.text.clust2sect) for clust2sect
    ff.o(.text.dir_next) refers to ff.o(.text.create_chain) for create_chain
    ff.o(.text.dir_next) refers to ff.o(.text.sync_window) for sync_window
    ff.o(.text.dir_next) refers to ff.o(.text.mem_set) for mem_set
    ff.o(.ARM.exidx.text.dir_next) refers to ff.o(.text.dir_next) for [Anonymous Symbol]
    ff.o(.text.f_stat) refers to ff.o(.text.find_volume) for find_volume
    ff.o(.text.f_stat) refers to ff.o(.text.follow_path) for follow_path
    ff.o(.text.f_stat) refers to ff.o(.text.get_fileinfo) for get_fileinfo
    ff.o(.ARM.exidx.text.f_stat) refers to ff.o(.text.f_stat) for [Anonymous Symbol]
    ff.o(.text.f_getfree) refers to ff.o(.text.find_volume) for find_volume
    ff.o(.text.f_getfree) refers to ff.o(.text.get_fat) for get_fat
    ff.o(.text.f_getfree) refers to ff.o(.text.move_window) for move_window
    ff.o(.ARM.exidx.text.f_getfree) refers to ff.o(.text.f_getfree) for [Anonymous Symbol]
    ff.o(.text.f_truncate) refers to ff.o(.text.validate) for validate
    ff.o(.text.f_truncate) refers to ff.o(.text.get_fat) for get_fat
    ff.o(.text.f_truncate) refers to ff.o(.text.put_fat) for put_fat
    ff.o(.text.f_truncate) refers to ff.o(.text.remove_chain) for remove_chain
    ff.o(.text.f_truncate) refers to diskio.o(.text.disk_write) for disk_write
    ff.o(.ARM.exidx.text.f_truncate) refers to ff.o(.text.f_truncate) for [Anonymous Symbol]
    ff.o(.text.f_unlink) refers to ff.o(.text.find_volume) for find_volume
    ff.o(.text.f_unlink) refers to ff.o(.text.follow_path) for follow_path
    ff.o(.text.f_unlink) refers to ff.o(.text.ld_clust) for ld_clust
    ff.o(.text.f_unlink) refers to ff.o(.text.mem_cpy) for mem_cpy
    ff.o(.text.f_unlink) refers to ff.o(.text.dir_sdi) for dir_sdi
    ff.o(.text.f_unlink) refers to ff.o(.text.dir_read) for dir_read
    ff.o(.text.f_unlink) refers to ff.o(.text.dir_remove) for dir_remove
    ff.o(.text.f_unlink) refers to ff.o(.text.remove_chain) for remove_chain
    ff.o(.text.f_unlink) refers to ff.o(.text.sync_fs) for sync_fs
    ff.o(.ARM.exidx.text.f_unlink) refers to ff.o(.text.f_unlink) for [Anonymous Symbol]
    ff.o(.text.dir_remove) refers to ff.o(.text.dir_sdi) for dir_sdi
    ff.o(.text.dir_remove) refers to ff.o(.text.move_window) for move_window
    ff.o(.text.dir_remove) refers to ff.o(.text.mem_set) for mem_set
    ff.o(.text.dir_remove) refers to ff.o(.text.dir_next) for dir_next
    ff.o(.ARM.exidx.text.dir_remove) refers to ff.o(.text.dir_remove) for [Anonymous Symbol]
    ff.o(.text.f_mkdir) refers to diskio.o(.text.get_fattime) for get_fattime
    ff.o(.text.f_mkdir) refers to ff.o(.text.find_volume) for find_volume
    ff.o(.text.f_mkdir) refers to ff.o(.text.follow_path) for follow_path
    ff.o(.text.f_mkdir) refers to ff.o(.text.create_chain) for create_chain
    ff.o(.text.f_mkdir) refers to ff.o(.text.sync_window) for sync_window
    ff.o(.text.f_mkdir) refers to ff.o(.text.remove_chain) for remove_chain
    ff.o(.text.f_mkdir) refers to ff.o(.text.clust2sect) for clust2sect
    ff.o(.text.f_mkdir) refers to ff.o(.text.mem_set) for mem_set
    ff.o(.text.f_mkdir) refers to ff.o(.text.st_clust) for st_clust
    ff.o(.text.f_mkdir) refers to ff.o(.text.mem_cpy) for mem_cpy
    ff.o(.text.f_mkdir) refers to ff.o(.text.dir_register) for dir_register
    ff.o(.text.f_mkdir) refers to ff.o(.text.sync_fs) for sync_fs
    ff.o(.ARM.exidx.text.f_mkdir) refers to ff.o(.text.f_mkdir) for [Anonymous Symbol]
    ff.o(.text.sync_window) refers to diskio.o(.text.disk_write) for disk_write
    ff.o(.ARM.exidx.text.sync_window) refers to ff.o(.text.sync_window) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.mem_set) refers to ff.o(.text.mem_set) for [Anonymous Symbol]
    ff.o(.text.f_chmod) refers to ff.o(.text.find_volume) for find_volume
    ff.o(.text.f_chmod) refers to ff.o(.text.follow_path) for follow_path
    ff.o(.text.f_chmod) refers to ff.o(.text.sync_fs) for sync_fs
    ff.o(.ARM.exidx.text.f_chmod) refers to ff.o(.text.f_chmod) for [Anonymous Symbol]
    ff.o(.text.f_rename) refers to ff.o(.text.find_volume) for find_volume
    ff.o(.text.f_rename) refers to ff.o(.text.follow_path) for follow_path
    ff.o(.text.f_rename) refers to ff.o(.text.mem_cpy) for mem_cpy
    ff.o(.text.f_rename) refers to ff.o(.text.get_ldnumber) for get_ldnumber
    ff.o(.text.f_rename) refers to ff.o(.text.dir_register) for dir_register
    ff.o(.text.f_rename) refers to ff.o(.text.dir_remove) for dir_remove
    ff.o(.text.f_rename) refers to ff.o(.text.sync_fs) for sync_fs
    ff.o(.text.f_rename) refers to ff.o(.text.ld_clust) for ld_clust
    ff.o(.text.f_rename) refers to ff.o(.text.clust2sect) for clust2sect
    ff.o(.text.f_rename) refers to ff.o(.text.move_window) for move_window
    ff.o(.text.f_rename) refers to ff.o(.text.st_clust) for st_clust
    ff.o(.ARM.exidx.text.f_rename) refers to ff.o(.text.f_rename) for [Anonymous Symbol]
    ff.o(.text.f_utime) refers to ff.o(.text.find_volume) for find_volume
    ff.o(.text.f_utime) refers to ff.o(.text.follow_path) for follow_path
    ff.o(.text.f_utime) refers to ff.o(.text.sync_fs) for sync_fs
    ff.o(.ARM.exidx.text.f_utime) refers to ff.o(.text.f_utime) for [Anonymous Symbol]
    ff.o(.text.f_mkfs) refers to ff.o(.text.get_ldnumber) for get_ldnumber
    ff.o(.text.f_mkfs) refers to diskio.o(.text.disk_initialize) for disk_initialize
    ff.o(.text.f_mkfs) refers to diskio.o(.text.disk_ioctl) for disk_ioctl
    ff.o(.text.f_mkfs) refers to ff.o(.text.mem_set) for mem_set
    ff.o(.text.f_mkfs) refers to ff.o(.text.mem_cpy) for mem_cpy
    ff.o(.text.f_mkfs) refers to diskio.o(.text.get_fattime) for get_fattime
    ff.o(.text.f_mkfs) refers to diskio.o(.text.disk_write) for disk_write
    ff.o(.text.f_mkfs) refers to ff.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ff.o(.text.f_mkfs) refers to ff.o(.rodata.f_mkfs.cst) for [Anonymous Symbol]
    ff.o(.text.f_mkfs) refers to ff.o(.rodata.str2.2) for f_mkfs.vst
    ff.o(.ARM.exidx.text.f_mkfs) refers to ff.o(.text.f_mkfs) for [Anonymous Symbol]
    ff.o(.text.f_gets) refers to ff.o(.text.f_read) for f_read
    ff.o(.ARM.exidx.text.f_gets) refers to ff.o(.text.f_gets) for [Anonymous Symbol]
    ff.o(.text.f_putc) refers to ff.o(.text.putc_bfd) for putc_bfd
    ff.o(.text.f_putc) refers to ff.o(.text.f_write) for f_write
    ff.o(.ARM.exidx.text.f_putc) refers to ff.o(.text.f_putc) for [Anonymous Symbol]
    ff.o(.text.putc_bfd) refers to ff.o(.text.f_write) for f_write
    ff.o(.ARM.exidx.text.putc_bfd) refers to ff.o(.text.putc_bfd) for [Anonymous Symbol]
    ff.o(.text.f_puts) refers to ff.o(.text.putc_bfd) for putc_bfd
    ff.o(.text.f_puts) refers to ff.o(.text.f_write) for f_write
    ff.o(.ARM.exidx.text.f_puts) refers to ff.o(.text.f_puts) for [Anonymous Symbol]
    ff.o(.text.f_printf) refers to ff.o(.text.putc_bfd) for putc_bfd
    ff.o(.text.f_printf) refers to ff.o(.text.f_write) for f_write
    ff.o(.ARM.exidx.text.f_printf) refers to ff.o(.text.f_printf) for [Anonymous Symbol]
    ff.o(.text.check_fs) refers to ff.o(.text.move_window) for move_window
    ff.o(.ARM.exidx.text.check_fs) refers to ff.o(.text.check_fs) for [Anonymous Symbol]
    ff.o(.text.dir_find) refers to ff.o(.text.dir_sdi) for dir_sdi
    ff.o(.text.dir_find) refers to ff.o(.text.move_window) for move_window
    ff.o(.text.dir_find) refers to ff.o(.text.dir_next) for dir_next
    ff.o(.text.dir_find) refers to ff.o(.text.sum_sfn) for sum_sfn
    ff.o(.text.dir_find) refers to cc936.o(.text.ff_wtoupper) for ff_wtoupper
    ff.o(.text.dir_find) refers to ff.o(.rodata.LfnOfs) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.dir_find) refers to ff.o(.text.dir_find) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.chk_chr) refers to ff.o(.text.chk_chr) for [Anonymous Symbol]
    ff.o(.ARM.exidx.text.sum_sfn) refers to ff.o(.text.sum_sfn) for [Anonymous Symbol]
    cc936.o(.text.ff_convert) refers to cc936.o(.rodata.uni2oem) for [Anonymous Symbol]
    cc936.o(.text.ff_convert) refers to cc936.o(.rodata.oem2uni) for [Anonymous Symbol]
    cc936.o(.ARM.exidx.text.ff_convert) refers to cc936.o(.text.ff_convert) for [Anonymous Symbol]
    cc936.o(.text.ff_wtoupper) refers to cc936.o(.rodata.ff_wtoupper.lower) for [Anonymous Symbol]
    cc936.o(.text.ff_wtoupper) refers to cc936.o(.rodata.ff_wtoupper.upper) for [Anonymous Symbol]
    cc936.o(.ARM.exidx.text.ff_wtoupper) refers to cc936.o(.text.ff_wtoupper) for [Anonymous Symbol]
    fonts.o(.text.GetGBKCode_from_EXFlash) refers to spi_book.o(.text.SPI_FLASH_Init) for SPI_FLASH_Init
    fonts.o(.text.GetGBKCode_from_EXFlash) refers to spi_book.o(.text.SPI_Read_Data) for SPI_Read_Data
    fonts.o(.text.GetGBKCode_from_EXFlash) refers to fonts.o(.bss.GetGBKCode_from_EXFlash.everRead) for [Anonymous Symbol]
    fonts.o(.ARM.exidx.text.GetGBKCode_from_EXFlash) refers to fonts.o(.text.GetGBKCode_from_EXFlash) for [Anonymous Symbol]
    fonts.o(.data.Font8x16) refers to fonts.o(.rodata.ASCII8x16_Table) for ASCII8x16_Table
    fonts.o(.data.Font16x24) refers to fonts.o(.rodata.ASCII16x24_Table) for ASCII16x24_Table
    fonts.o(.data.Font24x32) refers to fonts.o(.rodata.ASCII24x32_Table) for ASCII24x32_Table
    main.o(.text.main) refers to rcc_book.o(.text.fn_RCC_Init) for fn_RCC_Init
    main.o(.text.main) refers to led_book.o(.text.fn_Led_Init) for fn_Led_Init
    main.o(.text.main) refers to key_book.o(.text.fn_Key_Init) for fn_Key_Init
    main.o(.text.main) refers to usart_book.o(.text.fn_USART_Init) for fn_USART_Init
    main.o(.text.main) refers to puts.o(i.puts) for puts
    main.o(.text.main) refers to main.o(.text.fn_LED_Flash_Init) for fn_LED_Flash_Init
    main.o(.text.main) refers to main.o(.text.fn_usart_show_Init) for fn_usart_show_Init
    main.o(.text.main) refers to exit_book.o(.text.fn_EXTI_GPIO_Config) for fn_EXTI_GPIO_Config
    main.o(.text.main) refers to main.o(.text.fn_DMA_show_Init) for fn_DMA_show_Init
    main.o(.text.main) refers to main.o(.text.fn_I2C_EE_Init) for fn_I2C_EE_Init
    main.o(.text.main) refers to main.o(.text.fn_I2C_EE_Soft_Init) for fn_I2C_EE_Soft_Init
    main.o(.text.main) refers to main.o(.text.fn_SPI_FLASH_Soft_Init) for fn_SPI_FLASH_Soft_Init
    main.o(.text.main) refers to main.o(.text.fn_FatFs_Document_Init) for fn_FatFs_Document_Init
    main.o(.text.main) refers to systick_book.o(.text.fn_Systick_Delay_Handler_set) for fn_Systick_Delay_Handler_set
    main.o(.text.main) refers to lcd_book.o(.text.ILI9341_Init) for ILI9341_Init
    main.o(.text.main) refers to printfa.o(i.__0printf) for __2printf
    main.o(.text.main) refers to xpt2046_lcd_book.o(.text.XPT2046_GPIO_Init) for XPT2046_GPIO_Init
    main.o(.text.main) refers to main.o(.text.fn_SRAM_Init) for fn_SRAM_Init
    main.o(.text.main) refers to lcd_pagehtml_book.o(.text.Display_Char_test) for Display_Char_test
    main.o(.text.main) refers to lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page) for XPT2046_Touch_Calibrate_Page
    main.o(.text.main) refers to lcd_pagehtml_book.o(.text.fn_Lcd_Page1) for fn_Lcd_Page1
    main.o(.text.main) refers to key_book.o(.text.fn_key_Check) for fn_key_Check
    main.o(.text.main) refers to lcd_pagehtml_book.o(.text.fn_Lcd_Page2) for fn_Lcd_Page2
    main.o(.text.main) refers to key_book.o(.bss..L_MergedGlobals) for key_flag
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.fn_LED_Flash_Init) refers to puts.o(i.puts) for puts
    main.o(.text.fn_LED_Flash_Init) refers to led_book.o(.text.fn_LED_ALL_OFF) for fn_LED_ALL_OFF
    main.o(.text.fn_LED_Flash_Init) refers to stm32f10x_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    main.o(.text.fn_LED_Flash_Init) refers to systick_book.o(.text.fn_Systick_Delay) for fn_Systick_Delay
    main.o(.ARM.exidx.text.fn_LED_Flash_Init) refers to main.o(.text.fn_LED_Flash_Init) for [Anonymous Symbol]
    main.o(.text.fn_usart_show_Init) refers to usart_book.o(.text.fn_Usart_Send_Byte) for fn_Usart_Send_Byte
    main.o(.text.fn_usart_show_Init) refers to puts.o(i.puts) for puts
    main.o(.text.fn_usart_show_Init) refers to usart_book.o(.text.fn_Usart_SendString) for fn_Usart_SendString
    main.o(.ARM.exidx.text.fn_usart_show_Init) refers to main.o(.text.fn_usart_show_Init) for [Anonymous Symbol]
    main.o(.text.fn_DMA_show_Init) refers to puts.o(i.puts) for puts
    main.o(.text.fn_DMA_show_Init) refers to dma_book.o(.text._DMA_ROM_TO_RAM) for _DMA_ROM_TO_RAM
    main.o(.text.fn_DMA_show_Init) refers to dma_book.o(.text._DMA_RAM_TO_USART) for _DMA_RAM_TO_USART
    main.o(.text.fn_DMA_show_Init) refers to dma_book.o(.rodata.aSRC_Cont_Buffer) for aSRC_Cont_Buffer
    main.o(.text.fn_DMA_show_Init) refers to dma_book.o(.bss.aDST_Buffer) for aDST_Buffer
    main.o(.ARM.exidx.text.fn_DMA_show_Init) refers to main.o(.text.fn_DMA_show_Init) for [Anonymous Symbol]
    main.o(.text.fn_I2C_EE_Init) refers to puts.o(i.puts) for puts
    main.o(.text.fn_I2C_EE_Init) refers to i2c_book.o(.text._I2C_EE_Init) for _I2C_EE_Init
    main.o(.text.fn_I2C_EE_Init) refers to i2c_book.o(.text.I2C_Write_fun) for I2C_Write_fun
    main.o(.text.fn_I2C_EE_Init) refers to i2c_book.o(.text.I2C_Read_fun) for I2C_Read_fun
    main.o(.text.fn_I2C_EE_Init) refers to printfa.o(i.__0printf) for __2printf
    main.o(.text.fn_I2C_EE_Init) refers to main.o(.data.writeData) for [Anonymous Symbol]
    main.o(.text.fn_I2C_EE_Init) refers to main.o(.bss.ReadData) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.fn_I2C_EE_Init) refers to main.o(.text.fn_I2C_EE_Init) for [Anonymous Symbol]
    main.o(.text.fn_I2C_EE_Soft_Init) refers to puts.o(i.puts) for puts
    main.o(.text.fn_I2C_EE_Soft_Init) refers to i2c_soft_book.o(.text.I2C_Soft_Init) for I2C_Soft_Init
    main.o(.text.fn_I2C_EE_Soft_Init) refers to i2c_soft_book.o(.text.I2C_Soft_Write_fun) for I2C_Soft_Write_fun
    main.o(.text.fn_I2C_EE_Soft_Init) refers to i2c_soft_book.o(.text.I2C_Soft_Read_fun) for I2C_Soft_Read_fun
    main.o(.text.fn_I2C_EE_Soft_Init) refers to printfa.o(i.__0printf) for __2printf
    main.o(.text.fn_I2C_EE_Soft_Init) refers to main.o(.data.writeData2) for [Anonymous Symbol]
    main.o(.text.fn_I2C_EE_Soft_Init) refers to main.o(.bss.ReadData) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.fn_I2C_EE_Soft_Init) refers to main.o(.text.fn_I2C_EE_Soft_Init) for [Anonymous Symbol]
    main.o(.text.fn_SPI_FLASH_Soft_Init) refers to spi_book.o(.text.SPI_FLASH_Init) for SPI_FLASH_Init
    main.o(.text.fn_SPI_FLASH_Soft_Init) refers to spi_book.o(.text.SPI_Read_ID) for SPI_Read_ID
    main.o(.text.fn_SPI_FLASH_Soft_Init) refers to spi_book.o(.text.SPI_Erase_Sector) for SPI_Erase_Sector
    main.o(.text.fn_SPI_FLASH_Soft_Init) refers to spi_book.o(.text.SPI_Read_Data) for SPI_Read_Data
    main.o(.text.fn_SPI_FLASH_Soft_Init) refers to spi_book.o(.text.SPI_Show_Data) for SPI_Show_Data
    main.o(.text.fn_SPI_FLASH_Soft_Init) refers to spi_book.o(.text.SPI_BufferWrite_Data) for SPI_BufferWrite_Data
    main.o(.text.fn_SPI_FLASH_Soft_Init) refers to puts.o(i.puts) for puts
    main.o(.text.fn_SPI_FLASH_Soft_Init) refers to main.o(.bss.Read_SPI_Data) for [Anonymous Symbol]
    main.o(.text.fn_SPI_FLASH_Soft_Init) refers to main.o(.bss.write_SPI_Data) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.fn_SPI_FLASH_Soft_Init) refers to main.o(.text.fn_SPI_FLASH_Soft_Init) for [Anonymous Symbol]
    main.o(.text.fn_FatFs_Document_Init) refers to fatfs_book.o(.text.FatFs_equipment_flash) for FatFs_equipment_flash
    main.o(.text.fn_FatFs_Document_Init) refers to fatfs_book.o(.text.FatFs_document_Text) for FatFs_document_Text
    main.o(.text.fn_FatFs_Document_Init) refers to fatfs_book.o(.text.file_check) for file_check
    main.o(.text.fn_FatFs_Document_Init) refers to fatfs_book.o(.text.FatFs_document_set_content) for FatFs_document_set_content
    main.o(.text.fn_FatFs_Document_Init) refers to fatfs_book.o(.text.Scan_file_Check) for Scan_file_Check
    main.o(.text.fn_FatFs_Document_Init) refers to fatfs_book.o(.text.FatFs_Close_flash) for FatFs_Close_flash
    main.o(.text.fn_FatFs_Document_Init) refers to main.o(.rodata.str1.1) for .L.str.18
    main.o(.ARM.exidx.text.fn_FatFs_Document_Init) refers to main.o(.text.fn_FatFs_Document_Init) for [Anonymous Symbol]
    main.o(.text.fn_SRAM_Init) refers to sram_book.o(.text.SRAM_Init) for SRAM_Init
    main.o(.text.fn_SRAM_Init) refers to sram_book.o(.text.SRAM_Test) for SRAM_Test
    main.o(.text.fn_SRAM_Init) refers to sram_book.o(.text.SRAM_Write) for SRAM_Write
    main.o(.text.fn_SRAM_Init) refers to puts.o(i.puts) for puts
    main.o(.ARM.exidx.text.fn_SRAM_Init) refers to main.o(.text.fn_SRAM_Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.delay) refers to main.o(.text.delay) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32f10x_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32f10x_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.MemManage_Handler) refers to stm32f10x_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.BusFault_Handler) refers to stm32f10x_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.UsageFault_Handler) refers to stm32f10x_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.SVC_Handler) refers to stm32f10x_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.DebugMon_Handler) refers to stm32f10x_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    stm32f10x_it.o(.ARM.exidx.text.PendSV_Handler) refers to stm32f10x_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    puts.o(i.puts) refers to usart_book.o(.text.fputc) for fputc
    puts.o(i.puts) refers to stdout.o(.data) for __stdout
    putchar.o(i.putchar) refers to usart_book.o(.text.fputc) for fputc
    putchar.o(i.putchar) refers to stdout.o(.data) for __stdout
    puts_e.o(.text) refers to usart_book.o(.text.fputc) for fputc
    puts_e.o(.text) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to usart_book.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to usart_book.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to usart_book.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to usart_book.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to usart_book.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to usart_book.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to usart_book.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to usart_book.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to usart_book.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to usart_book.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to usart_book.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to usart_book.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to usart_book.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to usart_book.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to usart_book.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to usart_book.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to usart_book.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to usart_book.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to usart_book.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to usart_book.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to usart_book.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to usart_book.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to usart_book.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to usart_book.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to usart_book.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to usart_book.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to usart_book.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to usart_book.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to usart_book.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to usart_book.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to usart_book.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to usart_book.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to usart_book.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to usart_book.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to usart_book.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to usart_book.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to usart_book.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to usart_book.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to usart_book.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to usart_book.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to usart_book.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to usart_book.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to usart_book.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to usart_book.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    fflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    ffixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_stm32f10x_hd.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_stm32f10x_hd.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing startup_stm32f10x_hd.o(HEAP), (512 bytes).
    Removing system_stm32f10x.o(.text), (0 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f10x.o(.text.SystemCoreClockUpdate), (80 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f10x.o(.rodata.AHBPrescTable), (16 bytes).
    Removing misc.o(.text), (0 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_PriorityGroupConfig), (8 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing misc.o(.text.NVIC_SetVectorTable), (20 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_SetVectorTable), (8 bytes).
    Removing misc.o(.text.NVIC_SystemLPConfig), (24 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing misc.o(.text.SysTick_CLKSourceConfig), (24 bytes).
    Removing misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text), (0 bytes).
    Removing stm32f10x_adc.o(.text.ADC_DeInit), (72 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_Init), (72 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_StructInit), (16 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_Cmd), (18 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_DMACmd), (18 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_DMACmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ITConfig), (18 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ITConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ResetCalibration), (10 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ResetCalibration), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetResetCalibrationStatus), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetResetCalibrationStatus), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_StartCalibration), (10 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_StartCalibration), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetCalibrationStatus), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetCalibrationStatus), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_SoftwareStartConvCmd), (18 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_SoftwareStartConvCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetSoftwareStartConvStatus), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetSoftwareStartConvStatus), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_DiscModeChannelCountConfig), (24 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_DiscModeChannelCountConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_DiscModeCmd), (18 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_DiscModeCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_RegularChannelConfig), (98 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_RegularChannelConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ExternalTrigConvCmd), (18 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ExternalTrigConvCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetConversionValue), (6 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetConversionValue), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetDualModeConversionValue), (12 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetDualModeConversionValue), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_AutoInjectedConvCmd), (18 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_AutoInjectedConvCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_InjectedDiscModeCmd), (18 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_InjectedDiscModeCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ExternalTrigInjectedConvConfig), (12 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ExternalTrigInjectedConvConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ExternalTrigInjectedConvCmd), (18 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ExternalTrigInjectedConvCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_SoftwareStartInjectedConvCmd), (18 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_SoftwareStartInjectedConvCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetSoftwareStartInjectedConvCmdStatus), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetSoftwareStartInjectedConvCmdStatus), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_InjectedChannelConfig), (78 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_InjectedChannelConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_InjectedSequencerLengthConfig), (24 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_InjectedSequencerLengthConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_SetInjectedOffset), (22 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_SetInjectedOffset), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetInjectedConversionValue), (26 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetInjectedConversionValue), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_AnalogWatchdogCmd), (16 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig), (6 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig), (12 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_TempSensorVrefintCmd), (24 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_TempSensorVrefintCmd), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetFlagStatus), (10 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ClearFlag), (6 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_GetITStatus), (28 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_GetITStatus), (8 bytes).
    Removing stm32f10x_adc.o(.text.ADC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_bkp.o(.text), (0 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_DeInit), (18 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_DeInit), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_TamperPinLevelConfig), (12 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_TamperPinLevelConfig), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_TamperPinCmd), (12 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_TamperPinCmd), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_ITConfig), (12 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_ITConfig), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_RTCOutputConfig), (20 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_RTCOutputConfig), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_SetRTCCalibrationValue), (20 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_SetRTCCalibrationValue), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_WriteBackupRegister), (28 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_WriteBackupRegister), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_ReadBackupRegister), (28 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_ReadBackupRegister), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_GetFlagStatus), (12 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_GetFlagStatus), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_ClearFlag), (16 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_ClearFlag), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_GetITStatus), (12 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_GetITStatus), (8 bytes).
    Removing stm32f10x_bkp.o(.text.BKP_ClearITPendingBit), (16 bytes).
    Removing stm32f10x_bkp.o(.ARM.exidx.text.BKP_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_can.o(.text), (0 bytes).
    Removing stm32f10x_can.o(.text.CAN_DeInit), (40 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_DeInit), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_Init), (224 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_Init), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_FilterInit), (164 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_FilterInit), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_StructInit), (20 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_StructInit), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_SlaveStartBank), (44 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_SlaveStartBank), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_DBGFreeze), (18 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_DBGFreeze), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_TTComModeCmd), (88 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_TTComModeCmd), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_Transmit), (138 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_Transmit), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_TransmitStatus), (100 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_TransmitStatus), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_CancelTransmit), (32 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_CancelTransmit), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_Receive), (152 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_Receive), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_FIFORelease), (18 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_FIFORelease), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_MessagePending), (24 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_MessagePending), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_OperatingModeRequest), (120 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_OperatingModeRequest), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_Sleep), (26 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_Sleep), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_WakeUp), (36 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_WakeUp), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetLastErrorCode), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetLastErrorCode), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetReceiveErrorCounter), (6 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetReceiveErrorCounter), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetLSBTransmitErrorCounter), (8 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetLSBTransmitErrorCounter), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_ITConfig), (16 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_ITConfig), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetFlagStatus), (50 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetFlagStatus), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_ClearFlag), (48 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_ClearFlag), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_GetITStatus), (184 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_GetITStatus), (8 bytes).
    Removing stm32f10x_can.o(.text.CAN_ClearITPendingBit), (112 bytes).
    Removing stm32f10x_can.o(.ARM.exidx.text.CAN_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_cec.o(.text), (0 bytes).
    Removing stm32f10x_cec.o(.text.CEC_DeInit), (26 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_DeInit), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_Init), (28 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_Init), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_Cmd), (24 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_Cmd), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_ITConfig), (12 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_ITConfig), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_OwnAddressConfig), (12 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_OwnAddressConfig), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_SetPrescaler), (12 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_SetPrescaler), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_SendDataByte), (12 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_SendDataByte), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_ReceiveDataByte), (12 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_ReceiveDataByte), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_StartOfMessage), (12 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_StartOfMessage), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_EndOfMessageCmd), (12 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_EndOfMessageCmd), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_GetFlagStatus), (44 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_ClearFlag), (32 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_ClearFlag), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_GetITStatus), (24 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_GetITStatus), (8 bytes).
    Removing stm32f10x_cec.o(.text.CEC_ClearITPendingBit), (32 bytes).
    Removing stm32f10x_cec.o(.ARM.exidx.text.CEC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_crc.o(.text), (0 bytes).
    Removing stm32f10x_crc.o(.text.CRC_ResetDR), (12 bytes).
    Removing stm32f10x_crc.o(.ARM.exidx.text.CRC_ResetDR), (8 bytes).
    Removing stm32f10x_crc.o(.text.CRC_CalcCRC), (12 bytes).
    Removing stm32f10x_crc.o(.ARM.exidx.text.CRC_CalcCRC), (8 bytes).
    Removing stm32f10x_crc.o(.text.CRC_CalcBlockCRC), (20 bytes).
    Removing stm32f10x_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC), (8 bytes).
    Removing stm32f10x_crc.o(.text.CRC_GetCRC), (12 bytes).
    Removing stm32f10x_crc.o(.ARM.exidx.text.CRC_GetCRC), (8 bytes).
    Removing stm32f10x_crc.o(.text.CRC_SetIDRegister), (12 bytes).
    Removing stm32f10x_crc.o(.ARM.exidx.text.CRC_SetIDRegister), (8 bytes).
    Removing stm32f10x_crc.o(.text.CRC_GetIDRegister), (12 bytes).
    Removing stm32f10x_crc.o(.ARM.exidx.text.CRC_GetIDRegister), (8 bytes).
    Removing stm32f10x_dac.o(.text), (0 bytes).
    Removing stm32f10x_dac.o(.text.DAC_DeInit), (26 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_DeInit), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_Init), (44 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_Init), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_StructInit), (12 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_StructInit), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_Cmd), (28 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_Cmd), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_DMACmd), (28 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_DMACmd), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_SoftwareTriggerCmd), (28 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_SoftwareTriggerCmd), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_DualSoftwareTriggerCmd), (24 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_DualSoftwareTriggerCmd), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_WaveGenerationCmd), (24 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_WaveGenerationCmd), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_SetChannel1Data), (32 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_SetChannel1Data), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_SetChannel2Data), (32 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_SetChannel2Data), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_SetDualChannelData), (24 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_SetDualChannelData), (8 bytes).
    Removing stm32f10x_dac.o(.text.DAC_GetDataOutputValue), (36 bytes).
    Removing stm32f10x_dac.o(.ARM.exidx.text.DAC_GetDataOutputValue), (8 bytes).
    Removing stm32f10x_dbgmcu.o(.text), (0 bytes).
    Removing stm32f10x_dbgmcu.o(.text.DBGMCU_GetREVID), (12 bytes).
    Removing stm32f10x_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetREVID), (8 bytes).
    Removing stm32f10x_dbgmcu.o(.text.DBGMCU_GetDEVID), (16 bytes).
    Removing stm32f10x_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetDEVID), (8 bytes).
    Removing stm32f10x_dbgmcu.o(.text.DBGMCU_Config), (24 bytes).
    Removing stm32f10x_dbgmcu.o(.ARM.exidx.text.DBGMCU_Config), (8 bytes).
    Removing stm32f10x_dma.o(.text), (0 bytes).
    Removing stm32f10x_dma.o(.text.DMA_DeInit), (212 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_DeInit), (8 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_StructInit), (10 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_StructInit), (8 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_Cmd), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_ITConfig), (16 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_ITConfig), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_SetCurrDataCounter), (4 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_GetCurrDataCounter), (6 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter), (8 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_GetFlagStatus), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_ClearFlag), (16 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_ClearFlag), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_GetITStatus), (24 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_GetITStatus), (8 bytes).
    Removing stm32f10x_dma.o(.text.DMA_ClearITPendingBit), (16 bytes).
    Removing stm32f10x_dma.o(.ARM.exidx.text.DMA_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_exti.o(.text), (0 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_DeInit), (28 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_DeInit), (8 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_Init), (8 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_StructInit), (14 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_StructInit), (8 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_GenerateSWInterrupt), (16 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt), (8 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_GetFlagStatus), (16 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus), (8 bytes).
    Removing stm32f10x_exti.o(.text.EXTI_ClearFlag), (12 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_ClearFlag), (8 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_GetITStatus), (8 bytes).
    Removing stm32f10x_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_flash.o(.text), (0 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_SetLatency), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_HalfCycleAccessCmd), (24 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_HalfCycleAccessCmd), (8 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_Unlock), (24 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_Unlock), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_UnlockBank1), (24 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_UnlockBank1), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_Lock), (16 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_Lock), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_LockBank1), (16 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_LockBank1), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ErasePage), (60 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_WaitForLastOperation), (30 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_EraseAllPages), (56 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_EraseAllPages), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_EraseAllBank1Pages), (56 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_EraseAllBank1Pages), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_WaitForLastBank1Operation), (30 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_WaitForLastBank1Operation), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_EraseOptionBytes), (136 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_EraseOptionBytes), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetReadOutProtectionStatus), (16 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetReadOutProtectionStatus), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ProgramWord), (80 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ProgramWord), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ProgramHalfWord), (56 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ProgramOptionByteData), (80 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ProgramOptionByteData), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_EnableWriteProtection), (176 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_EnableWriteProtection), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ReadOutProtection), (148 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ReadOutProtection), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_UserOptionByteConfig), (96 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_UserOptionByteConfig), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetUserOptionByte), (12 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetUserOptionByte), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetWriteProtectionOptionByte), (12 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetWriteProtectionOptionByte), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetPrefetchBufferStatus), (16 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetPrefetchBufferStatus), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ITConfig), (24 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ITConfig), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetFlagStatus), (28 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_ClearFlag), (12 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_ClearFlag), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetStatus), (40 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetStatus), (8 bytes).
    Removing stm32f10x_flash.o(.text.FLASH_GetBank1Status), (40 bytes).
    Removing stm32f10x_flash.o(.ARM.exidx.text.FLASH_GetBank1Status), (8 bytes).
    Removing stm32f10x_fsmc.o(.text), (0 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NORSRAMDeInit), (48 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMDeInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NANDDeInit), (56 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDDeInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_PCCARDDeInit), (28 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDDeInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NANDInit), (124 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_PCCARDInit), (92 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NORSRAMStructInit), (76 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMStructInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NANDStructInit), (40 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDStructInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_PCCARDStructInit), (44 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDStructInit), (8 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NORSRAMCmd), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NANDCmd), (56 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDCmd), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_PCCARDCmd), (32 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_PCCARDCmd), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_NANDECCCmd), (56 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_NANDECCCmd), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_GetECC), (24 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_GetECC), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_ITConfig), (84 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_ITConfig), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_GetFlagStatus), (32 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_ClearFlag), (40 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_ClearFlag), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_GetITStatus), (44 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_GetITStatus), (8 bytes).
    Removing stm32f10x_fsmc.o(.text.FSMC_ClearITPendingBit), (40 bytes).
    Removing stm32f10x_fsmc.o(.ARM.exidx.text.FSMC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text), (0 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_DeInit), (52 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_AFIODeInit), (22 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_AFIODeInit), (8 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_StructInit), (12 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadInputData), (6 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadOutputData), (6 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_WriteBit), (12 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_Write), (4 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_PinLockConfig), (16 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_EventOutputConfig), (24 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_EventOutputCmd), (12 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputCmd), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_PinRemapConfig), (112 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinRemapConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EXTILineConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ETH_MediaInterfaceConfig), (12 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ETH_MediaInterfaceConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.rodata..Lswitch.table.GPIO_DeInit.1), (28 bytes).
    Removing stm32f10x_i2c.o(.text), (0 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_DeInit), (40 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_DeInit), (8 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_StructInit), (28 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_StructInit), (8 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_DMACmd), (18 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_DMACmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_DMALastTransferCmd), (18 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_DMALastTransferCmd), (8 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GenerateSTART), (8 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP), (8 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_AcknowledgeConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_OwnAddress2Config), (12 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_DualAddressCmd), (18 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_GeneralCallCmd), (18 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_ITConfig), (16 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_ITConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_ReceiveData), (8 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_Send7bitAddress), (8 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_ReadRegister), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_SoftwareResetCmd), (20 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_SoftwareResetCmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_NACKPositionConfig), (20 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_NACKPositionConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_SMBusAlertConfig), (20 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_SMBusAlertConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_TransmitPEC), (18 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_TransmitPEC), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_PECPositionConfig), (20 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_PECPositionConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_CalculatePEC), (18 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_CalculatePEC), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_GetPEC), (6 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetPEC), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_ARPCmd), (18 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_ARPCmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_StretchClockCmd), (18 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_StretchClockCmd), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_FastModeDutyCycleConfig), (20 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_FastModeDutyCycleConfig), (8 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_CheckEvent), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_GetLastEvent), (12 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetLastEvent), (8 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_GetITStatus), (26 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_GetITStatus), (8 bytes).
    Removing stm32f10x_i2c.o(.text.I2C_ClearITPendingBit), (6 bytes).
    Removing stm32f10x_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_iwdg.o(.text), (0 bytes).
    Removing stm32f10x_iwdg.o(.text.IWDG_WriteAccessCmd), (12 bytes).
    Removing stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd), (8 bytes).
    Removing stm32f10x_iwdg.o(.text.IWDG_SetPrescaler), (12 bytes).
    Removing stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler), (8 bytes).
    Removing stm32f10x_iwdg.o(.text.IWDG_SetReload), (12 bytes).
    Removing stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_SetReload), (8 bytes).
    Removing stm32f10x_iwdg.o(.text.IWDG_ReloadCounter), (16 bytes).
    Removing stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter), (8 bytes).
    Removing stm32f10x_iwdg.o(.text.IWDG_Enable), (16 bytes).
    Removing stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_Enable), (8 bytes).
    Removing stm32f10x_iwdg.o(.text.IWDG_GetFlagStatus), (16 bytes).
    Removing stm32f10x_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus), (8 bytes).
    Removing stm32f10x_pwr.o(.text), (0 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_DeInit), (26 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_DeInit), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_BackupAccessCmd), (12 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_PVDCmd), (12 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_PVDCmd), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_PVDLevelConfig), (20 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_PVDLevelConfig), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_WakeUpPinCmd), (12 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_EnterSTOPMode), (52 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_EnterSTANDBYMode), (40 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_GetFlagStatus), (16 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus), (8 bytes).
    Removing stm32f10x_pwr.o(.text.PWR_ClearFlag), (16 bytes).
    Removing stm32f10x_pwr.o(.ARM.exidx.text.PWR_ClearFlag), (8 bytes).
    Removing stm32f10x_rcc.o(.text), (0 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSEConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_AdjustHSICalibrationValue), (20 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_HSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK1Config), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK2Config), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ITConfig), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_USBCLKConfig), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ADCCLKConfig), (20 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_LSEConfig), (28 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSEConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_LSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_RTCCLKConfig), (16 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_RTCCLKCmd), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_BackupResetCmd), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ClockSecuritySystemCmd), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_MCOConfig), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_MCOConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ClearFlag), (16 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_GetITStatus), (16 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ClearITPendingBit), (12 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_rtc.o(.text), (0 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_ITConfig), (24 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_ITConfig), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_EnterConfigMode), (16 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_EnterConfigMode), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_ExitConfigMode), (16 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_ExitConfigMode), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_GetCounter), (16 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetCounter), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_SetCounter), (32 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetCounter), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_SetPrescaler), (32 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetPrescaler), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_SetAlarm), (32 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_SetAlarm), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_GetDivider), (20 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetDivider), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_WaitForLastTask), (16 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_WaitForLastTask), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_WaitForSynchro), (24 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_WaitForSynchro), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_GetFlagStatus), (16 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_ClearFlag), (16 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_ClearFlag), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_GetITStatus), (32 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_GetITStatus), (8 bytes).
    Removing stm32f10x_rtc.o(.text.RTC_ClearITPendingBit), (16 bytes).
    Removing stm32f10x_rtc.o(.ARM.exidx.text.RTC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_sdio.o(.text), (0 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_DeInit), (36 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DeInit), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_Init), (40 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_Init), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_StructInit), (10 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_StructInit), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_ClockCmd), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ClockCmd), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_SetPowerState), (24 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SetPowerState), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetPowerState), (16 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetPowerState), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_ITConfig), (24 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ITConfig), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_DMACmd), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DMACmd), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_SendCommand), (36 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SendCommand), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_CmdStructInit), (10 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_CmdStructInit), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetCommandResponse), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetCommandResponse), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetResponse), (24 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetResponse), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_DataConfig), (40 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DataConfig), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_DataStructInit), (16 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_DataStructInit), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetDataCounter), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetDataCounter), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_ReadData), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ReadData), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_WriteData), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_WriteData), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetFIFOCount), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetFIFOCount), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_StartSDIOReadWait), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_StartSDIOReadWait), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_StopSDIOReadWait), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_StopSDIOReadWait), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_SetSDIOReadWaitMode), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SetSDIOReadWaitMode), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_SetSDIOOperation), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SetSDIOOperation), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_SendSDIOSuspendCmd), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SendSDIOSuspendCmd), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_CommandCompletionCmd), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_CommandCompletionCmd), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_CEATAITCmd), (16 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_CEATAITCmd), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_SendCEATACmd), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_SendCEATACmd), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetFlagStatus), (16 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetFlagStatus), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_ClearFlag), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ClearFlag), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_GetITStatus), (16 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_GetITStatus), (8 bytes).
    Removing stm32f10x_sdio.o(.text.SDIO_ClearITPendingBit), (12 bytes).
    Removing stm32f10x_sdio.o(.ARM.exidx.text.SDIO_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_spi.o(.text), (0 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_DeInit), (100 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_DeInit), (8 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing stm32f10x_spi.o(.text.I2S_Init), (140 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.I2S_Init), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_StructInit), (16 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing stm32f10x_spi.o(.text.I2S_StructInit), (14 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.I2S_StructInit), (8 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing stm32f10x_spi.o(.text.I2S_Cmd), (18 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.I2S_Cmd), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_ITConfig), (28 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_DMACmd), (16 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_DMACmd), (8 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_SendData), (8 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_NSSInternalSoftwareConfig), (24 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_SSOutputCmd), (18 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_SSOutputCmd), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_DataSizeConfig), (16 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_DataSizeConfig), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_TransmitCRC), (10 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_TransmitCRC), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_CalculateCRC), (18 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_CalculateCRC), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_GetCRC), (12 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_GetCRC), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_GetCRCPolynomial), (4 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_BiDirectionalLineConfig), (20 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig), (8 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_ClearFlag), (6 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_GetITStatus), (34 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus), (8 bytes).
    Removing stm32f10x_spi.o(.text.SPI_I2S_ClearITPendingBit), (16 bytes).
    Removing stm32f10x_spi.o(.ARM.exidx.text.SPI_I2S_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_tim.o(.text), (0 bytes).
    Removing stm32f10x_tim.o(.text.TIM_DeInit), (428 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_DeInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_TimeBaseInit), (140 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_TimeBaseInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1Init), (104 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1Init), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2Init), (112 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2Init), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3Init), (112 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3Init), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC4Init), (88 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4Init), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ICInit), (328 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ICInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TI1_Config), (104 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TI1_Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetIC1Prescaler), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TI2_Config), (116 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TI2_Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetIC2Prescaler), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetIC3Prescaler), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetIC4Prescaler), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_PWMIConfig), (148 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_PWMIConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_BDTRConfig), (32 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_BDTRConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_TimeBaseStructInit), (20 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OCStructInit), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OCStructInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ICStructInit), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ICStructInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_BDTRStructInit), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_BDTRStructInit), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_Cmd), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_Cmd), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CtrlPWMOutputs), (24 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ITConfig), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ITConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GenerateEvent), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GenerateEvent), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_DMAConfig), (8 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_DMAConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_DMACmd), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_DMACmd), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_InternalClockConfig), (10 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_InternalClockConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ITRxExternalClockConfig), (20 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectInputTrigger), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_TIxExternalClockConfig), (48 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ETRClockMode1Config), (24 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ETRConfig), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ETRClockMode2Config), (24 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_PrescalerConfig), (6 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_PrescalerConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CounterModeConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CounterModeConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_EncoderInterfaceConfig), (42 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ForcedOC1Config), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ForcedOC2Config), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ForcedOC3Config), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ForcedOC4Config), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ARRPreloadConfig), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectCOM), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectCOM), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectCCDMA), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectCCDMA), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CCPreloadControl), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CCPreloadControl), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1PreloadConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2PreloadConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3PreloadConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC4PreloadConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1FastConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1FastConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2FastConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2FastConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3FastConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3FastConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC4FastConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4FastConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearOC1Ref), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearOC2Ref), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearOC3Ref), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearOC4Ref), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1PolarityConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC1NPolarityConfig), (12 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2PolarityConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC2NPolarityConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3PolarityConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC3NPolarityConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_OC4PolarityConfig), (14 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CCxCmd), (26 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CCxCmd), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_CCxNCmd), (26 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_CCxNCmd), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectOCxM), (66 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOCxM), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_UpdateDisableConfig), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_UpdateRequestConfig), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectHallSensor), (18 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectHallSensor), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectOnePulseMode), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectOutputTrigger), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectSlaveMode), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SelectMasterSlaveMode), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCounter), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCounter), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetAutoreload), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetAutoreload), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCompare1), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare1), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCompare2), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare2), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCompare3), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare3), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetCompare4), (6 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetCompare4), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_SetClockDivision), (16 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_SetClockDivision), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCapture1), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture1), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCapture2), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture2), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCapture3), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture3), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCapture4), (6 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCapture4), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetCounter), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetCounter), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetPrescaler), (4 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetPrescaler), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetFlagStatus), (10 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetFlagStatus), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearFlag), (6 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearFlag), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_GetITStatus), (20 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_GetITStatus), (8 bytes).
    Removing stm32f10x_tim.o(.text.TIM_ClearITPendingBit), (6 bytes).
    Removing stm32f10x_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_usart.o(.text), (0 bytes).
    Removing stm32f10x_usart.o(.text.USART_DeInit), (152 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_StructInit), (20 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ClockInit), (26 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ClockInit), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ClockStructInit), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ClockStructInit), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_Cmd), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ITConfig), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_DMACmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SetAddress), (16 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SetAddress), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_WakeUpConfig), (16 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_WakeUpConfig), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ReceiverWakeUpCmd), (18 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ReceiverWakeUpCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_LINBreakDetectLengthConfig), (16 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_LINCmd), (18 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_LINCmd), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SendBreak), (10 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SendBreak), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SetGuardTime), (16 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SetGuardTime), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SetPrescaler), (16 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SetPrescaler), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SmartCardCmd), (18 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SmartCardCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SmartCardNACKCmd), (18 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_HalfDuplexCmd), (18 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_OverSampling8Cmd), (20 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_OneBitMethodCmd), (18 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_IrDAConfig), (16 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_IrDAConfig), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_IrDACmd), (18 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_IrDACmd), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ClearFlag), (6 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_GetITStatus), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ClearITPendingBit), (14 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_wwdg.o(.text), (0 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_DeInit), (26 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_DeInit), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_SetPrescaler), (20 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_SetWindowValue), (40 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_EnableIT), (12 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_EnableIT), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_SetCounter), (16 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_SetCounter), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_Enable), (16 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_Enable), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_GetFlagStatus), (12 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus), (8 bytes).
    Removing stm32f10x_wwdg.o(.text.WWDG_ClearFlag), (12 bytes).
    Removing stm32f10x_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag), (8 bytes).
    Removing exit_book.o(.text), (0 bytes).
    Removing exit_book.o(.ARM.exidx.text.fn_EXTI_GPIO_Config), (8 bytes).
    Removing exit_book.o(.ARM.exidx.text.fn_NVIC_Config), (8 bytes).
    Removing exit_book.o(.ARM.exidx.text.EXTI0_IRQHandler), (8 bytes).
    Removing exit_book.o(.ARM.exidx.text.EXTI15_10_IRQHandler), (8 bytes).
    Removing key_book.o(.text), (0 bytes).
    Removing key_book.o(.ARM.exidx.text.fn_Key_GPIO_Config), (8 bytes).
    Removing key_book.o(.ARM.exidx.text.fn_Key_Init), (8 bytes).
    Removing key_book.o(.ARM.exidx.text.fn_key_judge), (8 bytes).
    Removing key_book.o(.ARM.exidx.text.fn_key_Effect), (8 bytes).
    Removing key_book.o(.ARM.exidx.text.fn_key_Check), (8 bytes).
    Removing led_book.o(.text), (0 bytes).
    Removing led_book.o(.ARM.exidx.text.fn_LED_GPIO_Config), (8 bytes).
    Removing led_book.o(.ARM.exidx.text.fn_Led_Init), (8 bytes).
    Removing led_book.o(.ARM.exidx.text.fn_LED_ALL_OFF), (8 bytes).
    Removing led_book.o(.ARM.exidx.text.fn_LED_Corporate), (8 bytes).
    Removing rcc_book.o(.text), (0 bytes).
    Removing rcc_book.o(.ARM.exidx.text.fn_HRCC_SetSystic), (8 bytes).
    Removing rcc_book.o(.text.fn_IRCC_SetSystic), (132 bytes).
    Removing rcc_book.o(.ARM.exidx.text.fn_IRCC_SetSystic), (8 bytes).
    Removing rcc_book.o(.text.fn_MCO_GPIO_Config), (40 bytes).
    Removing rcc_book.o(.ARM.exidx.text.fn_MCO_GPIO_Config), (8 bytes).
    Removing rcc_book.o(.ARM.exidx.text.fn_RCC_Init), (8 bytes).
    Removing systick_book.o(.text), (0 bytes).
    Removing systick_book.o(.ARM.exidx.text.fn_Systick_Delay), (8 bytes).
    Removing systick_book.o(.ARM.exidx.text.fn_Systick_Delay_Handler_set), (8 bytes).
    Removing systick_book.o(.ARM.exidx.text.fn_SysTick_delay_decrement), (8 bytes).
    Removing systick_book.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing usart_book.o(.text), (0 bytes).
    Removing usart_book.o(.ARM.exidx.text.fn_USART_IO_Config), (8 bytes).
    Removing usart_book.o(.ARM.exidx.text.fn_USART_Config), (8 bytes).
    Removing usart_book.o(.ARM.exidx.text.fn_Usart_Send_Byte), (8 bytes).
    Removing usart_book.o(.ARM.exidx.text.fn_Usart_SendString), (8 bytes).
    Removing usart_book.o(.ARM.exidx.text.Usart_SendHalf_32_Word), (8 bytes).
    Removing usart_book.o(.ARM.exidx.text.fn_USART_Init), (8 bytes).
    Removing usart_book.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing usart_book.o(.text.fgetc), (32 bytes).
    Removing usart_book.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing usart_book.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing dma_book.o(.text), (0 bytes).
    Removing dma_book.o(.ARM.exidx.text._DMA_Config), (8 bytes).
    Removing dma_book.o(.ARM.exidx.text._USART_DMA_Config), (8 bytes).
    Removing dma_book.o(.ARM.exidx.text._Buffercmp), (8 bytes).
    Removing dma_book.o(.ARM.exidx.text._Buffer_Show), (8 bytes).
    Removing dma_book.o(.ARM.exidx.text._DMA_ROM_TO_RAM), (8 bytes).
    Removing dma_book.o(.ARM.exidx.text._DMA_RAM_TO_USART), (8 bytes).
    Removing i2c_book.o(.text), (0 bytes).
    Removing i2c_book.o(.ARM.exidx.text._I2C_EE_Init), (8 bytes).
    Removing i2c_book.o(.ARM.exidx.text.I2C_Write_fun), (8 bytes).
    Removing i2c_book.o(.ARM.exidx.text.I2C_EE_WaitEepromStandbyState), (8 bytes).
    Removing i2c_book.o(.ARM.exidx.text.I2C_Read_fun), (8 bytes).
    Removing i2c_book.o(.ARM.exidx.text.I2C_TIMEOUT_UserCallback), (8 bytes).
    Removing i2c_soft_book.o(.text), (0 bytes).
    Removing i2c_soft_book.o(.text.EE_Soft_Trase), (76 bytes).
    Removing i2c_soft_book.o(.ARM.exidx.text.EE_Soft_Trase), (8 bytes).
    Removing i2c_soft_book.o(.ARM.exidx.text.EE_Soft_WriteBytes), (8 bytes).
    Removing i2c_soft_book.o(.ARM.exidx.text.I2C_Soft_Init), (8 bytes).
    Removing i2c_soft_book.o(.ARM.exidx.text.EE_Soft_Check_State), (8 bytes).
    Removing i2c_soft_book.o(.ARM.exidx.text.I2C_Soft_Write_fun), (8 bytes).
    Removing i2c_soft_book.o(.ARM.exidx.text.I2C_Soft_Read_fun), (8 bytes).
    Removing i2c_soft_book.o(.ARM.exidx.text.I2C_Stop), (8 bytes).
    Removing i2c_soft_book.o(.ARM.exidx.text.I2C_Start), (8 bytes).
    Removing i2c_soft_book.o(.ARM.exidx.text.I2C_SendByte), (8 bytes).
    Removing i2c_soft_book.o(.ARM.exidx.text.I2C_WaitAck), (8 bytes).
    Removing spi_book.o(.text), (0 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_FLASH_Init), (8 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_Read_ID), (8 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_FLASH_Send_Byte), (8 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_Erase_Sector), (8 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_Write_Enable), (8 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_WaitForWriteEnd), (8 bytes).
    Removing spi_book.o(.text.SPI_FLASH_BulkErase), (32 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_FLASH_BulkErase), (8 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_Read_Data), (8 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_Write_Data), (8 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_BufferWrite_Data), (8 bytes).
    Removing spi_book.o(.text.SPI_Flash_PowerDown), (24 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_Flash_PowerDown), (8 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_Flash_WAKEUP), (8 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_Show_Data), (8 bytes).
    Removing spi_book.o(.ARM.exidx.text.SPI_TIMEOUT_UserCallback), (8 bytes).
    Removing fatfs_book.o(.text), (0 bytes).
    Removing fatfs_book.o(.ARM.exidx.text.FatFs_equipment_flash), (8 bytes).
    Removing fatfs_book.o(.ARM.exidx.text.FatFs_Close_flash), (8 bytes).
    Removing fatfs_book.o(.ARM.exidx.text.FatFs_document_Text), (8 bytes).
    Removing fatfs_book.o(.ARM.exidx.text.FatFs_document_set_content), (8 bytes).
    Removing fatfs_book.o(.ARM.exidx.text.file_check), (8 bytes).
    Removing fatfs_book.o(.ARM.exidx.text.Scan_file_Check), (8 bytes).
    Removing fatfs_book.o(.ARM.exidx.text.scan_file), (8 bytes).
    Removing fatfs_book.o(.bss.FATFS_buffer), (0 bytes).
    Removing sram_book.o(.text), (0 bytes).
    Removing sram_book.o(.ARM.exidx.text.SRAM_Test), (8 bytes).
    Removing sram_book.o(.ARM.exidx.text.SRAM_Init), (8 bytes).
    Removing sram_book.o(.ARM.exidx.text.SRAM_Write), (8 bytes).
    Removing lcd_book.o(.text), (0 bytes).
    Removing lcd_book.o(.ARM.exidx.text.ILI9341_Write_Cmd), (8 bytes).
    Removing lcd_book.o(.ARM.exidx.text.ILI9341_Write_Data), (8 bytes).
    Removing lcd_book.o(.ARM.exidx.text.ILI9341_Read_Data), (8 bytes).
    Removing lcd_book.o(.ARM.exidx.text.ILI9341_Delay), (8 bytes).
    Removing lcd_book.o(.ARM.exidx.text.ILI9341_BackLed_Control), (8 bytes).
    Removing lcd_book.o(.ARM.exidx.text.ILI9341_Rst), (8 bytes).
    Removing lcd_book.o(.ARM.exidx.text.ILI9341_GramScan), (8 bytes).
    Removing lcd_book.o(.ARM.exidx.text.ILI9341_Init), (8 bytes).
    Removing lcd_draw_book.o(.text), (0 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_OpenWindow), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_GetPointPixel), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_SetCursor), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_Clear), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_FillColor), (8 bytes).
    Removing lcd_draw_book.o(.text.LCD_ClearLine), (28 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.LCD_ClearLine), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.LCD_GetFont), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.LCD_SetColors), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.LCD_SetForeColor), (8 bytes).
    Removing lcd_draw_book.o(.text.LCD_SetBackColor), (12 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.LCD_SetBackColor), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_SetPointPixel), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DrawLine), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DrawRectangle), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DrawCircle), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DrawCross), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.LCD_SetTextColor), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.LCD_SetFont), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispChar_EN), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispStringLine_EN), (8 bytes).
    Removing lcd_draw_book.o(.text.ILI9341_DispString_EN), (116 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispString_EN), (8 bytes).
    Removing lcd_draw_book.o(.text.ILI9341_DispString_EN_YDir), (116 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispString_EN_YDir), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispChar_CH), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispString_CH), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispStringLine_EN_CH), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispString_EN_CH), (8 bytes).
    Removing lcd_draw_book.o(.text.ILI9341_DispString_EN_CH_YDir), (108 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DispString_EN_CH_YDir), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_zoomChar), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DrawChar_Ex), (8 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DisplayStringEx), (8 bytes).
    Removing lcd_draw_book.o(.text.ILI9341_DisplayStringEx_YDir), (204 bytes).
    Removing lcd_draw_book.o(.ARM.exidx.text.ILI9341_DisplayStringEx_YDir), (8 bytes).
    Removing lcd_pagehtml_book.o(.text), (0 bytes).
    Removing lcd_pagehtml_book.o(.ARM.exidx.text.Display_Char_test), (8 bytes).
    Removing lcd_pagehtml_book.o(.ARM.exidx.text.XPT2046_Touch_Calibrate_Page), (8 bytes).
    Removing lcd_pagehtml_book.o(.ARM.exidx.text.fn_Lcd_Page1), (8 bytes).
    Removing lcd_pagehtml_book.o(.ARM.exidx.text.fn_Lcd_Page2), (8 bytes).
    Removing lcd_pagehtml_book.o(.data.test_modu), (32 bytes).
    Removing xpt2046_lcd_book.o(.text), (0 bytes).
    Removing xpt2046_lcd_book.o(.ARM.exidx.text.XPT2046_GPIO_Init), (8 bytes).
    Removing xpt2046_lcd_book.o(.ARM.exidx.text.XPT2046_ReadAdc_XY), (8 bytes).
    Removing xpt2046_lcd_book.o(.ARM.exidx.text.XPT2046_ReadAdc), (8 bytes).
    Removing xpt2046_lcd_book.o(.ARM.exidx.text.XPT2046_DelayUS), (8 bytes).
    Removing xpt2046_lcd_function_book.o(.text), (0 bytes).
    Removing xpt2046_lcd_function_book.o(.text.XPT2046_TouchDetect), (128 bytes).
    Removing xpt2046_lcd_function_book.o(.ARM.exidx.text.XPT2046_TouchDetect), (8 bytes).
    Removing xpt2046_lcd_function_book.o(.ARM.exidx.text.XPT2046_ReadAdc_Smooth_XY), (8 bytes).
    Removing xpt2046_lcd_function_book.o(.ARM.exidx.text.XPT2046_Touch_Calibrate_SetStand4Pint), (8 bytes).
    Removing xpt2046_lcd_function_book.o(.ARM.exidx.text.XPT2046_Touch_Calibrate), (8 bytes).
    Removing diskio.o(.text), (0 bytes).
    Removing diskio.o(.ARM.exidx.text.disk_status), (8 bytes).
    Removing diskio.o(.ARM.exidx.text.disk_initialize), (8 bytes).
    Removing diskio.o(.ARM.exidx.text.disk_read), (8 bytes).
    Removing diskio.o(.ARM.exidx.text.disk_write), (8 bytes).
    Removing diskio.o(.ARM.exidx.text.disk_ioctl), (8 bytes).
    Removing diskio.o(.ARM.exidx.text.get_fattime), (8 bytes).
    Removing ff.o(.text), (0 bytes).
    Removing ff.o(.ARM.exidx.text.clust2sect), (8 bytes).
    Removing ff.o(.ARM.exidx.text.get_fat), (8 bytes).
    Removing ff.o(.ARM.exidx.text.move_window), (8 bytes).
    Removing ff.o(.ARM.exidx.text.put_fat), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_mount), (8 bytes).
    Removing ff.o(.ARM.exidx.text.get_ldnumber), (8 bytes).
    Removing ff.o(.ARM.exidx.text.find_volume), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_open), (8 bytes).
    Removing ff.o(.ARM.exidx.text.follow_path), (8 bytes).
    Removing ff.o(.ARM.exidx.text.dir_register), (8 bytes).
    Removing ff.o(.ARM.exidx.text.ld_clust), (8 bytes).
    Removing ff.o(.ARM.exidx.text.st_clust), (8 bytes).
    Removing ff.o(.ARM.exidx.text.remove_chain), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_read), (8 bytes).
    Removing ff.o(.ARM.exidx.text.validate), (8 bytes).
    Removing ff.o(.ARM.exidx.text.mem_cpy), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_write), (8 bytes).
    Removing ff.o(.ARM.exidx.text.create_chain), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_sync), (8 bytes).
    Removing ff.o(.ARM.exidx.text.sync_fs), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_close), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_lseek), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_opendir), (8 bytes).
    Removing ff.o(.ARM.exidx.text.dir_sdi), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_closedir), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_readdir), (8 bytes).
    Removing ff.o(.ARM.exidx.text.dir_read), (8 bytes).
    Removing ff.o(.ARM.exidx.text.get_fileinfo), (8 bytes).
    Removing ff.o(.ARM.exidx.text.dir_next), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_stat), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_getfree), (8 bytes).
    Removing ff.o(.text.f_truncate), (168 bytes).
    Removing ff.o(.ARM.exidx.text.f_truncate), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_unlink), (8 bytes).
    Removing ff.o(.ARM.exidx.text.dir_remove), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_mkdir), (8 bytes).
    Removing ff.o(.ARM.exidx.text.sync_window), (8 bytes).
    Removing ff.o(.ARM.exidx.text.mem_set), (8 bytes).
    Removing ff.o(.text.f_chmod), (84 bytes).
    Removing ff.o(.ARM.exidx.text.f_chmod), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_rename), (8 bytes).
    Removing ff.o(.text.f_utime), (80 bytes).
    Removing ff.o(.ARM.exidx.text.f_utime), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_mkfs), (8 bytes).
    Removing ff.o(.text.f_gets), (78 bytes).
    Removing ff.o(.ARM.exidx.text.f_gets), (8 bytes).
    Removing ff.o(.text.f_putc), (72 bytes).
    Removing ff.o(.ARM.exidx.text.f_putc), (8 bytes).
    Removing ff.o(.ARM.exidx.text.putc_bfd), (8 bytes).
    Removing ff.o(.text.f_puts), (78 bytes).
    Removing ff.o(.ARM.exidx.text.f_puts), (8 bytes).
    Removing ff.o(.ARM.exidx.text.f_printf), (8 bytes).
    Removing ff.o(.ARM.exidx.text.check_fs), (8 bytes).
    Removing ff.o(.ARM.exidx.text.dir_find), (8 bytes).
    Removing ff.o(.ARM.exidx.text.chk_chr), (8 bytes).
    Removing ff.o(.ARM.exidx.text.sum_sfn), (8 bytes).
    Removing cc936.o(.text), (0 bytes).
    Removing cc936.o(.ARM.exidx.text.ff_convert), (8 bytes).
    Removing cc936.o(.ARM.exidx.text.ff_wtoupper), (8 bytes).
    Removing fonts.o(.text), (0 bytes).
    Removing fonts.o(.ARM.exidx.text.GetGBKCode_from_EXFlash), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.fn_LED_Flash_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.fn_usart_show_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.fn_DMA_show_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.fn_I2C_EE_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.fn_I2C_EE_Soft_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.fn_SPI_FLASH_Soft_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.fn_FatFs_Document_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.fn_SRAM_Init), (8 bytes).
    Removing main.o(.text.delay), (32 bytes).
    Removing main.o(.ARM.exidx.text.delay), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing stm32f10x_it.o(.text), (0 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing stm32f10x_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).

1158 unused section(s) (total 19904 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../Libraries/DRIVER/DEVICE/startup/startup_stm32f10x_hd.s 0x00000000   Number         0  startup_stm32f10x_hd.o ABSOLUTE
    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/putchar.c         0x00000000   Number         0  putchar.o ABSOLUTE
    ../clib/microlib/stdio/puts.c            0x00000000   Number         0  puts.o ABSOLUTE
    ../clib/microlib/stdio/puts.c            0x00000000   Number         0  puts_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strcpy.c         0x00000000   Number         0  strcpy.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  fadd.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    DMA_book.c                               0x00000000   Number         0  dma_book.o ABSOLUTE
    Exit_book.c                              0x00000000   Number         0  exit_book.o ABSOLUTE
    FatFs_book.c                             0x00000000   Number         0  fatfs_book.o ABSOLUTE
    I2C_book.c                               0x00000000   Number         0  i2c_book.o ABSOLUTE
    I2C_soft_book.c                          0x00000000   Number         0  i2c_soft_book.o ABSOLUTE
    Key_book.c                               0x00000000   Number         0  key_book.o ABSOLUTE
    LCD_Draw_book.c                          0x00000000   Number         0  lcd_draw_book.o ABSOLUTE
    LCD_PageHtml_book.c                      0x00000000   Number         0  lcd_pagehtml_book.o ABSOLUTE
    LCD_book.c                               0x00000000   Number         0  lcd_book.o ABSOLUTE
    Led_book.c                               0x00000000   Number         0  led_book.o ABSOLUTE
    RCC_book.c                               0x00000000   Number         0  rcc_book.o ABSOLUTE
    SPI_book.c                               0x00000000   Number         0  spi_book.o ABSOLUTE
    SRAM_book.c                              0x00000000   Number         0  sram_book.o ABSOLUTE
    Systick_book.c                           0x00000000   Number         0  systick_book.o ABSOLUTE
    USART_book.c                             0x00000000   Number         0  usart_book.o ABSOLUTE
    XPT2046_LCD_Function_book.c              0x00000000   Number         0  xpt2046_lcd_function_book.o ABSOLUTE
    XPT2046_LCD_book.c                       0x00000000   Number         0  xpt2046_lcd_book.o ABSOLUTE
    cc936.c                                  0x00000000   Number         0  cc936.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    diskio.c                                 0x00000000   Number         0  diskio.o ABSOLUTE
    ff.c                                     0x00000000   Number         0  ff.o ABSOLUTE
    fonts.c                                  0x00000000   Number         0  fonts.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    misc.c                                   0x00000000   Number         0  misc.o ABSOLUTE
    stm32f10x_adc.c                          0x00000000   Number         0  stm32f10x_adc.o ABSOLUTE
    stm32f10x_bkp.c                          0x00000000   Number         0  stm32f10x_bkp.o ABSOLUTE
    stm32f10x_can.c                          0x00000000   Number         0  stm32f10x_can.o ABSOLUTE
    stm32f10x_cec.c                          0x00000000   Number         0  stm32f10x_cec.o ABSOLUTE
    stm32f10x_crc.c                          0x00000000   Number         0  stm32f10x_crc.o ABSOLUTE
    stm32f10x_dac.c                          0x00000000   Number         0  stm32f10x_dac.o ABSOLUTE
    stm32f10x_dbgmcu.c                       0x00000000   Number         0  stm32f10x_dbgmcu.o ABSOLUTE
    stm32f10x_dma.c                          0x00000000   Number         0  stm32f10x_dma.o ABSOLUTE
    stm32f10x_exti.c                         0x00000000   Number         0  stm32f10x_exti.o ABSOLUTE
    stm32f10x_flash.c                        0x00000000   Number         0  stm32f10x_flash.o ABSOLUTE
    stm32f10x_fsmc.c                         0x00000000   Number         0  stm32f10x_fsmc.o ABSOLUTE
    stm32f10x_gpio.c                         0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    stm32f10x_i2c.c                          0x00000000   Number         0  stm32f10x_i2c.o ABSOLUTE
    stm32f10x_it.c                           0x00000000   Number         0  stm32f10x_it.o ABSOLUTE
    stm32f10x_iwdg.c                         0x00000000   Number         0  stm32f10x_iwdg.o ABSOLUTE
    stm32f10x_pwr.c                          0x00000000   Number         0  stm32f10x_pwr.o ABSOLUTE
    stm32f10x_rcc.c                          0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    stm32f10x_rtc.c                          0x00000000   Number         0  stm32f10x_rtc.o ABSOLUTE
    stm32f10x_sdio.c                         0x00000000   Number         0  stm32f10x_sdio.o ABSOLUTE
    stm32f10x_spi.c                          0x00000000   Number         0  stm32f10x_spi.o ABSOLUTE
    stm32f10x_tim.c                          0x00000000   Number         0  stm32f10x_tim.o ABSOLUTE
    stm32f10x_usart.c                        0x00000000   Number         0  stm32f10x_usart.o ABSOLUTE
    stm32f10x_wwdg.c                         0x00000000   Number         0  stm32f10x_wwdg.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    RESET                                    0x08000000   Section      304  startup_stm32f10x_hd.o(RESET)
    .ARM.Collect$$$$00000000                 0x08000130   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x08000130   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x08000134   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x08000138   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x08000138   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x08000138   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x08000140   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x08000140   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x08000140   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x08000140   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x08000144   Section       36  startup_stm32f10x_hd.o(.text)
    .text                                    0x08000168   Section        0  memseta.o(.text)
    .text                                    0x0800018c   Section        0  strlen.o(.text)
    .text                                    0x0800019a   Section        0  strcpy.o(.text)
    .text                                    0x080001ac   Section        0  fadd.o(.text)
    .text                                    0x0800025c   Section        0  fmul.o(.text)
    .text                                    0x080002c0   Section        0  fdiv.o(.text)
    .text                                    0x0800033c   Section        0  fflti.o(.text)
    .text                                    0x0800034e   Section        0  ffixi.o(.text)
    .text                                    0x08000380   Section        0  f2d.o(.text)
    .text                                    0x080003a6   Section        0  uidiv.o(.text)
    .text                                    0x080003d2   Section        0  uldiv.o(.text)
    .text                                    0x08000434   Section        0  iusefp.o(.text)
    .text                                    0x08000434   Section        0  fepilogue.o(.text)
    .text                                    0x080004a2   Section        0  dadd.o(.text)
    .text                                    0x080005f0   Section        0  dmul.o(.text)
    .text                                    0x080006d4   Section        0  ddiv.o(.text)
    .text                                    0x080007b2   Section        0  dfixul.o(.text)
    .text                                    0x080007e4   Section       48  cdrcmple.o(.text)
    .text                                    0x08000814   Section       36  init.o(.text)
    .text                                    0x08000838   Section        0  llshl.o(.text)
    .text                                    0x08000856   Section        0  llushr.o(.text)
    .text                                    0x08000876   Section        0  llsshr.o(.text)
    .text                                    0x0800089a   Section        0  depilogue.o(.text)
    .text                                    0x08000954   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x0800098e   Section        0  stm32f10x_it.o(.text.BusFault_Handler)
    [Anonymous Symbol]                       0x08000990   Section        0  stm32f10x_dma.o(.text.DMA_Cmd)
    [Anonymous Symbol]                       0x080009a8   Section        0  stm32f10x_dma.o(.text.DMA_GetFlagStatus)
    __arm_cp.7_0                             0x080009bc   Number         4  stm32f10x_dma.o(.text.DMA_GetFlagStatus)
    [Anonymous Symbol]                       0x080009c0   Section        0  stm32f10x_dma.o(.text.DMA_Init)
    [Anonymous Symbol]                       0x08000a06   Section        0  stm32f10x_it.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x08000a08   Section        0  lcd_pagehtml_book.o(.text.Display_Char_test)
    __arm_cp.0_0                             0x08000a6c   Number         4  lcd_pagehtml_book.o(.text.Display_Char_test)
    EE_Soft_Check_State                      0x08000a71   Thumb Code    80  i2c_soft_book.o(.text.EE_Soft_Check_State)
    [Anonymous Symbol]                       0x08000a70   Section        0  i2c_soft_book.o(.text.EE_Soft_Check_State)
    __arm_cp.3_0                             0x08000ab8   Number         4  i2c_soft_book.o(.text.EE_Soft_Check_State)
    __arm_cp.3_2                             0x08000abc   Number         4  i2c_soft_book.o(.text.EE_Soft_Check_State)
    EE_Soft_WriteBytes                       0x08000ac1   Thumb Code   180  i2c_soft_book.o(.text.EE_Soft_WriteBytes)
    [Anonymous Symbol]                       0x08000ac0   Section        0  i2c_soft_book.o(.text.EE_Soft_WriteBytes)
    [Anonymous Symbol]                       0x08000b74   Section        0  exit_book.o(.text.EXTI0_IRQHandler)
    __arm_cp.2_0                             0x08000ba4   Number         4  exit_book.o(.text.EXTI0_IRQHandler)
    [Anonymous Symbol]                       0x08000ba8   Section        0  exit_book.o(.text.EXTI15_10_IRQHandler)
    __arm_cp.3_0                             0x08000bdc   Number         4  exit_book.o(.text.EXTI15_10_IRQHandler)
    [Anonymous Symbol]                       0x08000be0   Section        0  stm32f10x_exti.o(.text.EXTI_ClearITPendingBit)
    __arm_cp.7_0                             0x08000be8   Number         4  stm32f10x_exti.o(.text.EXTI_ClearITPendingBit)
    [Anonymous Symbol]                       0x08000bec   Section        0  stm32f10x_exti.o(.text.EXTI_GetITStatus)
    [Anonymous Symbol]                       0x08000c04   Section        0  stm32f10x_exti.o(.text.EXTI_Init)
    __arm_cp.1_0                             0x08000c60   Number         4  stm32f10x_exti.o(.text.EXTI_Init)
    [Anonymous Symbol]                       0x08000c64   Section        0  stm32f10x_flash.o(.text.FLASH_PrefetchBufferCmd)
    [Anonymous Symbol]                       0x08000c78   Section        0  stm32f10x_flash.o(.text.FLASH_SetLatency)
    __arm_cp.0_0                             0x08000c88   Number         4  stm32f10x_flash.o(.text.FLASH_SetLatency)
    [Anonymous Symbol]                       0x08000c8c   Section        0  stm32f10x_fsmc.o(.text.FSMC_NORSRAMCmd)
    __arm_cp.9_0                             0x08000cac   Number         4  stm32f10x_fsmc.o(.text.FSMC_NORSRAMCmd)
    [Anonymous Symbol]                       0x08000cb0   Section        0  stm32f10x_fsmc.o(.text.FSMC_NORSRAMInit)
    __arm_cp.3_0                             0x08000d58   Number         4  stm32f10x_fsmc.o(.text.FSMC_NORSRAMInit)
    __arm_cp.3_1                             0x08000d5c   Number         4  stm32f10x_fsmc.o(.text.FSMC_NORSRAMInit)
    [Anonymous Symbol]                       0x08000d60   Section        0  fatfs_book.o(.text.FatFs_Close_flash)
    [Anonymous Symbol]                       0x08000d80   Section        0  fatfs_book.o(.text.FatFs_document_Text)
    __arm_cp.2_1                             0x08000e40   Number         4  fatfs_book.o(.text.FatFs_document_Text)
    __arm_cp.2_2                             0x08000e44   Number         4  fatfs_book.o(.text.FatFs_document_Text)
    __arm_cp.2_5                             0x08000e90   Number         4  fatfs_book.o(.text.FatFs_document_Text)
    __arm_cp.2_6                             0x08000e94   Number         4  fatfs_book.o(.text.FatFs_document_Text)
    [Anonymous Symbol]                       0x08000e98   Section        0  fatfs_book.o(.text.FatFs_document_set_content)
    __arm_cp.3_1                             0x08000f38   Number         4  fatfs_book.o(.text.FatFs_document_set_content)
    __arm_cp.3_4                             0x08000f84   Number         4  fatfs_book.o(.text.FatFs_document_set_content)
    __arm_cp.3_5                             0x08000f88   Number         4  fatfs_book.o(.text.FatFs_document_set_content)
    [Anonymous Symbol]                       0x08000f8c   Section        0  fatfs_book.o(.text.FatFs_equipment_flash)
    __arm_cp.0_2                             0x080010a0   Number         4  fatfs_book.o(.text.FatFs_equipment_flash)
    __arm_cp.0_3                             0x080010a4   Number         4  fatfs_book.o(.text.FatFs_equipment_flash)
    __arm_cp.0_4                             0x080010a8   Number         4  fatfs_book.o(.text.FatFs_equipment_flash)
    __arm_cp.0_5                             0x080010ac   Number         4  fatfs_book.o(.text.FatFs_equipment_flash)
    __arm_cp.0_7                             0x080010c4   Number         4  fatfs_book.o(.text.FatFs_equipment_flash)
    __arm_cp.0_8                             0x080010c8   Number         4  fatfs_book.o(.text.FatFs_equipment_flash)
    __arm_cp.0_9                             0x080010cc   Number         4  fatfs_book.o(.text.FatFs_equipment_flash)
    __arm_cp.0_10                            0x080010d0   Number         4  fatfs_book.o(.text.FatFs_equipment_flash)
    [Anonymous Symbol]                       0x080010d4   Section        0  stm32f10x_gpio.o(.text.GPIO_EXTILineConfig)
    __arm_cp.16_0                            0x080010f8   Number         4  stm32f10x_gpio.o(.text.GPIO_EXTILineConfig)
    [Anonymous Symbol]                       0x080010fc   Section        0  stm32f10x_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x080011b0   Section        0  stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit)
    [Anonymous Symbol]                       0x080011ba   Section        0  stm32f10x_gpio.o(.text.GPIO_ReadOutputDataBit)
    [Anonymous Symbol]                       0x080011c4   Section        0  stm32f10x_gpio.o(.text.GPIO_ResetBits)
    [Anonymous Symbol]                       0x080011c8   Section        0  stm32f10x_gpio.o(.text.GPIO_SetBits)
    [Anonymous Symbol]                       0x080011cc   Section        0  fonts.o(.text.GetGBKCode_from_EXFlash)
    __arm_cp.0_0                             0x08001208   Number         4  fonts.o(.text.GetGBKCode_from_EXFlash)
    __arm_cp.0_1                             0x0800120c   Number         4  fonts.o(.text.GetGBKCode_from_EXFlash)
    __arm_cp.0_2                             0x08001210   Number         4  fonts.o(.text.GetGBKCode_from_EXFlash)
    [Anonymous Symbol]                       0x08001214   Section        0  stm32f10x_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08001216   Section        0  stm32f10x_i2c.o(.text.I2C_AcknowledgeConfig)
    [Anonymous Symbol]                       0x08001228   Section        0  stm32f10x_i2c.o(.text.I2C_CheckEvent)
    [Anonymous Symbol]                       0x0800123e   Section        0  stm32f10x_i2c.o(.text.I2C_ClearFlag)
    [Anonymous Symbol]                       0x08001244   Section        0  stm32f10x_i2c.o(.text.I2C_Cmd)
    I2C_EE_WaitEepromStandbyState            0x08001259   Thumb Code    76  i2c_book.o(.text.I2C_EE_WaitEepromStandbyState)
    [Anonymous Symbol]                       0x08001258   Section        0  i2c_book.o(.text.I2C_EE_WaitEepromStandbyState)
    __arm_cp.2_1                             0x080012a0   Number         4  i2c_book.o(.text.I2C_EE_WaitEepromStandbyState)
    [Anonymous Symbol]                       0x080012a4   Section        0  stm32f10x_i2c.o(.text.I2C_GenerateSTART)
    [Anonymous Symbol]                       0x080012b6   Section        0  stm32f10x_i2c.o(.text.I2C_GenerateSTOP)
    [Anonymous Symbol]                       0x080012c8   Section        0  stm32f10x_i2c.o(.text.I2C_GetFlagStatus)
    [Anonymous Symbol]                       0x080012fc   Section        0  stm32f10x_i2c.o(.text.I2C_Init)
    __arm_cp.1_0                             0x080013ac   Number         4  stm32f10x_i2c.o(.text.I2C_Init)
    __arm_cp.1_1                             0x080013b0   Number         4  stm32f10x_i2c.o(.text.I2C_Init)
    __arm_cp.1_2                             0x080013b4   Number         4  stm32f10x_i2c.o(.text.I2C_Init)
    [Anonymous Symbol]                       0x080013b8   Section        0  stm32f10x_i2c.o(.text.I2C_ReadRegister)
    [Anonymous Symbol]                       0x080013d0   Section        0  i2c_book.o(.text.I2C_Read_fun)
    __arm_cp.3_1                             0x08001588   Number         4  i2c_book.o(.text.I2C_Read_fun)
    __arm_cp.3_2                             0x0800158c   Number         4  i2c_book.o(.text.I2C_Read_fun)
    __arm_cp.3_3                             0x08001590   Number         4  i2c_book.o(.text.I2C_Read_fun)
    __arm_cp.3_4                             0x08001594   Number         4  i2c_book.o(.text.I2C_Read_fun)
    __arm_cp.3_6                             0x080015ac   Number         4  i2c_book.o(.text.I2C_Read_fun)
    __arm_cp.3_7                             0x080015b0   Number         4  i2c_book.o(.text.I2C_Read_fun)
    [Anonymous Symbol]                       0x080015cc   Section        0  stm32f10x_i2c.o(.text.I2C_ReceiveData)
    [Anonymous Symbol]                       0x080015d2   Section        0  stm32f10x_i2c.o(.text.I2C_Send7bitAddress)
    I2C_SendByte                             0x080015e5   Thumb Code    84  i2c_soft_book.o(.text.I2C_SendByte)
    [Anonymous Symbol]                       0x080015e4   Section        0  i2c_soft_book.o(.text.I2C_SendByte)
    [Anonymous Symbol]                       0x08001638   Section        0  stm32f10x_i2c.o(.text.I2C_SendData)
    [Anonymous Symbol]                       0x0800163c   Section        0  i2c_soft_book.o(.text.I2C_Soft_Init)
    [Anonymous Symbol]                       0x08001650   Section        0  i2c_soft_book.o(.text.I2C_Soft_Read_fun)
    __arm_cp.5_4                             0x080017c0   Number         4  i2c_soft_book.o(.text.I2C_Soft_Read_fun)
    __arm_cp.5_5                             0x080017c4   Number         4  i2c_soft_book.o(.text.I2C_Soft_Read_fun)
    [Anonymous Symbol]                       0x080017f4   Section        0  i2c_soft_book.o(.text.I2C_Soft_Write_fun)
    __arm_cp.4_0                             0x08001860   Number         4  i2c_soft_book.o(.text.I2C_Soft_Write_fun)
    __arm_cp.4_4                             0x0800189c   Number         4  i2c_soft_book.o(.text.I2C_Soft_Write_fun)
    __arm_cp.4_5                             0x080018a0   Number         4  i2c_soft_book.o(.text.I2C_Soft_Write_fun)
    I2C_Start                                0x080018a5   Thumb Code    44  i2c_soft_book.o(.text.I2C_Start)
    [Anonymous Symbol]                       0x080018a4   Section        0  i2c_soft_book.o(.text.I2C_Start)
    I2C_Stop                                 0x080018d1   Thumb Code    28  i2c_soft_book.o(.text.I2C_Stop)
    [Anonymous Symbol]                       0x080018d0   Section        0  i2c_soft_book.o(.text.I2C_Stop)
    __arm_cp.6_0                             0x080018e8   Number         4  i2c_soft_book.o(.text.I2C_Stop)
    I2C_TIMEOUT_UserCallback                 0x080018ed   Thumb Code    60  i2c_book.o(.text.I2C_TIMEOUT_UserCallback)
    [Anonymous Symbol]                       0x080018ec   Section        0  i2c_book.o(.text.I2C_TIMEOUT_UserCallback)
    __arm_cp.4_0                             0x08001904   Number         4  i2c_book.o(.text.I2C_TIMEOUT_UserCallback)
    I2C_WaitAck                              0x08001929   Thumb Code    52  i2c_soft_book.o(.text.I2C_WaitAck)
    [Anonymous Symbol]                       0x08001928   Section        0  i2c_soft_book.o(.text.I2C_WaitAck)
    __arm_cp.9_0                             0x08001954   Number         4  i2c_soft_book.o(.text.I2C_WaitAck)
    __arm_cp.9_1                             0x08001958   Number         4  i2c_soft_book.o(.text.I2C_WaitAck)
    [Anonymous Symbol]                       0x0800195c   Section        0  i2c_book.o(.text.I2C_Write_fun)
    __arm_cp.1_1                             0x08001acc   Number         4  i2c_book.o(.text.I2C_Write_fun)
    __arm_cp.1_2                             0x08001ad0   Number         4  i2c_book.o(.text.I2C_Write_fun)
    __arm_cp.1_3                             0x08001ad4   Number         4  i2c_book.o(.text.I2C_Write_fun)
    __arm_cp.1_4                             0x08001ad8   Number         4  i2c_book.o(.text.I2C_Write_fun)
    __arm_cp.1_6                             0x08001af0   Number         4  i2c_book.o(.text.I2C_Write_fun)
    __arm_cp.1_7                             0x08001af4   Number         4  i2c_book.o(.text.I2C_Write_fun)
    [Anonymous Symbol]                       0x08001af8   Section        0  lcd_book.o(.text.ILI9341_BackLed_Control)
    __arm_cp.4_0                             0x08001b0c   Number         4  lcd_book.o(.text.ILI9341_BackLed_Control)
    [Anonymous Symbol]                       0x08001b10   Section        0  lcd_draw_book.o(.text.ILI9341_Clear)
    [Anonymous Symbol]                       0x08001b2c   Section        0  lcd_book.o(.text.ILI9341_Delay)
    [Anonymous Symbol]                       0x08001b40   Section        0  lcd_draw_book.o(.text.ILI9341_DispChar_CH)
    [Anonymous Symbol]                       0x08001bb8   Section        0  lcd_draw_book.o(.text.ILI9341_DispChar_EN)
    __arm_cp.17_1                            0x08001c34   Number         4  lcd_draw_book.o(.text.ILI9341_DispChar_EN)
    [Anonymous Symbol]                       0x08001c38   Section        0  lcd_draw_book.o(.text.ILI9341_DispStringLine_EN)
    [Anonymous Symbol]                       0x08001ca0   Section        0  lcd_draw_book.o(.text.ILI9341_DispStringLine_EN_CH)
    [Anonymous Symbol]                       0x08001d48   Section        0  lcd_draw_book.o(.text.ILI9341_DispString_CH)
    [Anonymous Symbol]                       0x08001d9c   Section        0  lcd_draw_book.o(.text.ILI9341_DispString_EN_CH)
    __arm_cp.24_2                            0x08001e44   Number         4  lcd_draw_book.o(.text.ILI9341_DispString_EN_CH)
    [Anonymous Symbol]                       0x08001e48   Section        0  lcd_draw_book.o(.text.ILI9341_DisplayStringEx)
    __arm_cp.28_0                            0x08001f08   Number         4  lcd_draw_book.o(.text.ILI9341_DisplayStringEx)
    __arm_cp.28_1                            0x08001f0c   Number         4  lcd_draw_book.o(.text.ILI9341_DisplayStringEx)
    __arm_cp.28_2                            0x08001f10   Number         4  lcd_draw_book.o(.text.ILI9341_DisplayStringEx)
    __arm_cp.28_3                            0x08001f14   Number         4  lcd_draw_book.o(.text.ILI9341_DisplayStringEx)
    [Anonymous Symbol]                       0x08001f18   Section        0  lcd_draw_book.o(.text.ILI9341_DrawChar_Ex)
    [Anonymous Symbol]                       0x08001f74   Section        0  lcd_draw_book.o(.text.ILI9341_DrawCircle)
    __arm_cp.13_0                            0x080020fc   Number         4  lcd_draw_book.o(.text.ILI9341_DrawCircle)
    [Anonymous Symbol]                       0x08002100   Section        0  lcd_draw_book.o(.text.ILI9341_DrawCross)
    [Anonymous Symbol]                       0x08002134   Section        0  lcd_draw_book.o(.text.ILI9341_DrawLine)
    [Anonymous Symbol]                       0x080021d4   Section        0  lcd_draw_book.o(.text.ILI9341_DrawRectangle)
    __arm_cp.12_0                            0x08002250   Number         4  lcd_draw_book.o(.text.ILI9341_DrawRectangle)
    __arm_cp.12_1                            0x08002254   Number         4  lcd_draw_book.o(.text.ILI9341_DrawRectangle)
    ILI9341_FillColor                        0x08002259   Thumb Code    26  lcd_draw_book.o(.text.ILI9341_FillColor)
    [Anonymous Symbol]                       0x08002258   Section        0  lcd_draw_book.o(.text.ILI9341_FillColor)
    [Anonymous Symbol]                       0x08002274   Section        0  lcd_draw_book.o(.text.ILI9341_GetPointPixel)
    __arm_cp.1_0                             0x080022a4   Number         4  lcd_draw_book.o(.text.ILI9341_GetPointPixel)
    [Anonymous Symbol]                       0x080022a8   Section        0  lcd_book.o(.text.ILI9341_GramScan)
    __arm_cp.6_0                             0x08002324   Number         4  lcd_book.o(.text.ILI9341_GramScan)
    [Anonymous Symbol]                       0x08002328   Section        0  lcd_book.o(.text.ILI9341_Init)
    __arm_cp.7_0                             0x08002628   Number         4  lcd_book.o(.text.ILI9341_Init)
    __arm_cp.7_1                             0x0800262c   Number         4  lcd_book.o(.text.ILI9341_Init)
    __arm_cp.7_2                             0x08002630   Number         4  lcd_book.o(.text.ILI9341_Init)
    __arm_cp.7_3                             0x08002634   Number         4  lcd_book.o(.text.ILI9341_Init)
    __arm_cp.7_4                             0x08002638   Number         4  lcd_book.o(.text.ILI9341_Init)
    __arm_cp.7_5                             0x0800263c   Number         4  lcd_book.o(.text.ILI9341_Init)
    __arm_cp.7_6                             0x08002640   Number         4  lcd_book.o(.text.ILI9341_Init)
    [Anonymous Symbol]                       0x08002644   Section        0  lcd_draw_book.o(.text.ILI9341_OpenWindow)
    __arm_cp.0_0                             0x08002694   Number         4  lcd_draw_book.o(.text.ILI9341_OpenWindow)
    [Anonymous Symbol]                       0x08002698   Section        0  lcd_book.o(.text.ILI9341_Read_Data)
    [Anonymous Symbol]                       0x080026a0   Section        0  lcd_book.o(.text.ILI9341_Rst)
    __arm_cp.5_0                             0x080026cc   Number         4  lcd_book.o(.text.ILI9341_Rst)
    ILI9341_SetCursor                        0x080026d1   Thumb Code     6  lcd_draw_book.o(.text.ILI9341_SetCursor)
    [Anonymous Symbol]                       0x080026d0   Section        0  lcd_draw_book.o(.text.ILI9341_SetCursor)
    [Anonymous Symbol]                       0x080026d8   Section        0  lcd_draw_book.o(.text.ILI9341_SetPointPixel)
    __arm_cp.10_0                            0x08002704   Number         4  lcd_draw_book.o(.text.ILI9341_SetPointPixel)
    __arm_cp.10_1                            0x08002708   Number         4  lcd_draw_book.o(.text.ILI9341_SetPointPixel)
    [Anonymous Symbol]                       0x0800270c   Section        0  lcd_book.o(.text.ILI9341_Write_Cmd)
    [Anonymous Symbol]                       0x08002714   Section        0  lcd_book.o(.text.ILI9341_Write_Data)
    [Anonymous Symbol]                       0x0800271c   Section        0  lcd_draw_book.o(.text.ILI9341_zoomChar)
    __arm_cp.26_0                            0x080027e8   Number         4  lcd_draw_book.o(.text.ILI9341_zoomChar)
    __arm_cp.26_1                            0x080027ec   Number         4  lcd_draw_book.o(.text.ILI9341_zoomChar)
    [Anonymous Symbol]                       0x080027f0   Section        0  lcd_draw_book.o(.text.LCD_GetFont)
    [Anonymous Symbol]                       0x080027f8   Section        0  lcd_draw_book.o(.text.LCD_SetColors)
    [Anonymous Symbol]                       0x08002800   Section        0  lcd_draw_book.o(.text.LCD_SetFont)
    __arm_cp.16_0                            0x08002808   Number         4  lcd_draw_book.o(.text.LCD_SetFont)
    [Anonymous Symbol]                       0x0800280c   Section        0  lcd_draw_book.o(.text.LCD_SetForeColor)
    [Anonymous Symbol]                       0x08002814   Section        0  lcd_draw_book.o(.text.LCD_SetTextColor)
    __arm_cp.15_0                            0x0800281c   Number         4  lcd_draw_book.o(.text.LCD_SetTextColor)
    [Anonymous Symbol]                       0x08002820   Section        0  stm32f10x_it.o(.text.MemManage_Handler)
    [Anonymous Symbol]                       0x08002822   Section        0  stm32f10x_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x08002824   Section        0  misc.o(.text.NVIC_Init)
    __arm_cp.1_0                             0x08002870   Number         4  misc.o(.text.NVIC_Init)
    [Anonymous Symbol]                       0x08002874   Section        0  misc.o(.text.NVIC_PriorityGroupConfig)
    __arm_cp.0_0                             0x08002880   Number         4  misc.o(.text.NVIC_PriorityGroupConfig)
    __arm_cp.0_1                             0x08002884   Number         4  misc.o(.text.NVIC_PriorityGroupConfig)
    [Anonymous Symbol]                       0x08002888   Section        0  stm32f10x_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x0800288c   Section        0  stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd)
    __arm_cp.21_0                            0x080028a0   Number         4  stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd)
    [Anonymous Symbol]                       0x080028a4   Section        0  stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd)
    __arm_cp.23_0                            0x080028b8   Number         4  stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd)
    [Anonymous Symbol]                       0x080028bc   Section        0  stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd)
    __arm_cp.22_0                            0x080028d0   Number         4  stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd)
    [Anonymous Symbol]                       0x080028d4   Section        0  stm32f10x_rcc.o(.text.RCC_DeInit)
    __arm_cp.0_1                             0x08002908   Number         4  stm32f10x_rcc.o(.text.RCC_DeInit)
    __arm_cp.0_2                             0x0800290c   Number         4  stm32f10x_rcc.o(.text.RCC_DeInit)
    [Anonymous Symbol]                       0x08002910   Section        0  stm32f10x_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.20_1                            0x08002974   Number         4  stm32f10x_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.20_2                            0x08002978   Number         4  stm32f10x_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.20_3                            0x0800297c   Number         4  stm32f10x_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.20_4                            0x08002980   Number         4  stm32f10x_rcc.o(.text.RCC_GetClocksFreq)
    [Anonymous Symbol]                       0x08002984   Section        0  stm32f10x_rcc.o(.text.RCC_GetFlagStatus)
    [Anonymous Symbol]                       0x080029a8   Section        0  stm32f10x_rcc.o(.text.RCC_GetSYSCLKSource)
    [Anonymous Symbol]                       0x080029b4   Section        0  stm32f10x_rcc.o(.text.RCC_HCLKConfig)
    [Anonymous Symbol]                       0x080029c4   Section        0  stm32f10x_rcc.o(.text.RCC_HSEConfig)
    [Anonymous Symbol]                       0x080029f0   Section        0  stm32f10x_rcc.o(.text.RCC_PCLK1Config)
    [Anonymous Symbol]                       0x08002a00   Section        0  stm32f10x_rcc.o(.text.RCC_PCLK2Config)
    [Anonymous Symbol]                       0x08002a10   Section        0  stm32f10x_rcc.o(.text.RCC_PLLCmd)
    __arm_cp.7_0                             0x08002a18   Number         4  stm32f10x_rcc.o(.text.RCC_PLLCmd)
    [Anonymous Symbol]                       0x08002a1c   Section        0  stm32f10x_rcc.o(.text.RCC_PLLConfig)
    [Anonymous Symbol]                       0x08002a2c   Section        0  stm32f10x_rcc.o(.text.RCC_SYSCLKConfig)
    __arm_cp.8_0                             0x08002a3c   Number         4  stm32f10x_rcc.o(.text.RCC_SYSCLKConfig)
    [Anonymous Symbol]                       0x08002a40   Section        0  stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp)
    __arm_cp.2_0                             0x08002a68   Number         4  stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp)
    [Anonymous Symbol]                       0x08002a6c   Section        0  spi_book.o(.text.SPI_BufferWrite_Data)
    [Anonymous Symbol]                       0x08002af0   Section        0  stm32f10x_spi.o(.text.SPI_Cmd)
    [Anonymous Symbol]                       0x08002b04   Section        0  spi_book.o(.text.SPI_Erase_Sector)
    [Anonymous Symbol]                       0x08002b34   Section        0  spi_book.o(.text.SPI_FLASH_Init)
    __arm_cp.0_0                             0x08002bb4   Number         4  spi_book.o(.text.SPI_FLASH_Init)
    __arm_cp.0_1                             0x08002bb8   Number         4  spi_book.o(.text.SPI_FLASH_Init)
    __arm_cp.0_2                             0x08002bbc   Number         4  spi_book.o(.text.SPI_FLASH_Init)
    __arm_cp.0_3                             0x08002bc0   Number         4  spi_book.o(.text.SPI_FLASH_Init)
    __arm_cp.0_4                             0x08002bc4   Number         4  spi_book.o(.text.SPI_FLASH_Init)
    __arm_cp.0_5                             0x08002bc8   Number         4  spi_book.o(.text.SPI_FLASH_Init)
    SPI_FLASH_Send_Byte                      0x08002bcd   Thumb Code   108  spi_book.o(.text.SPI_FLASH_Send_Byte)
    [Anonymous Symbol]                       0x08002bcc   Section        0  spi_book.o(.text.SPI_FLASH_Send_Byte)
    __arm_cp.2_0                             0x08002c30   Number         4  spi_book.o(.text.SPI_FLASH_Send_Byte)
    __arm_cp.2_1                             0x08002c34   Number         4  spi_book.o(.text.SPI_FLASH_Send_Byte)
    [Anonymous Symbol]                       0x08002c38   Section        0  spi_book.o(.text.SPI_Flash_WAKEUP)
    [Anonymous Symbol]                       0x08002c4c   Section        0  stm32f10x_spi.o(.text.SPI_I2S_GetFlagStatus)
    [Anonymous Symbol]                       0x08002c56   Section        0  stm32f10x_spi.o(.text.SPI_I2S_ReceiveData)
    [Anonymous Symbol]                       0x08002c5a   Section        0  stm32f10x_spi.o(.text.SPI_I2S_SendData)
    [Anonymous Symbol]                       0x08002c5e   Section        0  stm32f10x_spi.o(.text.SPI_Init)
    [Anonymous Symbol]                       0x08002c94   Section        0  spi_book.o(.text.SPI_Read_Data)
    [Anonymous Symbol]                       0x08002cd8   Section        0  spi_book.o(.text.SPI_Read_ID)
    [Anonymous Symbol]                       0x08002d0c   Section        0  spi_book.o(.text.SPI_Show_Data)
    SPI_TIMEOUT_UserCallback                 0x08002d49   Thumb Code    56  spi_book.o(.text.SPI_TIMEOUT_UserCallback)
    [Anonymous Symbol]                       0x08002d48   Section        0  spi_book.o(.text.SPI_TIMEOUT_UserCallback)
    SPI_WaitForWriteEnd                      0x08002d81   Thumb Code    32  spi_book.o(.text.SPI_WaitForWriteEnd)
    [Anonymous Symbol]                       0x08002d80   Section        0  spi_book.o(.text.SPI_WaitForWriteEnd)
    [Anonymous Symbol]                       0x08002da0   Section        0  spi_book.o(.text.SPI_Write_Data)
    __arm_cp.8_0                             0x08002dfc   Number         4  spi_book.o(.text.SPI_Write_Data)
    __arm_cp.8_1                             0x08002e00   Number         4  spi_book.o(.text.SPI_Write_Data)
    SPI_Write_Enable                         0x08002e25   Thumb Code    24  spi_book.o(.text.SPI_Write_Enable)
    [Anonymous Symbol]                       0x08002e24   Section        0  spi_book.o(.text.SPI_Write_Enable)
    __arm_cp.4_0                             0x08002e38   Number         4  spi_book.o(.text.SPI_Write_Enable)
    [Anonymous Symbol]                       0x08002e3c   Section        0  sram_book.o(.text.SRAM_Init)
    __arm_cp.1_0                             0x080030c8   Number         4  sram_book.o(.text.SRAM_Init)
    __arm_cp.1_1                             0x080030cc   Number         4  sram_book.o(.text.SRAM_Init)
    __arm_cp.1_2                             0x080030d0   Number         4  sram_book.o(.text.SRAM_Init)
    [Anonymous Symbol]                       0x080030d4   Section        0  sram_book.o(.text.SRAM_Test)
    __arm_cp.0_2                             0x080031bc   Number         4  sram_book.o(.text.SRAM_Test)
    [Anonymous Symbol]                       0x080031e8   Section        0  sram_book.o(.text.SRAM_Write)
    __arm_cp.2_0                             0x08003224   Number         4  sram_book.o(.text.SRAM_Write)
    __arm_cp.2_1                             0x08003228   Number         4  sram_book.o(.text.SRAM_Write)
    __arm_cp.2_3                             0x08003244   Number         4  sram_book.o(.text.SRAM_Write)
    __arm_cp.2_5                             0x08003260   Number         4  sram_book.o(.text.SRAM_Write)
    [Anonymous Symbol]                       0x08003264   Section        0  stm32f10x_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08003268   Section        0  fatfs_book.o(.text.Scan_file_Check)
    [Anonymous Symbol]                       0x080032ac   Section        0  systick_book.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080032b0   Section        0  system_stm32f10x.o(.text.SystemInit)
    __arm_cp.0_0                             0x0800338c   Number         4  system_stm32f10x.o(.text.SystemInit)
    __arm_cp.0_1                             0x08003390   Number         4  system_stm32f10x.o(.text.SystemInit)
    __arm_cp.0_2                             0x08003394   Number         4  system_stm32f10x.o(.text.SystemInit)
    __arm_cp.0_3                             0x08003398   Number         4  system_stm32f10x.o(.text.SystemInit)
    __arm_cp.0_4                             0x0800339c   Number         4  system_stm32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x080033a0   Section        0  usart_book.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x080033c4   Section        0  stm32f10x_usart.o(.text.USART_Cmd)
    [Anonymous Symbol]                       0x080033d6   Section        0  stm32f10x_usart.o(.text.USART_DMACmd)
    [Anonymous Symbol]                       0x080033e6   Section        0  stm32f10x_usart.o(.text.USART_GetFlagStatus)
    [Anonymous Symbol]                       0x080033f0   Section        0  stm32f10x_usart.o(.text.USART_GetITStatus)
    [Anonymous Symbol]                       0x08003428   Section        0  stm32f10x_usart.o(.text.USART_ITConfig)
    [Anonymous Symbol]                       0x08003454   Section        0  stm32f10x_usart.o(.text.USART_Init)
    __arm_cp.1_0                             0x080034f4   Number         4  stm32f10x_usart.o(.text.USART_Init)
    [Anonymous Symbol]                       0x080034f8   Section        0  stm32f10x_usart.o(.text.USART_ReceiveData)
    [Anonymous Symbol]                       0x08003500   Section        0  stm32f10x_usart.o(.text.USART_SendData)
    [Anonymous Symbol]                       0x08003508   Section        0  stm32f10x_it.o(.text.UsageFault_Handler)
    [Anonymous Symbol]                       0x0800350a   Section        0  usart_book.o(.text.Usart_SendHalf_32_Word)
    XPT2046_DelayUS                          0x08003533   Thumb Code    20  xpt2046_lcd_book.o(.text.XPT2046_DelayUS)
    [Anonymous Symbol]                       0x08003532   Section        0  xpt2046_lcd_book.o(.text.XPT2046_DelayUS)
    [Anonymous Symbol]                       0x08003548   Section        0  xpt2046_lcd_book.o(.text.XPT2046_GPIO_Init)
    __arm_cp.0_0                             0x080035a8   Number         4  xpt2046_lcd_book.o(.text.XPT2046_GPIO_Init)
    __arm_cp.0_2                             0x080035ac   Number         4  xpt2046_lcd_book.o(.text.XPT2046_GPIO_Init)
    __arm_cp.0_3                             0x080035b0   Number         4  xpt2046_lcd_book.o(.text.XPT2046_GPIO_Init)
    __arm_cp.0_4                             0x080035b4   Number         4  xpt2046_lcd_book.o(.text.XPT2046_GPIO_Init)
    XPT2046_ReadAdc                          0x080035b9   Thumb Code   196  xpt2046_lcd_book.o(.text.XPT2046_ReadAdc)
    [Anonymous Symbol]                       0x080035b8   Section        0  xpt2046_lcd_book.o(.text.XPT2046_ReadAdc)
    __arm_cp.2_1                             0x08003678   Number         4  xpt2046_lcd_book.o(.text.XPT2046_ReadAdc)
    [Anonymous Symbol]                       0x0800367c   Section        0  xpt2046_lcd_function_book.o(.text.XPT2046_ReadAdc_Smooth_XY)
    __arm_cp.1_0                             0x080037d0   Number         4  xpt2046_lcd_function_book.o(.text.XPT2046_ReadAdc_Smooth_XY)
    __arm_cp.1_1                             0x080037d4   Number         4  xpt2046_lcd_function_book.o(.text.XPT2046_ReadAdc_Smooth_XY)
    [Anonymous Symbol]                       0x080037d8   Section        0  xpt2046_lcd_book.o(.text.XPT2046_ReadAdc_XY)
    [Anonymous Symbol]                       0x08003820   Section        0  xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate)
    __arm_cp.3_0                             0x08003a90   Number         4  xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate)
    __arm_cp.3_1                             0x08003a94   Number         4  xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate)
    [Anonymous Symbol]                       0x08003ac4   Section        0  lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page)
    __arm_cp.1_0                             0x08003c90   Number         4  lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page)
    __arm_cp.1_1                             0x08003c94   Number         4  lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page)
    __arm_cp.1_2                             0x08003c98   Number         4  lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page)
    __arm_cp.1_3                             0x08003c9c   Number         4  lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page)
    __arm_cp.1_5                             0x08003cbc   Number         4  lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page)
    __arm_cp.1_7                             0x08003cc8   Number         4  lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page)
    __arm_cp.1_8                             0x08003ccc   Number         4  lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page)
    __arm_cp.1_9                             0x08003cd0   Number         4  lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page)
    [Anonymous Symbol]                       0x08003d04   Section        0  xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate_SetStand4Pint)
    __arm_cp.2_0                             0x08003d34   Number         4  xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate_SetStand4Pint)
    __arm_cp.2_1                             0x08003d38   Number         4  xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate_SetStand4Pint)
    __arm_cp.2_2                             0x08003d3c   Number         4  xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate_SetStand4Pint)
    [Anonymous Symbol]                       0x08003d40   Section        0  dma_book.o(.text._Buffer_Show)
    [Anonymous Symbol]                       0x08003d5c   Section        0  dma_book.o(.text._Buffercmp)
    [Anonymous Symbol]                       0x08003d7a   Section        0  dma_book.o(.text._DMA_Config)
    [Anonymous Symbol]                       0x08003dd0   Section        0  dma_book.o(.text._DMA_RAM_TO_USART)
    __arm_cp.5_1                             0x08003e40   Number         4  dma_book.o(.text._DMA_RAM_TO_USART)
    __arm_cp.5_2                             0x08003e44   Number         4  dma_book.o(.text._DMA_RAM_TO_USART)
    __arm_cp.5_3                             0x08003e48   Number         4  dma_book.o(.text._DMA_RAM_TO_USART)
    [Anonymous Symbol]                       0x08003e70   Section        0  dma_book.o(.text._DMA_ROM_TO_RAM)
    __arm_cp.4_1                             0x08003ee4   Number         4  dma_book.o(.text._DMA_ROM_TO_RAM)
    __arm_cp.4_2                             0x08003ee8   Number         4  dma_book.o(.text._DMA_ROM_TO_RAM)
    __arm_cp.4_3                             0x08003eec   Number         4  dma_book.o(.text._DMA_ROM_TO_RAM)
    [Anonymous Symbol]                       0x08003f20   Section        0  i2c_book.o(.text._I2C_EE_Init)
    __arm_cp.0_0                             0x08003f7c   Number         4  i2c_book.o(.text._I2C_EE_Init)
    __arm_cp.0_1                             0x08003f80   Number         4  i2c_book.o(.text._I2C_EE_Init)
    __arm_cp.0_2                             0x08003f84   Number         4  i2c_book.o(.text._I2C_EE_Init)
    __arm_cp.0_3                             0x08003f88   Number         4  i2c_book.o(.text._I2C_EE_Init)
    __arm_cp.0_4                             0x08003f8c   Number         4  i2c_book.o(.text._I2C_EE_Init)
    __arm_cp.0_5                             0x08003f90   Number         4  i2c_book.o(.text._I2C_EE_Init)
    [Anonymous Symbol]                       0x08003f94   Section        0  dma_book.o(.text._USART_DMA_Config)
    check_fs                                 0x08003fe5   Thumb Code   104  ff.o(.text.check_fs)
    [Anonymous Symbol]                       0x08003fe4   Section        0  ff.o(.text.check_fs)
    __arm_cp.46_0                            0x08004048   Number         4  ff.o(.text.check_fs)
    chk_chr                                  0x0800404d   Thumb Code    14  ff.o(.text.chk_chr)
    [Anonymous Symbol]                       0x0800404c   Section        0  ff.o(.text.chk_chr)
    [Anonymous Symbol]                       0x0800405a   Section        0  ff.o(.text.clust2sect)
    create_chain                             0x08004071   Thumb Code   168  ff.o(.text.create_chain)
    [Anonymous Symbol]                       0x08004070   Section        0  ff.o(.text.create_chain)
    dir_find                                 0x08004119   Thumb Code   324  ff.o(.text.dir_find)
    [Anonymous Symbol]                       0x08004118   Section        0  ff.o(.text.dir_find)
    dir_next                                 0x0800425d   Thumb Code   268  ff.o(.text.dir_next)
    [Anonymous Symbol]                       0x0800425c   Section        0  ff.o(.text.dir_next)
    __arm_cp.28_0                            0x08004360   Number         4  ff.o(.text.dir_next)
    __arm_cp.28_1                            0x08004364   Number         4  ff.o(.text.dir_next)
    dir_read                                 0x08004369   Thumb Code   252  ff.o(.text.dir_read)
    [Anonymous Symbol]                       0x08004368   Section        0  ff.o(.text.dir_read)
    __arm_cp.26_0                            0x08004460   Number         4  ff.o(.text.dir_read)
    dir_register                             0x08004465   Thumb Code   608  ff.o(.text.dir_register)
    [Anonymous Symbol]                       0x08004464   Section        0  ff.o(.text.dir_register)
    __arm_cp.9_0                             0x080046bc   Number         4  ff.o(.text.dir_register)
    __arm_cp.9_1                             0x080046c0   Number         4  ff.o(.text.dir_register)
    dir_remove                               0x080046c5   Thumb Code   102  ff.o(.text.dir_remove)
    [Anonymous Symbol]                       0x080046c4   Section        0  ff.o(.text.dir_remove)
    dir_sdi                                  0x0800472b   Thumb Code   152  ff.o(.text.dir_sdi)
    [Anonymous Symbol]                       0x0800472a   Section        0  ff.o(.text.dir_sdi)
    [Anonymous Symbol]                       0x080047c2   Section        0  diskio.o(.text.disk_initialize)
    [Anonymous Symbol]                       0x080047de   Section        0  diskio.o(.text.disk_ioctl)
    [Anonymous Symbol]                       0x08004806   Section        0  diskio.o(.text.disk_read)
    [Anonymous Symbol]                       0x08004828   Section        0  diskio.o(.text.disk_status)
    __arm_cp.0_0                             0x08004840   Number         4  diskio.o(.text.disk_status)
    [Anonymous Symbol]                       0x08004844   Section        0  diskio.o(.text.disk_write)
    [Anonymous Symbol]                       0x08004870   Section        0  ff.o(.text.f_close)
    [Anonymous Symbol]                       0x0800488c   Section        0  ff.o(.text.f_closedir)
    [Anonymous Symbol]                       0x0800489e   Section        0  ff.o(.text.f_getfree)
    [Anonymous Symbol]                       0x08004982   Section        0  ff.o(.text.f_lseek)
    [Anonymous Symbol]                       0x08004ae2   Section        0  ff.o(.text.f_mkdir)
    [Anonymous Symbol]                       0x08004c40   Section        0  ff.o(.text.f_mkfs)
    __arm_cp.40_0                            0x080051a0   Number         4  ff.o(.text.f_mkfs)
    __arm_cp.40_1                            0x080051a4   Number         4  ff.o(.text.f_mkfs)
    __arm_cp.40_2                            0x080051a8   Number         4  ff.o(.text.f_mkfs)
    __arm_cp.40_4                            0x080051b8   Number         4  ff.o(.text.f_mkfs)
    __arm_cp.40_6                            0x080051d0   Number         4  ff.o(.text.f_mkfs)
    __arm_cp.40_8                            0x080051e8   Number         4  ff.o(.text.f_mkfs)
    __arm_cp.40_9                            0x080051ec   Number         4  ff.o(.text.f_mkfs)
    [Anonymous Symbol]                       0x080051f0   Section        0  ff.o(.text.f_mount)
    __arm_cp.4_0                             0x08005238   Number         4  ff.o(.text.f_mount)
    [Anonymous Symbol]                       0x0800523c   Section        0  ff.o(.text.f_open)
    [Anonymous Symbol]                       0x08005374   Section        0  ff.o(.text.f_opendir)
    [Anonymous Symbol]                       0x080053d8   Section        0  ff.o(.text.f_printf)
    [Anonymous Symbol]                       0x08005604   Section        0  ff.o(.text.f_read)
    [Anonymous Symbol]                       0x08005762   Section        0  ff.o(.text.f_readdir)
    [Anonymous Symbol]                       0x080057b8   Section        0  ff.o(.text.f_rename)
    [Anonymous Symbol]                       0x080058b2   Section        0  ff.o(.text.f_stat)
    [Anonymous Symbol]                       0x080058f4   Section        0  ff.o(.text.f_sync)
    [Anonymous Symbol]                       0x08005980   Section        0  ff.o(.text.f_unlink)
    [Anonymous Symbol]                       0x08005a16   Section        0  ff.o(.text.f_write)
    [Anonymous Symbol]                       0x08005ba0   Section        0  cc936.o(.text.ff_convert)
    __arm_cp.0_0                             0x08005bec   Number         4  cc936.o(.text.ff_convert)
    __arm_cp.0_1                             0x08005bf0   Number         4  cc936.o(.text.ff_convert)
    [Anonymous Symbol]                       0x08005bf4   Section        0  cc936.o(.text.ff_wtoupper)
    __arm_cp.1_0                             0x08005c38   Number         4  cc936.o(.text.ff_wtoupper)
    __arm_cp.1_1                             0x08005c3c   Number         4  cc936.o(.text.ff_wtoupper)
    [Anonymous Symbol]                       0x08005c40   Section        0  fatfs_book.o(.text.file_check)
    __arm_cp.4_1                             0x08005cfc   Number         4  fatfs_book.o(.text.file_check)
    __arm_cp.4_3                             0x08005d14   Number         4  fatfs_book.o(.text.file_check)
    __arm_cp.4_4                             0x08005d18   Number         4  fatfs_book.o(.text.file_check)
    find_volume                              0x08005d71   Thumb Code   596  ff.o(.text.find_volume)
    [Anonymous Symbol]                       0x08005d70   Section        0  ff.o(.text.find_volume)
    __arm_cp.6_0                             0x08005fb8   Number         4  ff.o(.text.find_volume)
    __arm_cp.6_1                             0x08005fbc   Number         4  ff.o(.text.find_volume)
    __arm_cp.6_2                             0x08005fc0   Number         4  ff.o(.text.find_volume)
    [Anonymous Symbol]                       0x08005fc4   Section        0  main.o(.text.fn_DMA_show_Init)
    __arm_cp.3_1                             0x08006000   Number         4  main.o(.text.fn_DMA_show_Init)
    __arm_cp.3_2                             0x08006004   Number         4  main.o(.text.fn_DMA_show_Init)
    __arm_cp.3_3                             0x08006008   Number         4  main.o(.text.fn_DMA_show_Init)
    [Anonymous Symbol]                       0x08006020   Section        0  exit_book.o(.text.fn_EXTI_GPIO_Config)
    [Anonymous Symbol]                       0x08006068   Section        0  main.o(.text.fn_FatFs_Document_Init)
    __arm_cp.7_0                             0x080060a4   Number         4  main.o(.text.fn_FatFs_Document_Init)
    __arm_cp.7_1                             0x080060a8   Number         4  main.o(.text.fn_FatFs_Document_Init)
    __arm_cp.7_4                             0x080060c4   Number         4  main.o(.text.fn_FatFs_Document_Init)
    [Anonymous Symbol]                       0x080060c8   Section        0  rcc_book.o(.text.fn_HRCC_SetSystic)
    [Anonymous Symbol]                       0x08006134   Section        0  main.o(.text.fn_I2C_EE_Init)
    __arm_cp.4_1                             0x08006178   Number         4  main.o(.text.fn_I2C_EE_Init)
    __arm_cp.4_2                             0x0800617c   Number         4  main.o(.text.fn_I2C_EE_Init)
    [Anonymous Symbol]                       0x08006198   Section        0  main.o(.text.fn_I2C_EE_Soft_Init)
    __arm_cp.5_1                             0x080061e0   Number         4  main.o(.text.fn_I2C_EE_Soft_Init)
    __arm_cp.5_2                             0x080061e4   Number         4  main.o(.text.fn_I2C_EE_Soft_Init)
    [Anonymous Symbol]                       0x08006204   Section        0  key_book.o(.text.fn_Key_GPIO_Config)
    [Anonymous Symbol]                       0x08006224   Section        0  key_book.o(.text.fn_Key_Init)
    __arm_cp.1_0                             0x0800624c   Number         4  key_book.o(.text.fn_Key_Init)
    __arm_cp.1_1                             0x08006250   Number         4  key_book.o(.text.fn_Key_Init)
    [Anonymous Symbol]                       0x08006254   Section        0  led_book.o(.text.fn_LED_ALL_OFF)
    __arm_cp.2_1                             0x08006274   Number         4  led_book.o(.text.fn_LED_ALL_OFF)
    [Anonymous Symbol]                       0x08006278   Section        0  led_book.o(.text.fn_LED_Corporate)
    [Anonymous Symbol]                       0x080062b0   Section        0  main.o(.text.fn_LED_Flash_Init)
    __arm_cp.1_1                             0x08006320   Number         4  main.o(.text.fn_LED_Flash_Init)
    __arm_cp.1_2                             0x08006324   Number         4  main.o(.text.fn_LED_Flash_Init)
    __arm_cp.1_3                             0x08006328   Number         4  main.o(.text.fn_LED_Flash_Init)
    __arm_cp.1_4                             0x0800632c   Number         4  main.o(.text.fn_LED_Flash_Init)
    [Anonymous Symbol]                       0x08006330   Section        0  led_book.o(.text.fn_LED_GPIO_Config)
    [Anonymous Symbol]                       0x08006360   Section        0  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_0                             0x080065a4   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_1                             0x080065a8   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_2                             0x080065ac   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_3                             0x080065b0   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_4                             0x080065b4   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_5                             0x080065b8   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_6                             0x080065bc   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_7                             0x080065c0   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_8                             0x080065c4   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_10                            0x080065dc   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_13                            0x08006608   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_14                            0x0800660c   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_15                            0x08006610   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_16                            0x08006614   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    __arm_cp.2_17                            0x08006618   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    [Anonymous Symbol]                       0x0800662c   Section        0  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_0                             0x080068b0   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_1                             0x080068b4   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_2                             0x080068b8   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_3                             0x080068bc   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_4                             0x080068c0   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_5                             0x080068c4   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_6                             0x080068c8   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_7                             0x080068cc   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_9                             0x080068e0   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_11                            0x080068ec   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_15                            0x08006934   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_16                            0x08006938   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_17                            0x0800693c   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_18                            0x08006940   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_19                            0x08006944   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_20                            0x08006948   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    __arm_cp.3_21                            0x0800694c   Number         4  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    [Anonymous Symbol]                       0x08006960   Section        0  led_book.o(.text.fn_Led_Init)
    __arm_cp.1_1                             0x08006998   Number         4  led_book.o(.text.fn_Led_Init)
    [Anonymous Symbol]                       0x0800699c   Section        0  exit_book.o(.text.fn_NVIC_Config)
    __arm_cp.1_0                             0x080069c0   Number         4  exit_book.o(.text.fn_NVIC_Config)
    [Anonymous Symbol]                       0x080069c4   Section        0  rcc_book.o(.text.fn_RCC_Init)
    [Anonymous Symbol]                       0x080069cc   Section        0  main.o(.text.fn_SPI_FLASH_Soft_Init)
    __arm_cp.6_1                             0x08006a6c   Number         4  main.o(.text.fn_SPI_FLASH_Soft_Init)
    __arm_cp.6_3                             0x08006a84   Number         4  main.o(.text.fn_SPI_FLASH_Soft_Init)
    __arm_cp.6_5                             0x08006a9c   Number         4  main.o(.text.fn_SPI_FLASH_Soft_Init)
    [Anonymous Symbol]                       0x08006acc   Section        0  main.o(.text.fn_SRAM_Init)
    __arm_cp.8_1                             0x08006b1c   Number         4  main.o(.text.fn_SRAM_Init)
    [Anonymous Symbol]                       0x08006b80   Section        0  systick_book.o(.text.fn_SysTick_delay_decrement)
    __arm_cp.2_1                             0x08006ba8   Number         4  systick_book.o(.text.fn_SysTick_delay_decrement)
    __arm_cp.2_2                             0x08006bac   Number         4  systick_book.o(.text.fn_SysTick_delay_decrement)
    [Anonymous Symbol]                       0x08006bb0   Section        0  systick_book.o(.text.fn_Systick_Delay)
    [Anonymous Symbol]                       0x08006c1c   Section        0  systick_book.o(.text.fn_Systick_Delay_Handler_set)
    __arm_cp.1_0                             0x08006c74   Number         4  systick_book.o(.text.fn_Systick_Delay_Handler_set)
    __arm_cp.1_1                             0x08006c78   Number         4  systick_book.o(.text.fn_Systick_Delay_Handler_set)
    __arm_cp.1_2                             0x08006c7c   Number         4  systick_book.o(.text.fn_Systick_Delay_Handler_set)
    __arm_cp.1_3                             0x08006c80   Number         4  systick_book.o(.text.fn_Systick_Delay_Handler_set)
    __arm_cp.1_4                             0x08006c84   Number         4  systick_book.o(.text.fn_Systick_Delay_Handler_set)
    [Anonymous Symbol]                       0x08006c88   Section        0  usart_book.o(.text.fn_USART_Config)
    __arm_cp.1_1                             0x08006ce0   Number         4  usart_book.o(.text.fn_USART_Config)
    [Anonymous Symbol]                       0x08006ce4   Section        0  usart_book.o(.text.fn_USART_IO_Config)
    __arm_cp.0_0                             0x08006d0c   Number         4  usart_book.o(.text.fn_USART_IO_Config)
    __arm_cp.0_2                             0x08006d10   Number         4  usart_book.o(.text.fn_USART_IO_Config)
    [Anonymous Symbol]                       0x08006d14   Section        0  usart_book.o(.text.fn_USART_Init)
    [Anonymous Symbol]                       0x08006d22   Section        0  usart_book.o(.text.fn_Usart_SendString)
    [Anonymous Symbol]                       0x08006d4a   Section        0  usart_book.o(.text.fn_Usart_Send_Byte)
    [Anonymous Symbol]                       0x08006d60   Section        0  key_book.o(.text.fn_key_Check)
    [Anonymous Symbol]                       0x08006d70   Section        0  key_book.o(.text.fn_key_Effect)
    __arm_cp.3_1                             0x08006da4   Number         4  key_book.o(.text.fn_key_Effect)
    [Anonymous Symbol]                       0x08006da8   Section        0  key_book.o(.text.fn_key_judge)
    __arm_cp.2_0                             0x08006e28   Number         4  key_book.o(.text.fn_key_judge)
    __arm_cp.2_1                             0x08006e2c   Number         4  key_book.o(.text.fn_key_judge)
    [Anonymous Symbol]                       0x08006e30   Section        0  main.o(.text.fn_usart_show_Init)
    __arm_cp.2_0                             0x08006e50   Number         4  main.o(.text.fn_usart_show_Init)
    follow_path                              0x08006e79   Thumb Code   720  ff.o(.text.follow_path)
    [Anonymous Symbol]                       0x08006e78   Section        0  ff.o(.text.follow_path)
    [Anonymous Symbol]                       0x08007148   Section        0  usart_book.o(.text.fputc)
    __arm_cp.6_0                             0x08007168   Number         4  usart_book.o(.text.fputc)
    [Anonymous Symbol]                       0x0800716c   Section        0  ff.o(.text.get_fat)
    [Anonymous Symbol]                       0x0800725c   Section        0  diskio.o(.text.get_fattime)
    __arm_cp.5_0                             0x08007260   Number         4  diskio.o(.text.get_fattime)
    get_fileinfo                             0x08007265   Thumb Code   200  ff.o(.text.get_fileinfo)
    [Anonymous Symbol]                       0x08007264   Section        0  ff.o(.text.get_fileinfo)
    get_ldnumber                             0x0800732d   Thumb Code    66  ff.o(.text.get_ldnumber)
    [Anonymous Symbol]                       0x0800732c   Section        0  ff.o(.text.get_ldnumber)
    ld_clust                                 0x0800736f   Thumb Code    24  ff.o(.text.ld_clust)
    [Anonymous Symbol]                       0x0800736e   Section        0  ff.o(.text.ld_clust)
    [Anonymous Symbol]                       0x08007388   Section        0  main.o(.text.main)
    __arm_cp.0_3                             0x0800747c   Number         4  main.o(.text.main)
    __arm_cp.0_4                             0x08007480   Number         4  main.o(.text.main)
    mem_cpy                                  0x08007485   Thumb Code    16  ff.o(.text.mem_cpy)
    [Anonymous Symbol]                       0x08007484   Section        0  ff.o(.text.mem_cpy)
    mem_set                                  0x08007495   Thumb Code    12  ff.o(.text.mem_set)
    [Anonymous Symbol]                       0x08007494   Section        0  ff.o(.text.mem_set)
    move_window                              0x080074a1   Thumb Code    56  ff.o(.text.move_window)
    [Anonymous Symbol]                       0x080074a0   Section        0  ff.o(.text.move_window)
    [Anonymous Symbol]                       0x080074d8   Section        0  ff.o(.text.put_fat)
    putc_bfd                                 0x080075f1   Thumb Code    54  ff.o(.text.putc_bfd)
    [Anonymous Symbol]                       0x080075f0   Section        0  ff.o(.text.putc_bfd)
    remove_chain                             0x08007627   Thumb Code    86  ff.o(.text.remove_chain)
    [Anonymous Symbol]                       0x08007626   Section        0  ff.o(.text.remove_chain)
    scan_file                                0x0800767d   Thumb Code   184  fatfs_book.o(.text.scan_file)
    [Anonymous Symbol]                       0x0800767c   Section        0  fatfs_book.o(.text.scan_file)
    __arm_cp.6_0                             0x08007718   Number         4  fatfs_book.o(.text.scan_file)
    st_clust                                 0x08007735   Thumb Code    12  ff.o(.text.st_clust)
    [Anonymous Symbol]                       0x08007734   Section        0  ff.o(.text.st_clust)
    sum_sfn                                  0x08007741   Thumb Code    28  ff.o(.text.sum_sfn)
    [Anonymous Symbol]                       0x08007740   Section        0  ff.o(.text.sum_sfn)
    sync_fs                                  0x0800775d   Thumb Code   116  ff.o(.text.sync_fs)
    [Anonymous Symbol]                       0x0800775c   Section        0  ff.o(.text.sync_fs)
    __arm_cp.19_0                            0x080077c8   Number         4  ff.o(.text.sync_fs)
    __arm_cp.19_1                            0x080077cc   Number         4  ff.o(.text.sync_fs)
    sync_window                              0x080077d1   Thumb Code    76  ff.o(.text.sync_window)
    [Anonymous Symbol]                       0x080077d0   Section        0  ff.o(.text.sync_window)
    validate                                 0x0800781d   Thumb Code    42  ff.o(.text.validate)
    [Anonymous Symbol]                       0x0800781c   Section        0  ff.o(.text.validate)
    i.__0printf                              0x08007848   Section        0  printfa.o(i.__0printf)
    i.__0sprintf                             0x08007868   Section        0  printfa.o(i.__0sprintf)
    i.__scatterload_copy                     0x08007890   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x0800789e   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x080078a0   Section       14  handlers.o(i.__scatterload_zeroinit)
    _fp_digits                               0x080078b1   Thumb Code   366  printfa.o(i._fp_digits)
    i._fp_digits                             0x080078b0   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x08007a35   Thumb Code  1744  printfa.o(i._printf_core)
    i._printf_core                           0x08007a34   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x08008111   Thumb Code    36  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x08008110   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x08008135   Thumb Code    46  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x08008134   Section        0  printfa.o(i._printf_pre_padding)
    _sputc                                   0x08008163   Thumb Code    10  printfa.o(i._sputc)
    i._sputc                                 0x08008162   Section        0  printfa.o(i._sputc)
    i.putchar                                0x0800816c   Section        0  putchar.o(i.putchar)
    i.puts                                   0x08008178   Section        0  puts.o(i.puts)
    ADCPrescTable                            0x0800819c   Data           4  stm32f10x_rcc.o(.rodata.ADCPrescTable)
    [Anonymous Symbol]                       0x0800819c   Section        0  stm32f10x_rcc.o(.rodata.ADCPrescTable)
    APBAHBPrescTable                         0x080081a0   Data          16  stm32f10x_rcc.o(.rodata.APBAHBPrescTable)
    [Anonymous Symbol]                       0x080081a0   Section        0  stm32f10x_rcc.o(.rodata.APBAHBPrescTable)
    LfnOfs                                   0x0800bd10   Data          13  ff.o(.rodata.LfnOfs)
    [Anonymous Symbol]                       0x0800bd10   Section        0  ff.o(.rodata.LfnOfs)
    f_mkfs.cst                               0x0800bd70   Data          22  ff.o(.rodata.f_mkfs.cst)
    [Anonymous Symbol]                       0x0800bd70   Section        0  ff.o(.rodata.f_mkfs.cst)
    ff_wtoupper.lower                        0x0800bd86   Data         988  cc936.o(.rodata.ff_wtoupper.lower)
    [Anonymous Symbol]                       0x0800bd86   Section        0  cc936.o(.rodata.ff_wtoupper.lower)
    ff_wtoupper.upper                        0x0800c162   Data         988  cc936.o(.rodata.ff_wtoupper.upper)
    [Anonymous Symbol]                       0x0800c162   Section        0  cc936.o(.rodata.ff_wtoupper.upper)
    oem2uni                                  0x0800c53e   Data       87172  cc936.o(.rodata.oem2uni)
    [Anonymous Symbol]                       0x0800c53e   Section        0  cc936.o(.rodata.oem2uni)
    .L.str.2                                 0x080219c2   Data           3  i2c_book.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080219c2   Section        0  i2c_book.o(.rodata.str1.1)
    .Lstr.24                                 0x080219c5   Data          23  i2c_soft_book.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080219c5   Section        0  i2c_soft_book.o(.rodata.str1.1)
    .L.str.5                                 0x080219dc   Data           5  i2c_soft_book.o(.rodata.str1.1)
    .L.str.1                                 0x080219dd   Data           4  i2c_soft_book.o(.rodata.str1.1)
    .L.str.5                                 0x080219e1   Data          38  fatfs_book.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080219e1   Section        0  fatfs_book.o(.rodata.str1.1)
    .L.str.8                                 0x08021a07   Data          52  fatfs_book.o(.rodata.str1.1)
    .L.str.18                                0x08021a3b   Data          28  fatfs_book.o(.rodata.str1.1)
    .L.str.11                                0x08021a57   Data          17  fatfs_book.o(.rodata.str1.1)
    .L.str.20                                0x08021a68   Data          15  fatfs_book.o(.rodata.str1.1)
    .Lstr.36                                 0x08021a77   Data          36  fatfs_book.o(.rodata.str1.1)
    .Lstr.32                                 0x08021a9b   Data          55  fatfs_book.o(.rodata.str1.1)
    .Lstr.31                                 0x08021ad2   Data          38  fatfs_book.o(.rodata.str1.1)
    .Lstr.34                                 0x08021af8   Data          32  fatfs_book.o(.rodata.str1.1)
    .Lstr.30                                 0x08021b18   Data          38  fatfs_book.o(.rodata.str1.1)
    .Lstr.27                                 0x08021b3c   Data           2  fatfs_book.o(.rodata.str1.1)
    .Lstr.38                                 0x08021b3e   Data          28  fatfs_book.o(.rodata.str1.1)
    .L.str.4                                 0x08021b5a   Data          21  sram_book.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08021b5a   Section        0  sram_book.o(.rodata.str1.1)
    .L.str.14                                0x08021b6f   Data          12  lcd_pagehtml_book.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08021b6f   Section        0  lcd_pagehtml_book.o(.rodata.str1.1)
    .L.str.13                                0x08021b7b   Data          13  lcd_pagehtml_book.o(.rodata.str1.1)
    .L.str.12                                0x08021b88   Data          13  lcd_pagehtml_book.o(.rodata.str1.1)
    .L.str.4                                 0x08021b95   Data           6  lcd_pagehtml_book.o(.rodata.str1.1)
    .L.str.18                                0x08021b9b   Data           3  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08021b9b   Section        0  main.o(.rodata.str1.1)
    .L.str.19                                0x08021b9e   Data          13  main.o(.rodata.str1.1)
    .L.str.22                                0x08021bab   Data          19  main.o(.rodata.str1.1)
    f_mkfs.vst                               0x08021bbe   Data          22  ff.o(.rodata.str2.2)
    [Anonymous Symbol]                       0x08021bbe   Section        0  ff.o(.rodata.str2.2)
    uni2oem                                  0x08021bd4   Data       87172  cc936.o(.rodata.uni2oem)
    [Anonymous Symbol]                       0x08021bd4   Section        0  cc936.o(.rodata.uni2oem)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    [Anonymous Symbol]                       0x20000004   Section        0  lcd_book.o(.data..L_MergedGlobals)
    SPITimeout                               0x20000028   Data           4  spi_book.o(.data.SPITimeout)
    [Anonymous Symbol]                       0x20000028   Section        0  spi_book.o(.data.SPITimeout)
    writeData                                0x200008f0   Data           8  main.o(.data.writeData)
    [Anonymous Symbol]                       0x200008f0   Section        0  main.o(.data.writeData)
    writeData2                               0x200008f8   Data           8  main.o(.data.writeData2)
    [Anonymous Symbol]                       0x200008f8   Section        0  main.o(.data.writeData2)
    [Anonymous Symbol]                       0x20000900   Section        0  key_book.o(.bss..L_MergedGlobals)
    count_key                                0x20000904   Data           2  key_book.o(.bss..L_MergedGlobals)
    _SysTick_delay                           0x20000908   Data           4  systick_book.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000908   Section        0  systick_book.o(.bss..L_MergedGlobals)
    SysTick_delay                            0x2000090c   Data           4  systick_book.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000910   Section        0  dma_book.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000918   Section        0  fatfs_book.o(.bss..L_MergedGlobals)
    file_check.fno                           0x20000920   Data          32  fatfs_book.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000940   Section        0  lcd_draw_book.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000944   Section        0  xpt2046_lcd_function_book.o(.bss..L_MergedGlobals)
    XPT2046_TouchDetect.touch_state          0x20000945   Data           1  xpt2046_lcd_function_book.o(.bss..L_MergedGlobals)
    XPT2046_TouchDetect.count_Touch          0x20000946   Data           1  xpt2046_lcd_function_book.o(.bss..L_MergedGlobals)
    Fsid                                     0x20000988   Data           2  ff.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000988   Section        0  ff.o(.bss..L_MergedGlobals)
    FatFs                                    0x2000098c   Data           8  ff.o(.bss..L_MergedGlobals)
    GetGBKCode_from_EXFlash.everRead         0x20000994   Data           1  fonts.o(.bss.GetGBKCode_from_EXFlash.everRead)
    [Anonymous Symbol]                       0x20000994   Section        0  fonts.o(.bss.GetGBKCode_from_EXFlash.everRead)
    I2CTimeout                               0x20000996   Data           2  i2c_book.o(.bss.I2CTimeout)
    [Anonymous Symbol]                       0x20000996   Section        0  i2c_book.o(.bss.I2CTimeout)
    ReadData                                 0x20000998   Data           7  main.o(.bss.ReadData)
    [Anonymous Symbol]                       0x20000998   Section        0  main.o(.bss.ReadData)
    Read_SPI_Data                            0x2000099f   Data        4096  main.o(.bss.Read_SPI_Data)
    [Anonymous Symbol]                       0x2000099f   Section        0  main.o(.bss.Read_SPI_Data)
    scan_file.lfn                            0x20003a44   Data         511  fatfs_book.o(.bss.scan_file.lfn)
    [Anonymous Symbol]                       0x20003a44   Section        0  fatfs_book.o(.bss.scan_file.lfn)
    write_SPI_Data                           0x20003c44   Data        4096  main.o(.bss.write_SPI_Data)
    [Anonymous Symbol]                       0x20003c44   Section        0  main.o(.bss.write_SPI_Data)
    STACK                                    0x20009048   Section     1024  startup_stm32f10x_hd.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x00000130   Number         0  startup_stm32f10x_hd.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_hd.o(RESET)
    __Vectors_End                            0x08000130   Data           0  startup_stm32f10x_hd.o(RESET)
    __main                                   0x08000131   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x08000131   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x08000135   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x08000139   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x08000139   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x08000139   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x08000139   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x08000141   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x08000141   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x08000145   Thumb Code     8  startup_stm32f10x_hd.o(.text)
    ADC1_2_IRQHandler                        0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    ADC3_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    CAN1_RX1_IRQHandler                      0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    CAN1_SCE_IRQHandler                      0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel1_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel2_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel3_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel4_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel5_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel6_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA1_Channel7_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA2_Channel1_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA2_Channel2_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA2_Channel3_IRQHandler                 0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    DMA2_Channel4_5_IRQHandler               0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI1_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI2_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI3_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI4_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI9_5_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    FLASH_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    FSMC_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C1_ER_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C1_EV_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C2_ER_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C2_EV_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    PVD_IRQHandler                           0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    RCC_IRQHandler                           0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    RTCAlarm_IRQHandler                      0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    RTC_IRQHandler                           0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SDIO_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SPI1_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SPI2_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SPI3_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TAMPER_IRQHandler                        0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_BRK_IRQHandler                      0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_CC_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_UP_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM2_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM3_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM4_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM5_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM6_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM7_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_BRK_IRQHandler                      0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_CC_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_UP_IRQHandler                       0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    UART4_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    UART5_IRQHandler                         0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USART2_IRQHandler                        0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USART3_IRQHandler                        0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USBWakeUp_IRQHandler                     0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    WWDG_IRQHandler                          0x0800015f   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    __aeabi_memset                           0x08000169   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x08000169   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x08000169   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x08000177   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x08000177   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x08000177   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x0800017b   Thumb Code    18  memseta.o(.text)
    strlen                                   0x0800018d   Thumb Code    14  strlen.o(.text)
    strcpy                                   0x0800019b   Thumb Code    18  strcpy.o(.text)
    __aeabi_fadd                             0x080001ad   Thumb Code   164  fadd.o(.text)
    __aeabi_fsub                             0x08000251   Thumb Code     6  fadd.o(.text)
    __aeabi_frsub                            0x08000257   Thumb Code     6  fadd.o(.text)
    __aeabi_fmul                             0x0800025d   Thumb Code   100  fmul.o(.text)
    __aeabi_fdiv                             0x080002c1   Thumb Code   124  fdiv.o(.text)
    __aeabi_i2f                              0x0800033d   Thumb Code    18  fflti.o(.text)
    __aeabi_f2iz                             0x0800034f   Thumb Code    50  ffixi.o(.text)
    __aeabi_f2d                              0x08000381   Thumb Code    38  f2d.o(.text)
    __aeabi_uidiv                            0x080003a7   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x080003a7   Thumb Code    44  uidiv.o(.text)
    __aeabi_uldivmod                         0x080003d3   Thumb Code    98  uldiv.o(.text)
    __I$use$fp                               0x08000435   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x08000435   Thumb Code    18  fepilogue.o(.text)
    _float_epilogue                          0x08000447   Thumb Code    92  fepilogue.o(.text)
    __aeabi_dadd                             0x080004a3   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x080005e5   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x080005eb   Thumb Code     6  dadd.o(.text)
    __aeabi_dmul                             0x080005f1   Thumb Code   228  dmul.o(.text)
    __aeabi_ddiv                             0x080006d5   Thumb Code   222  ddiv.o(.text)
    __aeabi_d2ulz                            0x080007b3   Thumb Code    48  dfixul.o(.text)
    __aeabi_cdrcmple                         0x080007e5   Thumb Code    48  cdrcmple.o(.text)
    __scatterload                            0x08000815   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000815   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x08000839   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x08000839   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x08000857   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x08000857   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x08000877   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x08000877   Thumb Code     0  llsshr.o(.text)
    _double_round                            0x0800089b   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x080008b9   Thumb Code   156  depilogue.o(.text)
    __decompress                             0x08000955   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x08000955   Thumb Code    58  __dczerorl.o(.text)
    BusFault_Handler                         0x0800098f   Thumb Code     2  stm32f10x_it.o(.text.BusFault_Handler)
    DMA_Cmd                                  0x08000991   Thumb Code    24  stm32f10x_dma.o(.text.DMA_Cmd)
    DMA_GetFlagStatus                        0x080009a9   Thumb Code    24  stm32f10x_dma.o(.text.DMA_GetFlagStatus)
    DMA_Init                                 0x080009c1   Thumb Code    70  stm32f10x_dma.o(.text.DMA_Init)
    DebugMon_Handler                         0x08000a07   Thumb Code     2  stm32f10x_it.o(.text.DebugMon_Handler)
    Display_Char_test                        0x08000a09   Thumb Code   104  lcd_pagehtml_book.o(.text.Display_Char_test)
    EXTI0_IRQHandler                         0x08000b75   Thumb Code    52  exit_book.o(.text.EXTI0_IRQHandler)
    EXTI15_10_IRQHandler                     0x08000ba9   Thumb Code    56  exit_book.o(.text.EXTI15_10_IRQHandler)
    EXTI_ClearITPendingBit                   0x08000be1   Thumb Code    12  stm32f10x_exti.o(.text.EXTI_ClearITPendingBit)
    EXTI_GetITStatus                         0x08000bed   Thumb Code    24  stm32f10x_exti.o(.text.EXTI_GetITStatus)
    EXTI_Init                                0x08000c05   Thumb Code    96  stm32f10x_exti.o(.text.EXTI_Init)
    FLASH_PrefetchBufferCmd                  0x08000c65   Thumb Code    20  stm32f10x_flash.o(.text.FLASH_PrefetchBufferCmd)
    FLASH_SetLatency                         0x08000c79   Thumb Code    20  stm32f10x_flash.o(.text.FLASH_SetLatency)
    FSMC_NORSRAMCmd                          0x08000c8d   Thumb Code    36  stm32f10x_fsmc.o(.text.FSMC_NORSRAMCmd)
    FSMC_NORSRAMInit                         0x08000cb1   Thumb Code   176  stm32f10x_fsmc.o(.text.FSMC_NORSRAMInit)
    FatFs_Close_flash                        0x08000d61   Thumb Code    32  fatfs_book.o(.text.FatFs_Close_flash)
    FatFs_document_Text                      0x08000d81   Thumb Code   280  fatfs_book.o(.text.FatFs_document_Text)
    FatFs_document_set_content               0x08000e99   Thumb Code   244  fatfs_book.o(.text.FatFs_document_set_content)
    FatFs_equipment_flash                    0x08000f8d   Thumb Code   328  fatfs_book.o(.text.FatFs_equipment_flash)
    GPIO_EXTILineConfig                      0x080010d5   Thumb Code    40  stm32f10x_gpio.o(.text.GPIO_EXTILineConfig)
    GPIO_Init                                0x080010fd   Thumb Code   180  stm32f10x_gpio.o(.text.GPIO_Init)
    GPIO_ReadInputDataBit                    0x080011b1   Thumb Code    10  stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit)
    GPIO_ReadOutputDataBit                   0x080011bb   Thumb Code    10  stm32f10x_gpio.o(.text.GPIO_ReadOutputDataBit)
    GPIO_ResetBits                           0x080011c5   Thumb Code     4  stm32f10x_gpio.o(.text.GPIO_ResetBits)
    GPIO_SetBits                             0x080011c9   Thumb Code     4  stm32f10x_gpio.o(.text.GPIO_SetBits)
    GetGBKCode_from_EXFlash                  0x080011cd   Thumb Code    72  fonts.o(.text.GetGBKCode_from_EXFlash)
    HardFault_Handler                        0x08001215   Thumb Code     2  stm32f10x_it.o(.text.HardFault_Handler)
    I2C_AcknowledgeConfig                    0x08001217   Thumb Code    18  stm32f10x_i2c.o(.text.I2C_AcknowledgeConfig)
    I2C_CheckEvent                           0x08001229   Thumb Code    22  stm32f10x_i2c.o(.text.I2C_CheckEvent)
    I2C_ClearFlag                            0x0800123f   Thumb Code     6  stm32f10x_i2c.o(.text.I2C_ClearFlag)
    I2C_Cmd                                  0x08001245   Thumb Code    18  stm32f10x_i2c.o(.text.I2C_Cmd)
    I2C_GenerateSTART                        0x080012a5   Thumb Code    18  stm32f10x_i2c.o(.text.I2C_GenerateSTART)
    I2C_GenerateSTOP                         0x080012b7   Thumb Code    18  stm32f10x_i2c.o(.text.I2C_GenerateSTOP)
    I2C_GetFlagStatus                        0x080012c9   Thumb Code    52  stm32f10x_i2c.o(.text.I2C_GetFlagStatus)
    I2C_Init                                 0x080012fd   Thumb Code   188  stm32f10x_i2c.o(.text.I2C_Init)
    I2C_ReadRegister                         0x080013b9   Thumb Code    22  stm32f10x_i2c.o(.text.I2C_ReadRegister)
    I2C_Read_fun                             0x080013d1   Thumb Code   508  i2c_book.o(.text.I2C_Read_fun)
    I2C_ReceiveData                          0x080015cd   Thumb Code     6  stm32f10x_i2c.o(.text.I2C_ReceiveData)
    I2C_Send7bitAddress                      0x080015d3   Thumb Code    16  stm32f10x_i2c.o(.text.I2C_Send7bitAddress)
    I2C_SendData                             0x08001639   Thumb Code     4  stm32f10x_i2c.o(.text.I2C_SendData)
    I2C_Soft_Init                            0x0800163d   Thumb Code    20  i2c_soft_book.o(.text.I2C_Soft_Init)
    I2C_Soft_Read_fun                        0x08001651   Thumb Code   420  i2c_soft_book.o(.text.I2C_Soft_Read_fun)
    I2C_Soft_Write_fun                       0x080017f5   Thumb Code   176  i2c_soft_book.o(.text.I2C_Soft_Write_fun)
    I2C_Write_fun                            0x0800195d   Thumb Code   412  i2c_book.o(.text.I2C_Write_fun)
    ILI9341_BackLed_Control                  0x08001af9   Thumb Code    24  lcd_book.o(.text.ILI9341_BackLed_Control)
    ILI9341_Clear                            0x08001b11   Thumb Code    28  lcd_draw_book.o(.text.ILI9341_Clear)
    ILI9341_Delay                            0x08001b2d   Thumb Code    18  lcd_book.o(.text.ILI9341_Delay)
    ILI9341_DispChar_CH                      0x08001b41   Thumb Code   120  lcd_draw_book.o(.text.ILI9341_DispChar_CH)
    ILI9341_DispChar_EN                      0x08001bb9   Thumb Code   128  lcd_draw_book.o(.text.ILI9341_DispChar_EN)
    ILI9341_DispStringLine_EN                0x08001c39   Thumb Code   104  lcd_draw_book.o(.text.ILI9341_DispStringLine_EN)
    ILI9341_DispStringLine_EN_CH             0x08001ca1   Thumb Code   168  lcd_draw_book.o(.text.ILI9341_DispStringLine_EN_CH)
    ILI9341_DispString_CH                    0x08001d49   Thumb Code    84  lcd_draw_book.o(.text.ILI9341_DispString_CH)
    ILI9341_DispString_EN_CH                 0x08001d9d   Thumb Code   172  lcd_draw_book.o(.text.ILI9341_DispString_EN_CH)
    ILI9341_DisplayStringEx                  0x08001e49   Thumb Code   208  lcd_draw_book.o(.text.ILI9341_DisplayStringEx)
    ILI9341_DrawChar_Ex                      0x08001f19   Thumb Code    92  lcd_draw_book.o(.text.ILI9341_DrawChar_Ex)
    ILI9341_DrawCircle                       0x08001f75   Thumb Code   396  lcd_draw_book.o(.text.ILI9341_DrawCircle)
    ILI9341_DrawCross                        0x08002101   Thumb Code    52  lcd_draw_book.o(.text.ILI9341_DrawCross)
    ILI9341_DrawLine                         0x08002135   Thumb Code   158  lcd_draw_book.o(.text.ILI9341_DrawLine)
    ILI9341_DrawRectangle                    0x080021d5   Thumb Code   132  lcd_draw_book.o(.text.ILI9341_DrawRectangle)
    ILI9341_GetPointPixel                    0x08002275   Thumb Code    52  lcd_draw_book.o(.text.ILI9341_GetPointPixel)
    ILI9341_GramScan                         0x080022a9   Thumb Code   128  lcd_book.o(.text.ILI9341_GramScan)
    ILI9341_Init                             0x08002329   Thumb Code   796  lcd_book.o(.text.ILI9341_Init)
    ILI9341_OpenWindow                       0x08002645   Thumb Code    84  lcd_draw_book.o(.text.ILI9341_OpenWindow)
    ILI9341_Read_Data                        0x08002699   Thumb Code     8  lcd_book.o(.text.ILI9341_Read_Data)
    ILI9341_Rst                              0x080026a1   Thumb Code    48  lcd_book.o(.text.ILI9341_Rst)
    ILI9341_SetPointPixel                    0x080026d9   Thumb Code    52  lcd_draw_book.o(.text.ILI9341_SetPointPixel)
    ILI9341_Write_Cmd                        0x0800270d   Thumb Code     8  lcd_book.o(.text.ILI9341_Write_Cmd)
    ILI9341_Write_Data                       0x08002715   Thumb Code     8  lcd_book.o(.text.ILI9341_Write_Data)
    ILI9341_zoomChar                         0x0800271d   Thumb Code   212  lcd_draw_book.o(.text.ILI9341_zoomChar)
    LCD_GetFont                              0x080027f1   Thumb Code     8  lcd_draw_book.o(.text.LCD_GetFont)
    LCD_SetColors                            0x080027f9   Thumb Code     8  lcd_draw_book.o(.text.LCD_SetColors)
    LCD_SetFont                              0x08002801   Thumb Code    12  lcd_draw_book.o(.text.LCD_SetFont)
    LCD_SetForeColor                         0x0800280d   Thumb Code     8  lcd_draw_book.o(.text.LCD_SetForeColor)
    LCD_SetTextColor                         0x08002815   Thumb Code    12  lcd_draw_book.o(.text.LCD_SetTextColor)
    MemManage_Handler                        0x08002821   Thumb Code     2  stm32f10x_it.o(.text.MemManage_Handler)
    NMI_Handler                              0x08002823   Thumb Code     2  stm32f10x_it.o(.text.NMI_Handler)
    NVIC_Init                                0x08002825   Thumb Code    80  misc.o(.text.NVIC_Init)
    NVIC_PriorityGroupConfig                 0x08002875   Thumb Code    20  misc.o(.text.NVIC_PriorityGroupConfig)
    PendSV_Handler                           0x08002889   Thumb Code     2  stm32f10x_it.o(.text.PendSV_Handler)
    RCC_AHBPeriphClockCmd                    0x0800288d   Thumb Code    24  stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd)
    RCC_APB1PeriphClockCmd                   0x080028a5   Thumb Code    24  stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd)
    RCC_APB2PeriphClockCmd                   0x080028bd   Thumb Code    24  stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd)
    RCC_DeInit                               0x080028d5   Thumb Code    60  stm32f10x_rcc.o(.text.RCC_DeInit)
    RCC_GetClocksFreq                        0x08002911   Thumb Code   116  stm32f10x_rcc.o(.text.RCC_GetClocksFreq)
    RCC_GetFlagStatus                        0x08002985   Thumb Code    36  stm32f10x_rcc.o(.text.RCC_GetFlagStatus)
    RCC_GetSYSCLKSource                      0x080029a9   Thumb Code    12  stm32f10x_rcc.o(.text.RCC_GetSYSCLKSource)
    RCC_HCLKConfig                           0x080029b5   Thumb Code    16  stm32f10x_rcc.o(.text.RCC_HCLKConfig)
    RCC_HSEConfig                            0x080029c5   Thumb Code    44  stm32f10x_rcc.o(.text.RCC_HSEConfig)
    RCC_PCLK1Config                          0x080029f1   Thumb Code    16  stm32f10x_rcc.o(.text.RCC_PCLK1Config)
    RCC_PCLK2Config                          0x08002a01   Thumb Code    16  stm32f10x_rcc.o(.text.RCC_PCLK2Config)
    RCC_PLLCmd                               0x08002a11   Thumb Code    12  stm32f10x_rcc.o(.text.RCC_PLLCmd)
    RCC_PLLConfig                            0x08002a1d   Thumb Code    16  stm32f10x_rcc.o(.text.RCC_PLLConfig)
    RCC_SYSCLKConfig                         0x08002a2d   Thumb Code    20  stm32f10x_rcc.o(.text.RCC_SYSCLKConfig)
    RCC_WaitForHSEStartUp                    0x08002a41   Thumb Code    44  stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp)
    SPI_BufferWrite_Data                     0x08002a6d   Thumb Code   132  spi_book.o(.text.SPI_BufferWrite_Data)
    SPI_Cmd                                  0x08002af1   Thumb Code    18  stm32f10x_spi.o(.text.SPI_Cmd)
    SPI_Erase_Sector                         0x08002b05   Thumb Code    48  spi_book.o(.text.SPI_Erase_Sector)
    SPI_FLASH_Init                           0x08002b35   Thumb Code   152  spi_book.o(.text.SPI_FLASH_Init)
    SPI_Flash_WAKEUP                         0x08002c39   Thumb Code    20  spi_book.o(.text.SPI_Flash_WAKEUP)
    SPI_I2S_GetFlagStatus                    0x08002c4d   Thumb Code    10  stm32f10x_spi.o(.text.SPI_I2S_GetFlagStatus)
    SPI_I2S_ReceiveData                      0x08002c57   Thumb Code     4  stm32f10x_spi.o(.text.SPI_I2S_ReceiveData)
    SPI_I2S_SendData                         0x08002c5b   Thumb Code     4  stm32f10x_spi.o(.text.SPI_I2S_SendData)
    SPI_Init                                 0x08002c5f   Thumb Code    54  stm32f10x_spi.o(.text.SPI_Init)
    SPI_Read_Data                            0x08002c95   Thumb Code    68  spi_book.o(.text.SPI_Read_Data)
    SPI_Read_ID                              0x08002cd9   Thumb Code    52  spi_book.o(.text.SPI_Read_ID)
    SPI_Show_Data                            0x08002d0d   Thumb Code    60  spi_book.o(.text.SPI_Show_Data)
    SPI_Write_Data                           0x08002da1   Thumb Code   132  spi_book.o(.text.SPI_Write_Data)
    SRAM_Init                                0x08002e3d   Thumb Code   664  sram_book.o(.text.SRAM_Init)
    SRAM_Test                                0x080030d5   Thumb Code   276  sram_book.o(.text.SRAM_Test)
    SRAM_Write                               0x080031e9   Thumb Code   124  sram_book.o(.text.SRAM_Write)
    SVC_Handler                              0x08003265   Thumb Code     2  stm32f10x_it.o(.text.SVC_Handler)
    Scan_file_Check                          0x08003269   Thumb Code    68  fatfs_book.o(.text.Scan_file_Check)
    SysTick_Handler                          0x080032ad   Thumb Code     4  systick_book.o(.text.SysTick_Handler)
    SystemInit                               0x080032b1   Thumb Code   240  system_stm32f10x.o(.text.SystemInit)
    USART1_IRQHandler                        0x080033a1   Thumb Code    36  usart_book.o(.text.USART1_IRQHandler)
    USART_Cmd                                0x080033c5   Thumb Code    18  stm32f10x_usart.o(.text.USART_Cmd)
    USART_DMACmd                             0x080033d7   Thumb Code    16  stm32f10x_usart.o(.text.USART_DMACmd)
    USART_GetFlagStatus                      0x080033e7   Thumb Code    10  stm32f10x_usart.o(.text.USART_GetFlagStatus)
    USART_GetITStatus                        0x080033f1   Thumb Code    56  stm32f10x_usart.o(.text.USART_GetITStatus)
    USART_ITConfig                           0x08003429   Thumb Code    44  stm32f10x_usart.o(.text.USART_ITConfig)
    USART_Init                               0x08003455   Thumb Code   164  stm32f10x_usart.o(.text.USART_Init)
    USART_ReceiveData                        0x080034f9   Thumb Code     8  stm32f10x_usart.o(.text.USART_ReceiveData)
    USART_SendData                           0x08003501   Thumb Code     8  stm32f10x_usart.o(.text.USART_SendData)
    UsageFault_Handler                       0x08003509   Thumb Code     2  stm32f10x_it.o(.text.UsageFault_Handler)
    Usart_SendHalf_32_Word                   0x0800350b   Thumb Code    40  usart_book.o(.text.Usart_SendHalf_32_Word)
    XPT2046_GPIO_Init                        0x08003549   Thumb Code   112  xpt2046_lcd_book.o(.text.XPT2046_GPIO_Init)
    XPT2046_ReadAdc_Smooth_XY                0x0800367d   Thumb Code   348  xpt2046_lcd_function_book.o(.text.XPT2046_ReadAdc_Smooth_XY)
    XPT2046_ReadAdc_XY                       0x080037d9   Thumb Code    72  xpt2046_lcd_book.o(.text.XPT2046_ReadAdc_XY)
    XPT2046_Touch_Calibrate                  0x08003821   Thumb Code   676  xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate)
    XPT2046_Touch_Calibrate_Page             0x08003ac5   Thumb Code   576  lcd_pagehtml_book.o(.text.XPT2046_Touch_Calibrate_Page)
    XPT2046_Touch_Calibrate_SetStand4Pint    0x08003d05   Thumb Code    60  xpt2046_lcd_function_book.o(.text.XPT2046_Touch_Calibrate_SetStand4Pint)
    _Buffer_Show                             0x08003d41   Thumb Code    28  dma_book.o(.text._Buffer_Show)
    _Buffercmp                               0x08003d5d   Thumb Code    30  dma_book.o(.text._Buffercmp)
    _DMA_Config                              0x08003d7b   Thumb Code    86  dma_book.o(.text._DMA_Config)
    _DMA_RAM_TO_USART                        0x08003dd1   Thumb Code   160  dma_book.o(.text._DMA_RAM_TO_USART)
    _DMA_ROM_TO_RAM                          0x08003e71   Thumb Code   176  dma_book.o(.text._DMA_ROM_TO_RAM)
    _I2C_EE_Init                             0x08003f21   Thumb Code   116  i2c_book.o(.text._I2C_EE_Init)
    _USART_DMA_Config                        0x08003f95   Thumb Code    80  dma_book.o(.text._USART_DMA_Config)
    clust2sect                               0x0800405b   Thumb Code    22  ff.o(.text.clust2sect)
    disk_initialize                          0x080047c3   Thumb Code    28  diskio.o(.text.disk_initialize)
    disk_ioctl                               0x080047df   Thumb Code    40  diskio.o(.text.disk_ioctl)
    disk_read                                0x08004807   Thumb Code    32  diskio.o(.text.disk_read)
    disk_status                              0x08004829   Thumb Code    28  diskio.o(.text.disk_status)
    disk_write                               0x08004845   Thumb Code    44  diskio.o(.text.disk_write)
    f_close                                  0x08004871   Thumb Code    28  ff.o(.text.f_close)
    f_closedir                               0x0800488d   Thumb Code    18  ff.o(.text.f_closedir)
    f_getfree                                0x0800489f   Thumb Code   228  ff.o(.text.f_getfree)
    f_lseek                                  0x08004983   Thumb Code   352  ff.o(.text.f_lseek)
    f_mkdir                                  0x08004ae3   Thumb Code   348  ff.o(.text.f_mkdir)
    f_mkfs                                   0x08004c41   Thumb Code  1456  ff.o(.text.f_mkfs)
    f_mount                                  0x080051f1   Thumb Code    76  ff.o(.text.f_mount)
    f_open                                   0x0800523d   Thumb Code   312  ff.o(.text.f_open)
    f_opendir                                0x08005375   Thumb Code    98  ff.o(.text.f_opendir)
    f_printf                                 0x080053d9   Thumb Code   556  ff.o(.text.f_printf)
    f_read                                   0x08005605   Thumb Code   350  ff.o(.text.f_read)
    f_readdir                                0x08005763   Thumb Code    86  ff.o(.text.f_readdir)
    f_rename                                 0x080057b9   Thumb Code   250  ff.o(.text.f_rename)
    f_stat                                   0x080058b3   Thumb Code    66  ff.o(.text.f_stat)
    f_sync                                   0x080058f5   Thumb Code   140  ff.o(.text.f_sync)
    f_unlink                                 0x08005981   Thumb Code   150  ff.o(.text.f_unlink)
    f_write                                  0x08005a17   Thumb Code   394  ff.o(.text.f_write)
    ff_convert                               0x08005ba1   Thumb Code    84  cc936.o(.text.ff_convert)
    ff_wtoupper                              0x08005bf5   Thumb Code    76  cc936.o(.text.ff_wtoupper)
    file_check                               0x08005c41   Thumb Code   304  fatfs_book.o(.text.file_check)
    fn_DMA_show_Init                         0x08005fc5   Thumb Code    92  main.o(.text.fn_DMA_show_Init)
    fn_EXTI_GPIO_Config                      0x08006021   Thumb Code    72  exit_book.o(.text.fn_EXTI_GPIO_Config)
    fn_FatFs_Document_Init                   0x08006069   Thumb Code    96  main.o(.text.fn_FatFs_Document_Init)
    fn_HRCC_SetSystic                        0x080060c9   Thumb Code   106  rcc_book.o(.text.fn_HRCC_SetSystic)
    fn_I2C_EE_Init                           0x08006135   Thumb Code   100  main.o(.text.fn_I2C_EE_Init)
    fn_I2C_EE_Soft_Init                      0x08006199   Thumb Code   108  main.o(.text.fn_I2C_EE_Soft_Init)
    fn_Key_GPIO_Config                       0x08006205   Thumb Code    30  key_book.o(.text.fn_Key_GPIO_Config)
    fn_Key_Init                              0x08006225   Thumb Code    48  key_book.o(.text.fn_Key_Init)
    fn_LED_ALL_OFF                           0x08006255   Thumb Code    36  led_book.o(.text.fn_LED_ALL_OFF)
    fn_LED_Corporate                         0x08006279   Thumb Code    56  led_book.o(.text.fn_LED_Corporate)
    fn_LED_Flash_Init                        0x080062b1   Thumb Code   128  main.o(.text.fn_LED_Flash_Init)
    fn_LED_GPIO_Config                       0x08006331   Thumb Code    46  led_book.o(.text.fn_LED_GPIO_Config)
    fn_Lcd_Page1                             0x08006361   Thumb Code   716  lcd_pagehtml_book.o(.text.fn_Lcd_Page1)
    fn_Lcd_Page2                             0x0800662d   Thumb Code   820  lcd_pagehtml_book.o(.text.fn_Lcd_Page2)
    fn_Led_Init                              0x08006961   Thumb Code    60  led_book.o(.text.fn_Led_Init)
    fn_NVIC_Config                           0x0800699d   Thumb Code    40  exit_book.o(.text.fn_NVIC_Config)
    fn_RCC_Init                              0x080069c5   Thumb Code     8  rcc_book.o(.text.fn_RCC_Init)
    fn_SPI_FLASH_Soft_Init                   0x080069cd   Thumb Code   256  main.o(.text.fn_SPI_FLASH_Soft_Init)
    fn_SRAM_Init                             0x08006acd   Thumb Code   180  main.o(.text.fn_SRAM_Init)
    fn_SysTick_delay_decrement               0x08006b81   Thumb Code    48  systick_book.o(.text.fn_SysTick_delay_decrement)
    fn_Systick_Delay                         0x08006bb1   Thumb Code   108  systick_book.o(.text.fn_Systick_Delay)
    fn_Systick_Delay_Handler_set             0x08006c1d   Thumb Code   108  systick_book.o(.text.fn_Systick_Delay_Handler_set)
    fn_USART_Config                          0x08006c89   Thumb Code    92  usart_book.o(.text.fn_USART_Config)
    fn_USART_IO_Config                       0x08006ce5   Thumb Code    48  usart_book.o(.text.fn_USART_IO_Config)
    fn_USART_Init                            0x08006d15   Thumb Code    14  usart_book.o(.text.fn_USART_Init)
    fn_Usart_SendString                      0x08006d23   Thumb Code    40  usart_book.o(.text.fn_Usart_SendString)
    fn_Usart_Send_Byte                       0x08006d4b   Thumb Code    22  usart_book.o(.text.fn_Usart_Send_Byte)
    fn_key_Check                             0x08006d61   Thumb Code    14  key_book.o(.text.fn_key_Check)
    fn_key_Effect                            0x08006d71   Thumb Code    56  key_book.o(.text.fn_key_Effect)
    fn_key_judge                             0x08006da9   Thumb Code   136  key_book.o(.text.fn_key_judge)
    fn_usart_show_Init                       0x08006e31   Thumb Code    72  main.o(.text.fn_usart_show_Init)
    fputc                                    0x08007149   Thumb Code    36  usart_book.o(.text.fputc)
    get_fat                                  0x0800716d   Thumb Code   238  ff.o(.text.get_fat)
    get_fattime                              0x0800725d   Thumb Code     8  diskio.o(.text.get_fattime)
    main                                     0x08007389   Thumb Code   252  main.o(.text.main)
    put_fat                                  0x080074d9   Thumb Code   280  ff.o(.text.put_fat)
    __0printf                                0x08007849   Thumb Code    22  printfa.o(i.__0printf)
    __1printf                                0x08007849   Thumb Code     0  printfa.o(i.__0printf)
    __2printf                                0x08007849   Thumb Code     0  printfa.o(i.__0printf)
    __c89printf                              0x08007849   Thumb Code     0  printfa.o(i.__0printf)
    printf                                   0x08007849   Thumb Code     0  printfa.o(i.__0printf)
    __0sprintf                               0x08007869   Thumb Code    34  printfa.o(i.__0sprintf)
    __1sprintf                               0x08007869   Thumb Code     0  printfa.o(i.__0sprintf)
    __2sprintf                               0x08007869   Thumb Code     0  printfa.o(i.__0sprintf)
    __c89sprintf                             0x08007869   Thumb Code     0  printfa.o(i.__0sprintf)
    sprintf                                  0x08007869   Thumb Code     0  printfa.o(i.__0sprintf)
    __scatterload_copy                       0x08007891   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x0800789f   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x080078a1   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    putchar                                  0x0800816d   Thumb Code     6  putchar.o(i.putchar)
    puts                                     0x08008179   Thumb Code    30  puts.o(i.puts)
    ASCII16x24_Table                         0x080081b0   Data        4560  fonts.o(.rodata.ASCII16x24_Table)
    ASCII24x32_Table                         0x08009380   Data        9120  fonts.o(.rodata.ASCII24x32_Table)
    ASCII8x16_Table                          0x0800b720   Data        1520  fonts.o(.rodata.ASCII8x16_Table)
    aSRC_Cont_Buffer                         0x0800bd20   Data          80  dma_book.o(.rodata.aSRC_Cont_Buffer)
    Region$$Table$$Base                      0x08037058   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08037078   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    LCD_SCAN_MODE                            0x20000004   Data           1  lcd_book.o(.data..L_MergedGlobals)
    LCD_X_LENGTH                             0x20000006   Data           2  lcd_book.o(.data..L_MergedGlobals)
    LCD_Y_LENGTH                             0x20000008   Data           2  lcd_book.o(.data..L_MergedGlobals)
    Font16x24                                0x2000000c   Data           8  fonts.o(.data.Font16x24)
    Font24x32                                0x20000014   Data           8  fonts.o(.data.Font24x32)
    Font8x16                                 0x2000001c   Data           8  fonts.o(.data.Font8x16)
    LCD_Currentfonts                         0x20000024   Data           4  lcd_draw_book.o(.data.LCD_Currentfonts)
    SystemCoreClock                          0x2000002c   Data           4  system_stm32f10x.o(.data.SystemCoreClock)
    strXPT2046_TouchPara                     0x20000030   Data         192  xpt2046_lcd_function_book.o(.data.strXPT2046_TouchPara)
    test_modu2                               0x200000f0   Data        2048  lcd_pagehtml_book.o(.data.test_modu2)
    key_flag                                 0x20000900   Data           1  key_book.o(.bss..L_MergedGlobals)
    Count_Modle_flag                         0x20000902   Data           2  key_book.o(.bss..L_MergedGlobals)
    USART_BUFFER_SIZE                        0x20000910   Data           4  dma_book.o(.bss..L_MergedGlobals)
    USART_DMA_Buffer                         0x20000914   Data           4  dma_book.o(.bss..L_MergedGlobals)
    res_flash                                0x20000918   Data           1  fatfs_book.o(.bss..L_MergedGlobals)
    fnum                                     0x2000091c   Data           4  fatfs_book.o(.bss..L_MergedGlobals)
    CurrentForecolor                         0x20000940   Data           2  lcd_draw_book.o(.bss..L_MergedGlobals)
    CurrentBackColor                         0x20000942   Data           2  lcd_draw_book.o(.bss..L_MergedGlobals)
    XPT2046_LCD_flag                         0x20000944   Data           1  xpt2046_lcd_function_book.o(.bss..L_MergedGlobals)
    strCrossCoordinate                       0x20000948   Data          32  xpt2046_lcd_function_book.o(.bss..L_MergedGlobals)
    strScreenSample                          0x20000968   Data          32  xpt2046_lcd_function_book.o(.bss..L_MergedGlobals)
    aDST_Buffer                              0x200019a0   Data          80  dma_book.o(.bss.aDST_Buffer)
    fnew                                     0x200019f0   Data        4132  fatfs_book.o(.bss.fnew)
    fs                                       0x20002a14   Data        4144  fatfs_book.o(.bss.fs)
    ucXPT2046_TouchFlag                      0x20003c43   Data           1  xpt2046_lcd_function_book.o(.bss.ucXPT2046_TouchFlag)
    zoomBuff                                 0x20004c44   Data       16384  lcd_draw_book.o(.bss.zoomBuff)
    zoomTempBuff                             0x20008c44   Data        1024  lcd_draw_book.o(.bss.zoomTempBuff)
    __initial_sp                             0x20009448   Data           0  startup_stm32f10x_hd.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000131

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00037978, Max: 0x00080000, ABSOLUTE, COMPRESSED[0x00037218])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00037078, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000130   Data   RO            3    RESET               startup_stm32f10x_hd.o
    0x08000130   0x08000130   0x00000000   Code   RO         1783  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x08000130   0x08000130   0x00000004   Code   RO         2071    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x08000134   0x08000134   0x00000004   Code   RO         2074    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x08000138   0x08000138   0x00000000   Code   RO         2076    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x08000138   0x08000138   0x00000000   Code   RO         2078    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x08000138   0x08000138   0x00000008   Code   RO         2079    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x08000140   0x08000140   0x00000000   Code   RO         2081    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x08000140   0x08000140   0x00000000   Code   RO         2083    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x08000140   0x08000140   0x00000004   Code   RO         2072    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x08000144   0x08000144   0x00000024   Code   RO            4    .text               startup_stm32f10x_hd.o
    0x08000168   0x08000168   0x00000024   Code   RO         1792    .text               mc_w.l(memseta.o)
    0x0800018c   0x0800018c   0x0000000e   Code   RO         1794    .text               mc_w.l(strlen.o)
    0x0800019a   0x0800019a   0x00000012   Code   RO         1796    .text               mc_w.l(strcpy.o)
    0x080001ac   0x080001ac   0x000000b0   Code   RO         2059    .text               mf_w.l(fadd.o)
    0x0800025c   0x0800025c   0x00000064   Code   RO         2061    .text               mf_w.l(fmul.o)
    0x080002c0   0x080002c0   0x0000007c   Code   RO         2063    .text               mf_w.l(fdiv.o)
    0x0800033c   0x0800033c   0x00000012   Code   RO         2065    .text               mf_w.l(fflti.o)
    0x0800034e   0x0800034e   0x00000032   Code   RO         2067    .text               mf_w.l(ffixi.o)
    0x08000380   0x08000380   0x00000026   Code   RO         2069    .text               mf_w.l(f2d.o)
    0x080003a6   0x080003a6   0x0000002c   Code   RO         2086    .text               mc_w.l(uidiv.o)
    0x080003d2   0x080003d2   0x00000062   Code   RO         2088    .text               mc_w.l(uldiv.o)
    0x08000434   0x08000434   0x00000000   Code   RO         2090    .text               mc_w.l(iusefp.o)
    0x08000434   0x08000434   0x0000006e   Code   RO         2091    .text               mf_w.l(fepilogue.o)
    0x080004a2   0x080004a2   0x0000014e   Code   RO         2093    .text               mf_w.l(dadd.o)
    0x080005f0   0x080005f0   0x000000e4   Code   RO         2095    .text               mf_w.l(dmul.o)
    0x080006d4   0x080006d4   0x000000de   Code   RO         2097    .text               mf_w.l(ddiv.o)
    0x080007b2   0x080007b2   0x00000030   Code   RO         2099    .text               mf_w.l(dfixul.o)
    0x080007e2   0x080007e2   0x00000002   PAD
    0x080007e4   0x080007e4   0x00000030   Code   RO         2101    .text               mf_w.l(cdrcmple.o)
    0x08000814   0x08000814   0x00000024   Code   RO         2103    .text               mc_w.l(init.o)
    0x08000838   0x08000838   0x0000001e   Code   RO         2105    .text               mc_w.l(llshl.o)
    0x08000856   0x08000856   0x00000020   Code   RO         2107    .text               mc_w.l(llushr.o)
    0x08000876   0x08000876   0x00000024   Code   RO         2109    .text               mc_w.l(llsshr.o)
    0x0800089a   0x0800089a   0x000000ba   Code   RO         2111    .text               mf_w.l(depilogue.o)
    0x08000954   0x08000954   0x0000003a   Code   RO         2121    .text               mc_w.l(__dczerorl.o)
    0x0800098e   0x0800098e   0x00000002   Code   RO         1767    .text.BusFault_Handler  stm32f10x_it.o
    0x08000990   0x08000990   0x00000018   Code   RO          319    .text.DMA_Cmd       stm32f10x_dma.o
    0x080009a8   0x080009a8   0x00000018   Code   RO          327    .text.DMA_GetFlagStatus  stm32f10x_dma.o
    0x080009c0   0x080009c0   0x00000046   Code   RO          315    .text.DMA_Init      stm32f10x_dma.o
    0x08000a06   0x08000a06   0x00000002   Code   RO         1773    .text.DebugMon_Handler  stm32f10x_it.o
    0x08000a08   0x08000a08   0x00000068   Code   RO         1508    .text.Display_Char_test  lcd_pagehtml_book.o
    0x08000a70   0x08000a70   0x00000050   Code   RO         1308    .text.EE_Soft_Check_State  i2c_soft_book.o
    0x08000ac0   0x08000ac0   0x000000b4   Code   RO         1304    .text.EE_Soft_WriteBytes  i2c_soft_book.o
    0x08000b74   0x08000b74   0x00000034   Code   RO         1154    .text.EXTI0_IRQHandler  exit_book.o
    0x08000ba8   0x08000ba8   0x00000038   Code   RO         1156    .text.EXTI15_10_IRQHandler  exit_book.o
    0x08000be0   0x08000be0   0x0000000c   Code   RO          357    .text.EXTI_ClearITPendingBit  stm32f10x_exti.o
    0x08000bec   0x08000bec   0x00000018   Code   RO          355    .text.EXTI_GetITStatus  stm32f10x_exti.o
    0x08000c04   0x08000c04   0x00000060   Code   RO          345    .text.EXTI_Init     stm32f10x_exti.o
    0x08000c64   0x08000c64   0x00000014   Code   RO          371    .text.FLASH_PrefetchBufferCmd  stm32f10x_flash.o
    0x08000c78   0x08000c78   0x00000014   Code   RO          367    .text.FLASH_SetLatency  stm32f10x_flash.o
    0x08000c8c   0x08000c8c   0x00000024   Code   RO          449    .text.FSMC_NORSRAMCmd  stm32f10x_fsmc.o
    0x08000cb0   0x08000cb0   0x000000b0   Code   RO          437    .text.FSMC_NORSRAMInit  stm32f10x_fsmc.o
    0x08000d60   0x08000d60   0x00000020   Code   RO         1370    .text.FatFs_Close_flash  fatfs_book.o
    0x08000d80   0x08000d80   0x00000118   Code   RO         1372    .text.FatFs_document_Text  fatfs_book.o
    0x08000e98   0x08000e98   0x000000f4   Code   RO         1374    .text.FatFs_document_set_content  fatfs_book.o
    0x08000f8c   0x08000f8c   0x00000148   Code   RO         1368    .text.FatFs_equipment_flash  fatfs_book.o
    0x080010d4   0x080010d4   0x00000028   Code   RO          509    .text.GPIO_EXTILineConfig  stm32f10x_gpio.o
    0x080010fc   0x080010fc   0x000000b4   Code   RO          481    .text.GPIO_Init     stm32f10x_gpio.o
    0x080011b0   0x080011b0   0x0000000a   Code   RO          485    .text.GPIO_ReadInputDataBit  stm32f10x_gpio.o
    0x080011ba   0x080011ba   0x0000000a   Code   RO          489    .text.GPIO_ReadOutputDataBit  stm32f10x_gpio.o
    0x080011c4   0x080011c4   0x00000004   Code   RO          495    .text.GPIO_ResetBits  stm32f10x_gpio.o
    0x080011c8   0x080011c8   0x00000004   Code   RO          493    .text.GPIO_SetBits  stm32f10x_gpio.o
    0x080011cc   0x080011cc   0x00000048   Code   RO         1710    .text.GetGBKCode_from_EXFlash  fonts.o
    0x08001214   0x08001214   0x00000002   Code   RO         1763    .text.HardFault_Handler  stm32f10x_it.o
    0x08001216   0x08001216   0x00000012   Code   RO          538    .text.I2C_AcknowledgeConfig  stm32f10x_i2c.o
    0x08001228   0x08001228   0x00000016   Code   RO          576    .text.I2C_CheckEvent  stm32f10x_i2c.o
    0x0800123e   0x0800123e   0x00000006   Code   RO          582    .text.I2C_ClearFlag  stm32f10x_i2c.o
    0x08001244   0x08001244   0x00000012   Code   RO          528    .text.I2C_Cmd       stm32f10x_i2c.o
    0x08001256   0x08001256   0x00000002   PAD
    0x08001258   0x08001258   0x0000004c   Code   RO         1286    .text.I2C_EE_WaitEepromStandbyState  i2c_book.o
    0x080012a4   0x080012a4   0x00000012   Code   RO          534    .text.I2C_GenerateSTART  stm32f10x_i2c.o
    0x080012b6   0x080012b6   0x00000012   Code   RO          536    .text.I2C_GenerateSTOP  stm32f10x_i2c.o
    0x080012c8   0x080012c8   0x00000034   Code   RO          580    .text.I2C_GetFlagStatus  stm32f10x_i2c.o
    0x080012fc   0x080012fc   0x000000bc   Code   RO          524    .text.I2C_Init      stm32f10x_i2c.o
    0x080013b8   0x080013b8   0x00000016   Code   RO          554    .text.I2C_ReadRegister  stm32f10x_i2c.o
    0x080013ce   0x080013ce   0x00000002   PAD
    0x080013d0   0x080013d0   0x000001fc   Code   RO         1288    .text.I2C_Read_fun  i2c_book.o
    0x080015cc   0x080015cc   0x00000006   Code   RO          550    .text.I2C_ReceiveData  stm32f10x_i2c.o
    0x080015d2   0x080015d2   0x00000010   Code   RO          552    .text.I2C_Send7bitAddress  stm32f10x_i2c.o
    0x080015e2   0x080015e2   0x00000002   PAD
    0x080015e4   0x080015e4   0x00000054   Code   RO         1318    .text.I2C_SendByte  i2c_soft_book.o
    0x08001638   0x08001638   0x00000004   Code   RO          548    .text.I2C_SendData  stm32f10x_i2c.o
    0x0800163c   0x0800163c   0x00000014   Code   RO         1306    .text.I2C_Soft_Init  i2c_soft_book.o
    0x08001650   0x08001650   0x000001a4   Code   RO         1312    .text.I2C_Soft_Read_fun  i2c_soft_book.o
    0x080017f4   0x080017f4   0x000000b0   Code   RO         1310    .text.I2C_Soft_Write_fun  i2c_soft_book.o
    0x080018a4   0x080018a4   0x0000002c   Code   RO         1316    .text.I2C_Start     i2c_soft_book.o
    0x080018d0   0x080018d0   0x0000001c   Code   RO         1314    .text.I2C_Stop      i2c_soft_book.o
    0x080018ec   0x080018ec   0x0000003c   Code   RO         1290    .text.I2C_TIMEOUT_UserCallback  i2c_book.o
    0x08001928   0x08001928   0x00000034   Code   RO         1320    .text.I2C_WaitAck   i2c_soft_book.o
    0x0800195c   0x0800195c   0x0000019c   Code   RO         1284    .text.I2C_Write_fun  i2c_book.o
    0x08001af8   0x08001af8   0x00000018   Code   RO         1419    .text.ILI9341_BackLed_Control  lcd_book.o
    0x08001b10   0x08001b10   0x0000001c   Code   RO         1442    .text.ILI9341_Clear  lcd_draw_book.o
    0x08001b2c   0x08001b2c   0x00000012   Code   RO         1417    .text.ILI9341_Delay  lcd_book.o
    0x08001b3e   0x08001b3e   0x00000002   PAD
    0x08001b40   0x08001b40   0x00000078   Code   RO         1478    .text.ILI9341_DispChar_CH  lcd_draw_book.o
    0x08001bb8   0x08001bb8   0x00000080   Code   RO         1470    .text.ILI9341_DispChar_EN  lcd_draw_book.o
    0x08001c38   0x08001c38   0x00000068   Code   RO         1472    .text.ILI9341_DispStringLine_EN  lcd_draw_book.o
    0x08001ca0   0x08001ca0   0x000000a8   Code   RO         1482    .text.ILI9341_DispStringLine_EN_CH  lcd_draw_book.o
    0x08001d48   0x08001d48   0x00000054   Code   RO         1480    .text.ILI9341_DispString_CH  lcd_draw_book.o
    0x08001d9c   0x08001d9c   0x000000ac   Code   RO         1484    .text.ILI9341_DispString_EN_CH  lcd_draw_book.o
    0x08001e48   0x08001e48   0x000000d0   Code   RO         1492    .text.ILI9341_DisplayStringEx  lcd_draw_book.o
    0x08001f18   0x08001f18   0x0000005c   Code   RO         1490    .text.ILI9341_DrawChar_Ex  lcd_draw_book.o
    0x08001f74   0x08001f74   0x0000018c   Code   RO         1462    .text.ILI9341_DrawCircle  lcd_draw_book.o
    0x08002100   0x08002100   0x00000034   Code   RO         1464    .text.ILI9341_DrawCross  lcd_draw_book.o
    0x08002134   0x08002134   0x0000009e   Code   RO         1458    .text.ILI9341_DrawLine  lcd_draw_book.o
    0x080021d2   0x080021d2   0x00000002   PAD
    0x080021d4   0x080021d4   0x00000084   Code   RO         1460    .text.ILI9341_DrawRectangle  lcd_draw_book.o
    0x08002258   0x08002258   0x0000001a   Code   RO         1444    .text.ILI9341_FillColor  lcd_draw_book.o
    0x08002272   0x08002272   0x00000002   PAD
    0x08002274   0x08002274   0x00000034   Code   RO         1438    .text.ILI9341_GetPointPixel  lcd_draw_book.o
    0x080022a8   0x080022a8   0x00000080   Code   RO         1423    .text.ILI9341_GramScan  lcd_book.o
    0x08002328   0x08002328   0x0000031c   Code   RO         1425    .text.ILI9341_Init  lcd_book.o
    0x08002644   0x08002644   0x00000054   Code   RO         1436    .text.ILI9341_OpenWindow  lcd_draw_book.o
    0x08002698   0x08002698   0x00000008   Code   RO         1415    .text.ILI9341_Read_Data  lcd_book.o
    0x080026a0   0x080026a0   0x00000030   Code   RO         1421    .text.ILI9341_Rst   lcd_book.o
    0x080026d0   0x080026d0   0x00000006   Code   RO         1440    .text.ILI9341_SetCursor  lcd_draw_book.o
    0x080026d6   0x080026d6   0x00000002   PAD
    0x080026d8   0x080026d8   0x00000034   Code   RO         1456    .text.ILI9341_SetPointPixel  lcd_draw_book.o
    0x0800270c   0x0800270c   0x00000008   Code   RO         1411    .text.ILI9341_Write_Cmd  lcd_book.o
    0x08002714   0x08002714   0x00000008   Code   RO         1413    .text.ILI9341_Write_Data  lcd_book.o
    0x0800271c   0x0800271c   0x000000d4   Code   RO         1488    .text.ILI9341_zoomChar  lcd_draw_book.o
    0x080027f0   0x080027f0   0x00000008   Code   RO         1448    .text.LCD_GetFont   lcd_draw_book.o
    0x080027f8   0x080027f8   0x00000008   Code   RO         1450    .text.LCD_SetColors  lcd_draw_book.o
    0x08002800   0x08002800   0x0000000c   Code   RO         1468    .text.LCD_SetFont   lcd_draw_book.o
    0x0800280c   0x0800280c   0x00000008   Code   RO         1452    .text.LCD_SetForeColor  lcd_draw_book.o
    0x08002814   0x08002814   0x0000000c   Code   RO         1466    .text.LCD_SetTextColor  lcd_draw_book.o
    0x08002820   0x08002820   0x00000002   Code   RO         1765    .text.MemManage_Handler  stm32f10x_it.o
    0x08002822   0x08002822   0x00000002   Code   RO         1761    .text.NMI_Handler   stm32f10x_it.o
    0x08002824   0x08002824   0x00000050   Code   RO           27    .text.NVIC_Init     misc.o
    0x08002874   0x08002874   0x00000014   Code   RO           25    .text.NVIC_PriorityGroupConfig  misc.o
    0x08002888   0x08002888   0x00000002   Code   RO         1775    .text.PendSV_Handler  stm32f10x_it.o
    0x0800288a   0x0800288a   0x00000002   PAD
    0x0800288c   0x0800288c   0x00000018   Code   RO          684    .text.RCC_AHBPeriphClockCmd  stm32f10x_rcc.o
    0x080028a4   0x080028a4   0x00000018   Code   RO          688    .text.RCC_APB1PeriphClockCmd  stm32f10x_rcc.o
    0x080028bc   0x080028bc   0x00000018   Code   RO          686    .text.RCC_APB2PeriphClockCmd  stm32f10x_rcc.o
    0x080028d4   0x080028d4   0x0000003c   Code   RO          642    .text.RCC_DeInit    stm32f10x_rcc.o
    0x08002910   0x08002910   0x00000074   Code   RO          682    .text.RCC_GetClocksFreq  stm32f10x_rcc.o
    0x08002984   0x08002984   0x00000024   Code   RO          648    .text.RCC_GetFlagStatus  stm32f10x_rcc.o
    0x080029a8   0x080029a8   0x0000000c   Code   RO          660    .text.RCC_GetSYSCLKSource  stm32f10x_rcc.o
    0x080029b4   0x080029b4   0x00000010   Code   RO          662    .text.RCC_HCLKConfig  stm32f10x_rcc.o
    0x080029c4   0x080029c4   0x0000002c   Code   RO          644    .text.RCC_HSEConfig  stm32f10x_rcc.o
    0x080029f0   0x080029f0   0x00000010   Code   RO          664    .text.RCC_PCLK1Config  stm32f10x_rcc.o
    0x08002a00   0x08002a00   0x00000010   Code   RO          666    .text.RCC_PCLK2Config  stm32f10x_rcc.o
    0x08002a10   0x08002a10   0x0000000c   Code   RO          656    .text.RCC_PLLCmd    stm32f10x_rcc.o
    0x08002a1c   0x08002a1c   0x00000010   Code   RO          654    .text.RCC_PLLConfig  stm32f10x_rcc.o
    0x08002a2c   0x08002a2c   0x00000014   Code   RO          658    .text.RCC_SYSCLKConfig  stm32f10x_rcc.o
    0x08002a40   0x08002a40   0x0000002c   Code   RO          646    .text.RCC_WaitForHSEStartUp  stm32f10x_rcc.o
    0x08002a6c   0x08002a6c   0x00000084   Code   RO         1349    .text.SPI_BufferWrite_Data  spi_book.o
    0x08002af0   0x08002af0   0x00000012   Code   RO          830    .text.SPI_Cmd       stm32f10x_spi.o
    0x08002b02   0x08002b02   0x00000002   PAD
    0x08002b04   0x08002b04   0x00000030   Code   RO         1337    .text.SPI_Erase_Sector  spi_book.o
    0x08002b34   0x08002b34   0x00000098   Code   RO         1331    .text.SPI_FLASH_Init  spi_book.o
    0x08002bcc   0x08002bcc   0x0000006c   Code   RO         1335    .text.SPI_FLASH_Send_Byte  spi_book.o
    0x08002c38   0x08002c38   0x00000014   Code   RO         1353    .text.SPI_Flash_WAKEUP  spi_book.o
    0x08002c4c   0x08002c4c   0x0000000a   Code   RO          858    .text.SPI_I2S_GetFlagStatus  stm32f10x_spi.o
    0x08002c56   0x08002c56   0x00000004   Code   RO          840    .text.SPI_I2S_ReceiveData  stm32f10x_spi.o
    0x08002c5a   0x08002c5a   0x00000004   Code   RO          838    .text.SPI_I2S_SendData  stm32f10x_spi.o
    0x08002c5e   0x08002c5e   0x00000036   Code   RO          822    .text.SPI_Init      stm32f10x_spi.o
    0x08002c94   0x08002c94   0x00000044   Code   RO         1345    .text.SPI_Read_Data  spi_book.o
    0x08002cd8   0x08002cd8   0x00000034   Code   RO         1333    .text.SPI_Read_ID   spi_book.o
    0x08002d0c   0x08002d0c   0x0000003c   Code   RO         1355    .text.SPI_Show_Data  spi_book.o
    0x08002d48   0x08002d48   0x00000038   Code   RO         1357    .text.SPI_TIMEOUT_UserCallback  spi_book.o
    0x08002d80   0x08002d80   0x00000020   Code   RO         1341    .text.SPI_WaitForWriteEnd  spi_book.o
    0x08002da0   0x08002da0   0x00000084   Code   RO         1347    .text.SPI_Write_Data  spi_book.o
    0x08002e24   0x08002e24   0x00000018   Code   RO         1339    .text.SPI_Write_Enable  spi_book.o
    0x08002e3c   0x08002e3c   0x00000298   Code   RO         1398    .text.SRAM_Init     sram_book.o
    0x080030d4   0x080030d4   0x00000114   Code   RO         1396    .text.SRAM_Test     sram_book.o
    0x080031e8   0x080031e8   0x0000007c   Code   RO         1400    .text.SRAM_Write    sram_book.o
    0x08003264   0x08003264   0x00000002   Code   RO         1771    .text.SVC_Handler   stm32f10x_it.o
    0x08003266   0x08003266   0x00000002   PAD
    0x08003268   0x08003268   0x00000044   Code   RO         1378    .text.Scan_file_Check  fatfs_book.o
    0x080032ac   0x080032ac   0x00000004   Code   RO         1222    .text.SysTick_Handler  systick_book.o
    0x080032b0   0x080032b0   0x000000f0   Code   RO           11    .text.SystemInit    system_stm32f10x.o
    0x080033a0   0x080033a0   0x00000024   Code   RO         1249    .text.USART1_IRQHandler  usart_book.o
    0x080033c4   0x080033c4   0x00000012   Code   RO         1070    .text.USART_Cmd     stm32f10x_usart.o
    0x080033d6   0x080033d6   0x00000010   Code   RO         1074    .text.USART_DMACmd  stm32f10x_usart.o
    0x080033e6   0x080033e6   0x0000000a   Code   RO         1110    .text.USART_GetFlagStatus  stm32f10x_usart.o
    0x080033f0   0x080033f0   0x00000038   Code   RO         1114    .text.USART_GetITStatus  stm32f10x_usart.o
    0x08003428   0x08003428   0x0000002c   Code   RO         1072    .text.USART_ITConfig  stm32f10x_usart.o
    0x08003454   0x08003454   0x000000a4   Code   RO         1062    .text.USART_Init    stm32f10x_usart.o
    0x080034f8   0x080034f8   0x00000008   Code   RO         1088    .text.USART_ReceiveData  stm32f10x_usart.o
    0x08003500   0x08003500   0x00000008   Code   RO         1086    .text.USART_SendData  stm32f10x_usart.o
    0x08003508   0x08003508   0x00000002   Code   RO         1769    .text.UsageFault_Handler  stm32f10x_it.o
    0x0800350a   0x0800350a   0x00000028   Code   RO         1241    .text.Usart_SendHalf_32_Word  usart_book.o
    0x08003532   0x08003532   0x00000014   Code   RO         1533    .text.XPT2046_DelayUS  xpt2046_lcd_book.o
    0x08003546   0x08003546   0x00000002   PAD
    0x08003548   0x08003548   0x00000070   Code   RO         1527    .text.XPT2046_GPIO_Init  xpt2046_lcd_book.o
    0x080035b8   0x080035b8   0x000000c4   Code   RO         1531    .text.XPT2046_ReadAdc  xpt2046_lcd_book.o
    0x0800367c   0x0800367c   0x0000015c   Code   RO         1545    .text.XPT2046_ReadAdc_Smooth_XY  xpt2046_lcd_function_book.o
    0x080037d8   0x080037d8   0x00000048   Code   RO         1529    .text.XPT2046_ReadAdc_XY  xpt2046_lcd_book.o
    0x08003820   0x08003820   0x000002a4   Code   RO         1549    .text.XPT2046_Touch_Calibrate  xpt2046_lcd_function_book.o
    0x08003ac4   0x08003ac4   0x00000240   Code   RO         1510    .text.XPT2046_Touch_Calibrate_Page  lcd_pagehtml_book.o
    0x08003d04   0x08003d04   0x0000003c   Code   RO         1547    .text.XPT2046_Touch_Calibrate_SetStand4Pint  xpt2046_lcd_function_book.o
    0x08003d40   0x08003d40   0x0000001c   Code   RO         1265    .text._Buffer_Show  dma_book.o
    0x08003d5c   0x08003d5c   0x0000001e   Code   RO         1263    .text._Buffercmp    dma_book.o
    0x08003d7a   0x08003d7a   0x00000056   Code   RO         1259    .text._DMA_Config   dma_book.o
    0x08003dd0   0x08003dd0   0x000000a0   Code   RO         1269    .text._DMA_RAM_TO_USART  dma_book.o
    0x08003e70   0x08003e70   0x000000b0   Code   RO         1267    .text._DMA_ROM_TO_RAM  dma_book.o
    0x08003f20   0x08003f20   0x00000074   Code   RO         1282    .text._I2C_EE_Init  i2c_book.o
    0x08003f94   0x08003f94   0x00000050   Code   RO         1261    .text._USART_DMA_Config  dma_book.o
    0x08003fe4   0x08003fe4   0x00000068   Code   RO         1674    .text.check_fs      ff.o
    0x0800404c   0x0800404c   0x0000000e   Code   RO         1678    .text.chk_chr       ff.o
    0x0800405a   0x0800405a   0x00000016   Code   RO         1582    .text.clust2sect    ff.o
    0x08004070   0x08004070   0x000000a8   Code   RO         1616    .text.create_chain  ff.o
    0x08004118   0x08004118   0x00000144   Code   RO         1676    .text.dir_find      ff.o
    0x0800425c   0x0800425c   0x0000010c   Code   RO         1638    .text.dir_next      ff.o
    0x08004368   0x08004368   0x000000fc   Code   RO         1634    .text.dir_read      ff.o
    0x08004464   0x08004464   0x00000260   Code   RO         1600    .text.dir_register  ff.o
    0x080046c4   0x080046c4   0x00000066   Code   RO         1648    .text.dir_remove    ff.o
    0x0800472a   0x0800472a   0x00000098   Code   RO         1628    .text.dir_sdi       ff.o
    0x080047c2   0x080047c2   0x0000001c   Code   RO         1564    .text.disk_initialize  diskio.o
    0x080047de   0x080047de   0x00000028   Code   RO         1570    .text.disk_ioctl    diskio.o
    0x08004806   0x08004806   0x00000020   Code   RO         1566    .text.disk_read     diskio.o
    0x08004826   0x08004826   0x00000002   PAD
    0x08004828   0x08004828   0x0000001c   Code   RO         1562    .text.disk_status   diskio.o
    0x08004844   0x08004844   0x0000002c   Code   RO         1568    .text.disk_write    diskio.o
    0x08004870   0x08004870   0x0000001c   Code   RO         1622    .text.f_close       ff.o
    0x0800488c   0x0800488c   0x00000012   Code   RO         1630    .text.f_closedir    ff.o
    0x0800489e   0x0800489e   0x000000e4   Code   RO         1642    .text.f_getfree     ff.o
    0x08004982   0x08004982   0x00000160   Code   RO         1624    .text.f_lseek       ff.o
    0x08004ae2   0x08004ae2   0x0000015c   Code   RO         1650    .text.f_mkdir       ff.o
    0x08004c3e   0x08004c3e   0x00000002   PAD
    0x08004c40   0x08004c40   0x000005b0   Code   RO         1662    .text.f_mkfs        ff.o
    0x080051f0   0x080051f0   0x0000004c   Code   RO         1590    .text.f_mount       ff.o
    0x0800523c   0x0800523c   0x00000138   Code   RO         1596    .text.f_open        ff.o
    0x08005374   0x08005374   0x00000062   Code   RO         1626    .text.f_opendir     ff.o
    0x080053d6   0x080053d6   0x00000002   PAD
    0x080053d8   0x080053d8   0x0000022c   Code   RO         1672    .text.f_printf      ff.o
    0x08005604   0x08005604   0x0000015e   Code   RO         1608    .text.f_read        ff.o
    0x08005762   0x08005762   0x00000056   Code   RO         1632    .text.f_readdir     ff.o
    0x080057b8   0x080057b8   0x000000fa   Code   RO         1658    .text.f_rename      ff.o
    0x080058b2   0x080058b2   0x00000042   Code   RO         1640    .text.f_stat        ff.o
    0x080058f4   0x080058f4   0x0000008c   Code   RO         1618    .text.f_sync        ff.o
    0x08005980   0x08005980   0x00000096   Code   RO         1646    .text.f_unlink      ff.o
    0x08005a16   0x08005a16   0x0000018a   Code   RO         1614    .text.f_write       ff.o
    0x08005ba0   0x08005ba0   0x00000054   Code   RO         1694    .text.ff_convert    cc936.o
    0x08005bf4   0x08005bf4   0x0000004c   Code   RO         1696    .text.ff_wtoupper   cc936.o
    0x08005c40   0x08005c40   0x00000130   Code   RO         1376    .text.file_check    fatfs_book.o
    0x08005d70   0x08005d70   0x00000254   Code   RO         1594    .text.find_volume   ff.o
    0x08005fc4   0x08005fc4   0x0000005c   Code   RO         1732    .text.fn_DMA_show_Init  main.o
    0x08006020   0x08006020   0x00000048   Code   RO         1150    .text.fn_EXTI_GPIO_Config  exit_book.o
    0x08006068   0x08006068   0x00000060   Code   RO         1740    .text.fn_FatFs_Document_Init  main.o
    0x080060c8   0x080060c8   0x0000006a   Code   RO         1200    .text.fn_HRCC_SetSystic  rcc_book.o
    0x08006132   0x08006132   0x00000002   PAD
    0x08006134   0x08006134   0x00000064   Code   RO         1734    .text.fn_I2C_EE_Init  main.o
    0x08006198   0x08006198   0x0000006c   Code   RO         1736    .text.fn_I2C_EE_Soft_Init  main.o
    0x08006204   0x08006204   0x0000001e   Code   RO         1165    .text.fn_Key_GPIO_Config  key_book.o
    0x08006222   0x08006222   0x00000002   PAD
    0x08006224   0x08006224   0x00000030   Code   RO         1167    .text.fn_Key_Init   key_book.o
    0x08006254   0x08006254   0x00000024   Code   RO         1188    .text.fn_LED_ALL_OFF  led_book.o
    0x08006278   0x08006278   0x00000038   Code   RO         1190    .text.fn_LED_Corporate  led_book.o
    0x080062b0   0x080062b0   0x00000080   Code   RO         1728    .text.fn_LED_Flash_Init  main.o
    0x08006330   0x08006330   0x0000002e   Code   RO         1184    .text.fn_LED_GPIO_Config  led_book.o
    0x0800635e   0x0800635e   0x00000002   PAD
    0x08006360   0x08006360   0x000002cc   Code   RO         1512    .text.fn_Lcd_Page1  lcd_pagehtml_book.o
    0x0800662c   0x0800662c   0x00000334   Code   RO         1514    .text.fn_Lcd_Page2  lcd_pagehtml_book.o
    0x08006960   0x08006960   0x0000003c   Code   RO         1186    .text.fn_Led_Init   led_book.o
    0x0800699c   0x0800699c   0x00000028   Code   RO         1152    .text.fn_NVIC_Config  exit_book.o
    0x080069c4   0x080069c4   0x00000008   Code   RO         1206    .text.fn_RCC_Init   rcc_book.o
    0x080069cc   0x080069cc   0x00000100   Code   RO         1738    .text.fn_SPI_FLASH_Soft_Init  main.o
    0x08006acc   0x08006acc   0x000000b4   Code   RO         1742    .text.fn_SRAM_Init  main.o
    0x08006b80   0x08006b80   0x00000030   Code   RO         1220    .text.fn_SysTick_delay_decrement  systick_book.o
    0x08006bb0   0x08006bb0   0x0000006c   Code   RO         1216    .text.fn_Systick_Delay  systick_book.o
    0x08006c1c   0x08006c1c   0x0000006c   Code   RO         1218    .text.fn_Systick_Delay_Handler_set  systick_book.o
    0x08006c88   0x08006c88   0x0000005c   Code   RO         1235    .text.fn_USART_Config  usart_book.o
    0x08006ce4   0x08006ce4   0x00000030   Code   RO         1233    .text.fn_USART_IO_Config  usart_book.o
    0x08006d14   0x08006d14   0x0000000e   Code   RO         1243    .text.fn_USART_Init  usart_book.o
    0x08006d22   0x08006d22   0x00000028   Code   RO         1239    .text.fn_Usart_SendString  usart_book.o
    0x08006d4a   0x08006d4a   0x00000016   Code   RO         1237    .text.fn_Usart_Send_Byte  usart_book.o
    0x08006d60   0x08006d60   0x0000000e   Code   RO         1173    .text.fn_key_Check  key_book.o
    0x08006d6e   0x08006d6e   0x00000002   PAD
    0x08006d70   0x08006d70   0x00000038   Code   RO         1171    .text.fn_key_Effect  key_book.o
    0x08006da8   0x08006da8   0x00000088   Code   RO         1169    .text.fn_key_judge  key_book.o
    0x08006e30   0x08006e30   0x00000048   Code   RO         1730    .text.fn_usart_show_Init  main.o
    0x08006e78   0x08006e78   0x000002d0   Code   RO         1598    .text.follow_path   ff.o
    0x08007148   0x08007148   0x00000024   Code   RO         1245    .text.fputc         usart_book.o
    0x0800716c   0x0800716c   0x000000ee   Code   RO         1584    .text.get_fat       ff.o
    0x0800725a   0x0800725a   0x00000002   PAD
    0x0800725c   0x0800725c   0x00000008   Code   RO         1572    .text.get_fattime   diskio.o
    0x08007264   0x08007264   0x000000c8   Code   RO         1636    .text.get_fileinfo  ff.o
    0x0800732c   0x0800732c   0x00000042   Code   RO         1592    .text.get_ldnumber  ff.o
    0x0800736e   0x0800736e   0x00000018   Code   RO         1602    .text.ld_clust      ff.o
    0x08007386   0x08007386   0x00000002   PAD
    0x08007388   0x08007388   0x000000fc   Code   RO         1726    .text.main          main.o
    0x08007484   0x08007484   0x00000010   Code   RO         1612    .text.mem_cpy       ff.o
    0x08007494   0x08007494   0x0000000c   Code   RO         1654    .text.mem_set       ff.o
    0x080074a0   0x080074a0   0x00000038   Code   RO         1586    .text.move_window   ff.o
    0x080074d8   0x080074d8   0x00000118   Code   RO         1588    .text.put_fat       ff.o
    0x080075f0   0x080075f0   0x00000036   Code   RO         1668    .text.putc_bfd      ff.o
    0x08007626   0x08007626   0x00000056   Code   RO         1606    .text.remove_chain  ff.o
    0x0800767c   0x0800767c   0x000000b8   Code   RO         1380    .text.scan_file     fatfs_book.o
    0x08007734   0x08007734   0x0000000c   Code   RO         1604    .text.st_clust      ff.o
    0x08007740   0x08007740   0x0000001c   Code   RO         1680    .text.sum_sfn       ff.o
    0x0800775c   0x0800775c   0x00000074   Code   RO         1620    .text.sync_fs       ff.o
    0x080077d0   0x080077d0   0x0000004c   Code   RO         1652    .text.sync_window   ff.o
    0x0800781c   0x0800781c   0x0000002a   Code   RO         1610    .text.validate      ff.o
    0x08007846   0x08007846   0x00000002   PAD
    0x08007848   0x08007848   0x00000020   Code   RO         2031    i.__0printf         mc_w.l(printfa.o)
    0x08007868   0x08007868   0x00000028   Code   RO         2033    i.__0sprintf        mc_w.l(printfa.o)
    0x08007890   0x08007890   0x0000000e   Code   RO         2115    i.__scatterload_copy  mc_w.l(handlers.o)
    0x0800789e   0x0800789e   0x00000002   Code   RO         2116    i.__scatterload_null  mc_w.l(handlers.o)
    0x080078a0   0x080078a0   0x0000000e   Code   RO         2117    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x080078ae   0x080078ae   0x00000002   PAD
    0x080078b0   0x080078b0   0x00000184   Code   RO         2038    i._fp_digits        mc_w.l(printfa.o)
    0x08007a34   0x08007a34   0x000006dc   Code   RO         2039    i._printf_core      mc_w.l(printfa.o)
    0x08008110   0x08008110   0x00000024   Code   RO         2040    i._printf_post_padding  mc_w.l(printfa.o)
    0x08008134   0x08008134   0x0000002e   Code   RO         2041    i._printf_pre_padding  mc_w.l(printfa.o)
    0x08008162   0x08008162   0x0000000a   Code   RO         2043    i._sputc            mc_w.l(printfa.o)
    0x0800816c   0x0800816c   0x0000000c   Code   RO         1788    i.putchar           mc_w.l(putchar.o)
    0x08008178   0x08008178   0x00000024   Code   RO         1786    i.puts              mc_w.l(puts.o)
    0x0800819c   0x0800819c   0x00000004   Data   RO          707    .rodata.ADCPrescTable  stm32f10x_rcc.o
    0x080081a0   0x080081a0   0x00000010   Data   RO          706    .rodata.APBAHBPrescTable  stm32f10x_rcc.o
    0x080081b0   0x080081b0   0x000011d0   Data   RO         1713    .rodata.ASCII16x24_Table  fonts.o
    0x08009380   0x08009380   0x000023a0   Data   RO         1714    .rodata.ASCII24x32_Table  fonts.o
    0x0800b720   0x0800b720   0x000005f0   Data   RO         1712    .rodata.ASCII8x16_Table  fonts.o
    0x0800bd10   0x0800bd10   0x0000000d   Data   RO         1684    .rodata.LfnOfs      ff.o
    0x0800bd1d   0x0800bd1d   0x00000003   PAD
    0x0800bd20   0x0800bd20   0x00000050   Data   RO         1271    .rodata.aSRC_Cont_Buffer  dma_book.o
    0x0800bd70   0x0800bd70   0x00000016   Data   RO         1683    .rodata.f_mkfs.cst  ff.o
    0x0800bd86   0x0800bd86   0x000003dc   Data   RO         1700    .rodata.ff_wtoupper.lower  cc936.o
    0x0800c162   0x0800c162   0x000003dc   Data   RO         1701    .rodata.ff_wtoupper.upper  cc936.o
    0x0800c53e   0x0800c53e   0x00015484   Data   RO         1698    .rodata.oem2uni     cc936.o
    0x080219c2   0x080219c2   0x00000003   Data   RO         1292    .rodata.str1.1      i2c_book.o
    0x080219c5   0x080219c5   0x0000001c   Data   RO         1322    .rodata.str1.1      i2c_soft_book.o
    0x080219e1   0x080219e1   0x00000179   Data   RO         1383    .rodata.str1.1      fatfs_book.o
    0x08021b5a   0x08021b5a   0x00000015   Data   RO         1402    .rodata.str1.1      sram_book.o
    0x08021b6f   0x08021b6f   0x0000002c   Data   RO         1518    .rodata.str1.1      lcd_pagehtml_book.o
    0x08021b9b   0x08021b9b   0x00000023   Data   RO         1751    .rodata.str1.1      main.o
    0x08021bbe   0x08021bbe   0x00000016   Data   RO         1682    .rodata.str2.2      ff.o
    0x08021bd4   0x08021bd4   0x00015484   Data   RO         1699    .rodata.uni2oem     cc936.o
    0x08037058   0x08037058   0x00000020   Data   RO         2114    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08037078, Size: 0x00009448, Max: 0x00010000, ABSOLUTE, COMPRESSED[0x000001a0])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW         2085    .data               mc_w.l(stdout.o)
    0x20000004   COMPRESSED   0x00000006   Data   RW         1427    .data..L_MergedGlobals  lcd_book.o
    0x2000000a   COMPRESSED   0x00000002   PAD
    0x2000000c   COMPRESSED   0x00000008   Data   RW         1716    .data.Font16x24     fonts.o
    0x20000014   COMPRESSED   0x00000008   Data   RW         1717    .data.Font24x32     fonts.o
    0x2000001c   COMPRESSED   0x00000008   Data   RW         1715    .data.Font8x16      fonts.o
    0x20000024   COMPRESSED   0x00000004   Data   RW         1496    .data.LCD_Currentfonts  lcd_draw_book.o
    0x20000028   COMPRESSED   0x00000004   Data   RW         1359    .data.SPITimeout    spi_book.o
    0x2000002c   COMPRESSED   0x00000004   Data   RW           15    .data.SystemCoreClock  system_stm32f10x.o
    0x20000030   COMPRESSED   0x000000c0   Data   RW         1552    .data.strXPT2046_TouchPara  xpt2046_lcd_function_book.o
    0x200000f0   COMPRESSED   0x00000800   Data   RW         1517    .data.test_modu2    lcd_pagehtml_book.o
    0x200008f0   COMPRESSED   0x00000008   Data   RW         1746    .data.writeData     main.o
    0x200008f8   COMPRESSED   0x00000008   Data   RW         1748    .data.writeData2    main.o
    0x20000900        -       0x00000006   Zero   RW         1175    .bss..L_MergedGlobals  key_book.o
    0x20000906   COMPRESSED   0x00000002   PAD
    0x20000908        -       0x00000008   Zero   RW         1224    .bss..L_MergedGlobals  systick_book.o
    0x20000910        -       0x00000008   Zero   RW         1273    .bss..L_MergedGlobals  dma_book.o
    0x20000918        -       0x00000028   Zero   RW         1387    .bss..L_MergedGlobals  fatfs_book.o
    0x20000940        -       0x00000004   Zero   RW         1499    .bss..L_MergedGlobals  lcd_draw_book.o
    0x20000944        -       0x00000044   Zero   RW         1553    .bss..L_MergedGlobals  xpt2046_lcd_function_book.o
    0x20000988        -       0x0000000c   Zero   RW         1685    .bss..L_MergedGlobals  ff.o
    0x20000994        -       0x00000001   Zero   RW         1718    .bss.GetGBKCode_from_EXFlash.everRead  fonts.o
    0x20000995   COMPRESSED   0x00000001   PAD
    0x20000996        -       0x00000002   Zero   RW         1293    .bss.I2CTimeout     i2c_book.o
    0x20000998        -       0x00000007   Zero   RW         1747    .bss.ReadData       main.o
    0x2000099f        -       0x00001000   Zero   RW         1749    .bss.Read_SPI_Data  main.o
    0x2000199f   COMPRESSED   0x00000001   PAD
    0x200019a0        -       0x00000050   Zero   RW         1272    .bss.aDST_Buffer    dma_book.o
    0x200019f0        -       0x00001024   Zero   RW         1384    .bss.fnew           fatfs_book.o
    0x20002a14        -       0x00001030   Zero   RW         1382    .bss.fs             fatfs_book.o
    0x20003a44        -       0x000001ff   Zero   RW         1386    .bss.scan_file.lfn  fatfs_book.o
    0x20003c43        -       0x00000001   Zero   RW         1551    .bss.ucXPT2046_TouchFlag  xpt2046_lcd_function_book.o
    0x20003c44        -       0x00001000   Zero   RW         1750    .bss.write_SPI_Data  main.o
    0x20004c44        -       0x00004000   Zero   RW         1497    .bss.zoomBuff       lcd_draw_book.o
    0x20008c44        -       0x00000400   Zero   RW         1498    .bss.zoomTempBuff   lcd_draw_book.o
    0x20009044   COMPRESSED   0x00000004   PAD
    0x20009048        -       0x00000400   Zero   RW            1    STACK               startup_stm32f10x_hd.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       160         16     176320          0          0       1751   cc936.o
       180          8          0          0          0       2261   diskio.o
       560        172         80          0         88       4073   dma_book.o
       220         12          0          0          0       3588   exit_book.o
      1440        668        377          0       8827       4932   fatfs_book.o
      9544        158         57          0         12      38889   ff.o
        72         12      15200         24          1       1435   fonts.o
      1172        208          3          0          2       4958   i2c_book.o
      1084        272         28          0          0       5286   i2c_soft_book.o
       284         20          0          0          6       2859   key_book.o
      1038         40          0          6          0      10406   lcd_book.o
      2322         68          0          4      17412      14843   lcd_draw_book.o
      2216        432         44       2048          0       3060   lcd_pagehtml_book.o
       198          8          0          0          0       2411   led_book.o
      1284        640         35         16       8199       3213   main.o
       100         12          0          0          0       3156   misc.o
       114          0          0          0          0       2394   rcc_book.o
       884        168          0          4          0       5694   spi_book.o
      1064        184         21          0          0       4069   sram_book.o
        36          8        304          0       1024        856   startup_stm32f10x_hd.o
       118          4          0          0          0       3665   stm32f10x_dma.o
       132          8          0          0          0       2810   stm32f10x_exti.o
        40          4          0          0          0       8108   stm32f10x_flash.o
       212         12          0          0          0       7686   stm32f10x_fsmc.o
       248          4          0          0          0       5835   stm32f10x_gpio.o
       388         12          0          0          0       8204   stm32f10x_i2c.o
        16          0          0          0          0        923   stm32f10x_it.o
       480         48         20          0          0       8360   stm32f10x_rcc.o
        90          0          0          0          0       6787   stm32f10x_spi.o
       324          4          0          0          0       7758   stm32f10x_usart.o
       240         20          0          4          0       2558   system_stm32f10x.o
       268         28          0          0          8       5131   systick_book.o
       328         16          0          0          0       5859   usart_book.o
       400         48          0          0          0       2761   xpt2046_lcd_book.o
      1084         72          0        192         69       5421   xpt2046_lcd_function_book.o

    ----------------------------------------------------------------------
     28382       3386     192524       2300      35656     202000   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        42          0          3          2          8          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0        108   memseta.o
      2308         96          0          0          0        604   printfa.o
        12          6          0          0          0         68   putchar.o
        36          6          0          0          0         80   puts.o
         0          0          0          4          0          0   stdout.o
        18          0          0          0          0         68   strcpy.o
        14          0          0          0          0         68   strlen.o
        44          0          0          0          0         80   uidiv.o
        98          0          0          0          0         92   uldiv.o
        48          0          0          0          0         68   cdrcmple.o
       334          0          0          0          0        148   dadd.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        48          0          0          0          0         68   dfixul.o
       228          0          0          0          0         96   dmul.o
        38          0          0          0          0         68   f2d.o
       176          0          0          0          0        140   fadd.o
       124          0          0          0          0         88   fdiv.o
       110          0          0          0          0        168   fepilogue.o
        50          0          0          0          0         68   ffixi.o
        18          0          0          0          0         68   fflti.o
       100          0          0          0          0         76   fmul.o

    ----------------------------------------------------------------------
      4494        124          0          4          0       2772   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      2808        124          0          4          0       1440   mc_w.l
      1682          0          0          0          0       1332   mf_w.l

    ----------------------------------------------------------------------
      4494        124          0          4          0       2772   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     32876       3510     192524       2304      35656     203020   Grand Totals
     32876       3510     192524        416      35656     203020   ELF Image Totals (compressed)
     32876       3510     192524        416          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)               225400 ( 220.12kB)
    Total RW  Size (RW Data + ZI Data)             37960 (  37.07kB)
    Total ROM Size (Code + RO Data + RW Data)     225816 ( 220.52kB)

==============================================================================

